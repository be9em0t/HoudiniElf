[
  {
    "category_name": "core",
    "category_url": "https://qgis.org/pyqgis/3.40/core/index.html",
    "nodes": [
      {
        "node_name": "NULL",
        "node_url": "https://qgis.org/pyqgis/3.40/core/NULL.html",
        "description": ""
      },
      {
        "node_name": "ProjectDirtyBlocker",
        "node_url": "https://qgis.org/pyqgis/3.40/core/ProjectDirtyBlocker.html",
        "description": "Context manager used to block project setDirty calls."
      },
      {
        "node_name": "Qgis",
        "node_url": "https://qgis.org/pyqgis/3.40/core/Qgis.html",
        "description": "TheQgisclass provides global constants for use throughout the application."
      },
      {
        "node_name": "QgsAbstractCacheIndex",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractCacheIndex.html",
        "description": "Abstract base class for cache indices"
      },
      {
        "node_name": "QgsAbstractContentCacheBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractContentCacheBase.html",
        "description": "A QObject derived base class forQgsAbstractContentCache."
      },
      {
        "node_name": "QgsAbstractContentCacheEntry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractContentCacheEntry.html",
        "description": "Base class for entries in aQgsAbstractContentCache."
      },
      {
        "node_name": "QgsAbstractFeatureIterator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractFeatureIterator.html",
        "description": "Internal feature iterator to be implemented within data providers"
      },
      {
        "node_name": "QgsAbstractFeatureIteratorFromSourceQgsVectorLayerFeatureSourceBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractFeatureIteratorFromSourceQgsVectorLayerFeatureSourceBase.html",
        "description": "Helper template that cares of two things: 1. automatic deletion of source if owned by iterator, 2. notification of open/closed iterator."
      },
      {
        "node_name": "QgsAbstractFeatureSource",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractFeatureSource.html",
        "description": "Base class that can be used for any class that is capable of returning"
      },
      {
        "node_name": "QgsAbstractGeometrySimplifier",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractGeometrySimplifier.html",
        "description": "Abstract base class for simplify geometries using a specific algorithm"
      },
      {
        "node_name": "QgsAbstractPropertyCollection",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractPropertyCollection.html",
        "description": "Abstract base class forQgsPropertyCollectionlike objects."
      },
      {
        "node_name": "QgsAggregateCalculator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAggregateCalculator.html",
        "description": "Utility class for calculating aggregates for a field (or expression) over the features from a vector layer."
      },
      {
        "node_name": "QgsAlignRasterData",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAlignRasterData.html",
        "description": "TheQgsAlignRasterDataclass provides data structures and enums for align raster tool."
      },
      {
        "node_name": "QgsAnimatedIcon",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnimatedIcon.html",
        "description": "Animated icon is keeping an animation running if there are listeners connected to frameChanged"
      },
      {
        "node_name": "QgsApplication",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsApplication.html",
        "description": "Extends QApplication to provide access to QGIS specific resources such as theme paths, database paths etc."
      },
      {
        "node_name": "QgsArchive",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsArchive.html",
        "description": "Class allowing to manage the zip/unzip actions"
      },
      {
        "node_name": "QgsAttributeTableConfig",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAttributeTableConfig.html",
        "description": "This is a container for configuration of the attribute table. The configuration is specific for one vector layer."
      },
      {
        "node_name": "QgsAuxiliaryStorage",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAuxiliaryStorage.html",
        "description": "Class providing some utility methods to manage auxiliary storage."
      },
      {
        "node_name": "QgsBearingUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBearingUtils.html",
        "description": "Utilities for calculating bearings and directions."
      },
      {
        "node_name": "QgsBlockingProcess",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBlockingProcess.html",
        "description": "A thread safe class for performing blocking (sync) execution of external processes."
      },
      {
        "node_name": "QgsBookmark",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBookmark.html",
        "description": "Represents a spatial bookmark, with a name, CRS and extent."
      },
      {
        "node_name": "QgsBookmarkManager",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBookmarkManager.html",
        "description": "Manages storage of a set of bookmarks."
      },
      {
        "node_name": "QgsBookmarkManagerModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBookmarkManagerModel.html",
        "description": "Implements a model for the contents ofQgsBookmarkManagerobjects."
      },
      {
        "node_name": "QgsBookmarkManagerProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBookmarkManagerProxyModel.html",
        "description": "A QSortFilterProxyModel subclass for sorting the entries in aQgsBookmarkManagerModel."
      },
      {
        "node_name": "QgsCacheIndexFeatureId",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCacheIndexFeatureId.html",
        "description": ""
      },
      {
        "node_name": "QgsCachedFeatureIterator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCachedFeatureIterator.html",
        "description": "Delivers features from the cache"
      },
      {
        "node_name": "QgsCachedFeatureWriterIterator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCachedFeatureWriterIterator.html",
        "description": "Uses another iterator as backend and writes features to the cache"
      },
      {
        "node_name": "QgsCadUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCadUtils.html",
        "description": "TheQgsCadUtilsclass provides routines for CAD editing."
      },
      {
        "node_name": "QgsClipper",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsClipper.html",
        "description": "A class to trim lines and polygons to within a rectangular region."
      },
      {
        "node_name": "QgsColorBrewerColorRamp",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsColorBrewerColorRamp.html",
        "description": "Color ramp utilising “Color Brewer” preset color schemes."
      },
      {
        "node_name": "QgsColorRamp",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsColorRamp.html",
        "description": "Abstract base class for color ramps"
      },
      {
        "node_name": "QgsColorRampTransformer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsColorRampTransformer.html",
        "description": "QgsPropertyTransformersubclass for transforming a numeric value into a color from a color ramp."
      },
      {
        "node_name": "QgsColorScheme",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsColorScheme.html",
        "description": "Abstract base class for color schemes"
      },
      {
        "node_name": "QgsColorSchemeRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsColorSchemeRegistry.html",
        "description": "Registry of color schemes"
      },
      {
        "node_name": "QgsColorUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsColorUtils.html",
        "description": "Contains utility functions for working with colors."
      },
      {
        "node_name": "QgsCommandLineUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCommandLineUtils.html",
        "description": "Utils class for QGIS command line tools."
      },
      {
        "node_name": "QgsConditionalLayerStyles",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsConditionalLayerStyles.html",
        "description": "TheQgsConditionalLayerStylesclass holds conditional style information for a layer. This includes field styles and full row styles."
      },
      {
        "node_name": "QgsConditionalStyle",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsConditionalStyle.html",
        "description": "Conditional styling for a rule."
      },
      {
        "node_name": "QgsConnectionRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsConnectionRegistry.html",
        "description": "A registry for saved data provider connections, allowing retrieval of saved connections by name and provider type."
      },
      {
        "node_name": "QgsCoordinateFormatter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCoordinateFormatter.html",
        "description": "Contains methods for converting coordinates for display in various formats."
      },
      {
        "node_name": "QgsCopyFileTask",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCopyFileTask.html",
        "description": "Task to copy a file on disk"
      },
      {
        "node_name": "QgsCptCityColorRamp",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCptCityColorRamp.html",
        "description": "A color ramp from the CPT City collection."
      },
      {
        "node_name": "QgsCredentials",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCredentials.html",
        "description": "Interface for requesting credentials in QGIS in GUI independent way."
      },
      {
        "node_name": "QgsCredentialsConsole",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCredentialsConsole.html",
        "description": "Implementation of credentials interface for the console"
      },
      {
        "node_name": "QgsCredentialsNone",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCredentialsNone.html",
        "description": "Default implementation of credentials interface"
      },
      {
        "node_name": "QgsCsException",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCsException.html",
        "description": "Custom exception class for Coordinate Reference System related exceptions."
      },
      {
        "node_name": "QgsCurveTransform",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCurveTransform.html",
        "description": "Handles scaling of input values to output values by using a curve created from smoothly joining a number of set control points."
      },
      {
        "node_name": "QgsCustomColorScheme",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCustomColorScheme.html",
        "description": "A color scheme which contains custom colors set through QGIS app options dialog."
      },
      {
        "node_name": "QgsDartMeasurement",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDartMeasurement.html",
        "description": "Emits dart measurements for display in CDash reports."
      },
      {
        "node_name": "QgsDataDefinedSizeLegend",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDataDefinedSizeLegend.html",
        "description": "Object that keeps configuration of appearance of marker symbol’s data-defined size in legend."
      },
      {
        "node_name": "QgsDataProviderElevationProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDataProviderElevationProperties.html",
        "description": "Base class for handling elevation related properties for a data provider."
      },
      {
        "node_name": "QgsDataProviderTemporalCapabilities",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDataProviderTemporalCapabilities.html",
        "description": "Base class for handling properties relating to a data provider’s temporal capabilities."
      },
      {
        "node_name": "QgsDataSourceUri",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDataSourceUri.html",
        "description": "Class for storing the component parts of a RDBMS data source URI (e.g. a Postgres data source)."
      },
      {
        "node_name": "QgsDatabaseFilterProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDatabaseFilterProxyModel.html",
        "description": "A class that implements a custom filter and can be used as a proxy forQgsDbTableModel"
      },
      {
        "node_name": "QgsDatabaseQueryLog",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDatabaseQueryLog.html",
        "description": "Handles logging of database queries."
      },
      {
        "node_name": "QgsDatabaseQueryLogEntry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDatabaseQueryLogEntry.html",
        "description": "Encapsulates a logged database query."
      },
      {
        "node_name": "QgsDatabaseSchemaModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDatabaseSchemaModel.html",
        "description": "A model containing schemas from a database connection."
      },
      {
        "node_name": "QgsDatabaseTableModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDatabaseTableModel.html",
        "description": "A model containing tables from a database connection."
      },
      {
        "node_name": "QgsDateRange",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDateRange.html",
        "description": "Constructor for QgsTemporalRange. Thebeginandendare specified, and optionally whether or not these bounds are included in the range."
      },
      {
        "node_name": "QgsDateTimeRange",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDateTimeRange.html",
        "description": "Constructor for QgsTemporalRange. Thebeginandendare specified, and optionally whether or not these bounds are included in the range."
      },
      {
        "node_name": "QgsDateTimeStatisticalSummary",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDateTimeStatisticalSummary.html",
        "description": "Calculator for summary statistics and aggregates for a list of datetimes."
      },
      {
        "node_name": "QgsDefaultMeshLayerLegend",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDefaultMeshLayerLegend.html",
        "description": "Default legend implementation for mesh layers"
      },
      {
        "node_name": "QgsDefaultPointCloudLayerLegend",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDefaultPointCloudLayerLegend.html",
        "description": "Default legend implementation for point cloud layers"
      },
      {
        "node_name": "QgsDefaultRasterLayerLegend",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDefaultRasterLayerLegend.html",
        "description": "Default legend implementation for raster layers"
      },
      {
        "node_name": "QgsDefaultValue",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDefaultValue.html",
        "description": "TheQgsDefaultValueclass provides a container for managing client side default values for fields."
      },
      {
        "node_name": "QgsDefaultVectorLayerLegend",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDefaultVectorLayerLegend.html",
        "description": "Default legend implementation for vector layers"
      },
      {
        "node_name": "QgsDiagramInterpolationSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDiagramInterpolationSettings.html",
        "description": "Additional diagram settings for interpolated size rendering."
      },
      {
        "node_name": "QgsDiagramLayerSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDiagramLayerSettings.html",
        "description": "Stores the settings for rendering of all diagrams for a layer."
      },
      {
        "node_name": "QgsDiagramRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDiagramRenderer.html",
        "description": "Evaluates and returns the diagram settings relating to a diagram for a specific feature."
      },
      {
        "node_name": "QgsDiagramSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDiagramSettings.html",
        "description": "Stores the settings for rendering a single diagram."
      },
      {
        "node_name": "QgsDistanceArea",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDistanceArea.html",
        "description": "A general purpose distance and area calculator, capable of performing ellipsoid based calculations."
      },
      {
        "node_name": "QgsDoubleRange",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDoubleRange.html",
        "description": "QgsRangewhich stores a range of double values."
      },
      {
        "node_name": "QgsEditError",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsEditError.html",
        "description": ""
      },
      {
        "node_name": "QgsEditorWidgetSetup",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsEditorWidgetSetup.html",
        "description": "Holder for the widget type and its configuration for a field."
      },
      {
        "node_name": "QgsElevationMap",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsElevationMap.html",
        "description": "Stores digital elevation model in a raster image which may get updated as a part of map layer rendering process."
      },
      {
        "node_name": "QgsElevationShadingRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsElevationShadingRenderer.html",
        "description": "This class can render elevation shading on an image with different methods (eye dome lighting, hillshading, …)."
      },
      {
        "node_name": "QgsElevationUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsElevationUtils.html",
        "description": "Contains utility methods for working with elevation from layers and projects."
      },
      {
        "node_name": "QgsError",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsError.html",
        "description": "A container for error messages."
      },
      {
        "node_name": "QgsErrorMessage",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsErrorMessage.html",
        "description": "represents single error message."
      },
      {
        "node_name": "QgsException",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsException.html",
        "description": "Defines a QGIS exception class."
      },
      {
        "node_name": "QgsExpressionContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpressionContext.html",
        "description": "Expression contexts are used to encapsulate the parameters around which aQgsExpressionshould be evaluated."
      },
      {
        "node_name": "QgsExpressionContextGenerator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpressionContextGenerator.html",
        "description": "Abstract interface for generating an expression context."
      },
      {
        "node_name": "QgsExpressionContextScope",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpressionContextScope.html",
        "description": "Single scope for storing variables and functions for use within aQgsExpressionContext."
      },
      {
        "node_name": "QgsExpressionContextScopeGenerator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpressionContextScopeGenerator.html",
        "description": "Abstract interface for generating an expression context scope."
      },
      {
        "node_name": "QgsExpressionFieldBuffer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpressionFieldBuffer.html",
        "description": "Buffers information about expression fields for a vector layer."
      },
      {
        "node_name": "QgsFeature",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFeature.html",
        "description": "The feature class encapsulates a single feature including its unique ID, geometry and a list of field/values attributes."
      },
      {
        "node_name": "QgsFeatureFilterModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFeatureFilterModel.html",
        "description": "Provides a list of features based on filter conditions. Features are fetched asynchronously."
      },
      {
        "node_name": "QgsFeatureFilterProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFeatureFilterProvider.html",
        "description": "Abstract interface for use by classes that filter the features or attributes of a layer."
      },
      {
        "node_name": "QgsFeatureIterator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFeatureIterator.html",
        "description": "Wrapper for iterator of features from vector data provider or vector"
      },
      {
        "node_name": "QgsFeaturePickerModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFeaturePickerModel.html",
        "description": "Provides a list of features based on filter conditions. Features are fetched asynchronously."
      },
      {
        "node_name": "QgsFeaturePickerModelBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFeaturePickerModelBase.html",
        "description": "Provides a list of features based on filter conditions."
      },
      {
        "node_name": "QgsFeatureRequest",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFeatureRequest.html",
        "description": "This class wraps a request for features to a vector layer (or directly its vector data provider)."
      },
      {
        "node_name": "QgsFeatureSink",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFeatureSink.html",
        "description": "An interface for objects which accept features via addFeature(s) methods."
      },
      {
        "node_name": "QgsFeatureSource",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFeatureSource.html",
        "description": "An interface for objects which provide features via a getFeatures method."
      },
      {
        "node_name": "QgsFeatureStore",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFeatureStore.html",
        "description": "A container for features with the same fields and crs."
      },
      {
        "node_name": "QgsFeedback",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFeedback.html",
        "description": "Base class for feedback objects to be used for cancellation of something running in a worker thread."
      },
      {
        "node_name": "QgsField",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsField.html",
        "description": "Encapsulate a field in an attribute table or data source."
      },
      {
        "node_name": "QgsFieldConstraints",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFieldConstraints.html",
        "description": "Stores information about constraints which may be present on a field."
      },
      {
        "node_name": "QgsFieldFormatter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFieldFormatter.html",
        "description": "A field formatter helps to handle and display values for a field."
      },
      {
        "node_name": "QgsFieldFormatterContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFieldFormatterContext.html",
        "description": "A context for field formatter containing information like the project"
      },
      {
        "node_name": "QgsFieldFormatterRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFieldFormatterRegistry.html",
        "description": "TheQgsFieldFormatterRegistrymanages registered classes ofQgsFieldFormatter."
      },
      {
        "node_name": "QgsFieldModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFieldModel.html",
        "description": "TheQgsFieldModelclass is a model to display the list of fields in widgets (optionally associated with a vector layer)."
      },
      {
        "node_name": "QgsFieldProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFieldProxyModel.html",
        "description": "TheQgsFieldProxyModelclass provides an easy to use model to display the list of fields of a layer."
      },
      {
        "node_name": "QgsFields",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFields.html",
        "description": "Container of fields for a vector layer."
      },
      {
        "node_name": "QgsFileFilterGenerator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFileFilterGenerator.html",
        "description": "Abstract interface for classes which generate a file filter string."
      },
      {
        "node_name": "QgsFileUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFileUtils.html",
        "description": "Class for file utilities."
      },
      {
        "node_name": "QgsFontUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFontUtils.html",
        "description": "Contains utility functions for working with fonts."
      },
      {
        "node_name": "QgsGenericNumericTransformer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGenericNumericTransformer.html",
        "description": "QgsPropertyTransformersubclass for scaling an input numeric value into an output numeric value."
      },
      {
        "node_name": "QgsGeometryOptions",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGeometryOptions.html",
        "description": "TheQgsGeometryOptionsclass contains options to automatically adjust geometries to constraints on a layer."
      },
      {
        "node_name": "QgsGeometryValidator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGeometryValidator.html",
        "description": "Constructor for QgsGeometryValidator."
      },
      {
        "node_name": "QgsGml",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGml.html",
        "description": "This class reads data from a WFS server or alternatively from a GML file."
      },
      {
        "node_name": "QgsGmlFeatureClass",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGmlFeatureClass.html",
        "description": "Description of feature class in GML"
      },
      {
        "node_name": "QgsGmlSchema",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGmlSchema.html",
        "description": ""
      },
      {
        "node_name": "QgsGplColorScheme",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGplColorScheme.html",
        "description": "A color scheme which stores its colors in a gpl palette file."
      },
      {
        "node_name": "QgsGradientColorRamp",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGradientColorRamp.html",
        "description": "Gradient color ramp, which smoothly interpolates between two colors and also supports optional extra color stops."
      },
      {
        "node_name": "QgsGradientStop",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGradientStop.html",
        "description": "Represents a color stop within aQgsGradientColorRampcolor ramp."
      },
      {
        "node_name": "QgsGroupLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGroupLayer.html",
        "description": "A map layer which consists of a set of child layers, where all component layers are rendered as a single flattened object during map renders."
      },
      {
        "node_name": "QgsHistogram",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsHistogram.html",
        "description": "Calculator for a numeric histogram from a list of values."
      },
      {
        "node_name": "QgsHstoreUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsHstoreUtils.html",
        "description": ""
      },
      {
        "node_name": "QgsHtmlUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsHtmlUtils.html",
        "description": "Class for HTML utilities."
      },
      {
        "node_name": "QgsIconUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsIconUtils.html",
        "description": "Contains utility functions for working with icons."
      },
      {
        "node_name": "QgsIdentifyContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsIdentifyContext.html",
        "description": "Identify contexts are used to encapsulate the settings to be used to perform an identify action."
      },
      {
        "node_name": "QgsImageCache",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsImageCache.html",
        "description": "A cache for images derived from raster files."
      },
      {
        "node_name": "QgsIntRange",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsIntRange.html",
        "description": "QgsRangewhich stores a range of integer values."
      },
      {
        "node_name": "QgsInterval",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsInterval.html",
        "description": "A representation of the interval between two datetime values."
      },
      {
        "node_name": "QgsJsonExporter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsJsonExporter.html",
        "description": "Handles exportingQgsFeaturefeatures to GeoJSON features."
      },
      {
        "node_name": "QgsJsonUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsJsonUtils.html",
        "description": "Helper utilities for working with JSON and GeoJSON conversions."
      },
      {
        "node_name": "QgsLabelBlockingRegion",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLabelBlockingRegion.html",
        "description": "Label blocking region (in map coordinates and CRS)."
      },
      {
        "node_name": "QgsLayerDefinition",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayerDefinition.html",
        "description": "TheQgsLayerDefinitionclass holds generic methods for loading/exporting QLR files."
      },
      {
        "node_name": "QgsLayerNotesUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayerNotesUtils.html",
        "description": "Contains utility functions for working with layer notes."
      },
      {
        "node_name": "QgsLayoutChecker",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutChecker.html",
        "description": "Renders a layout to an image and compares with an expected output"
      },
      {
        "node_name": "QgsLegendRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLegendRenderer.html",
        "description": "Handles automatic layout and rendering of legends."
      },
      {
        "node_name": "QgsLegendSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLegendSettings.html",
        "description": "TheQgsLegendSettingsclass stores the appearance and layout settings for legend drawing withQgsLegendRenderer."
      },
      {
        "node_name": "QgsLegendStyle",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLegendStyle.html",
        "description": "Contains detailed styling information relating to how a layout legend should be rendered."
      },
      {
        "node_name": "QgsLimitedRandomColorRamp",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLimitedRandomColorRamp.html",
        "description": "Constrained random color ramp, which returns random colors based on preset parameters."
      },
      {
        "node_name": "QgsLinearlyInterpolatedDiagramRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLinearlyInterpolatedDiagramRenderer.html",
        "description": "Alters the size of rendered diagrams using a linear scaling."
      },
      {
        "node_name": "QgsLocalDefaultSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLocalDefaultSettings.html",
        "description": "Contains local default settings which should be respected when creating new objects such asQgsProjects."
      },
      {
        "node_name": "QgsLocalizedDataPathRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLocalizedDataPathRegistry.html",
        "description": "A registry class to hold localized data paths which can be used for basemaps, logos, etc."
      },
      {
        "node_name": "QgsLogger",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLogger.html",
        "description": "is a class to print debug/warning/error messages to the console."
      },
      {
        "node_name": "QgsMapClippingRegion",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapClippingRegion.html",
        "description": "A map clipping region (in map coordinates and CRS)."
      },
      {
        "node_name": "QgsMapClippingUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapClippingUtils.html",
        "description": "Utility functions for use when clipping map renders."
      },
      {
        "node_name": "QgsMapDecoration",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapDecoration.html",
        "description": "Interface for map decorations."
      },
      {
        "node_name": "QgsMapHitTest",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapHitTest.html",
        "description": "Class that runs a hit test with given map settings. Based on the hit test it returns which symbols will be visible on the map - this is useful for content based legend."
      },
      {
        "node_name": "QgsMapHitTestTask",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapHitTestTask.html",
        "description": "Executes aQgsMapHitTestin a background thread."
      },
      {
        "node_name": "QgsMapLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapLayer.html",
        "description": "Base class for all map layer types. This is the base class for all map layer types (vector, raster)."
      },
      {
        "node_name": "QgsMapLayerDependency",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapLayerDependency.html",
        "description": "This class models dependencies with or between map layers."
      },
      {
        "node_name": "QgsMapLayerElevationProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapLayerElevationProperties.html",
        "description": "Base class for storage of map layer elevation properties."
      },
      {
        "node_name": "QgsMapLayerFactory",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapLayerFactory.html",
        "description": "Contains utility functions for creating map layers."
      },
      {
        "node_name": "QgsMapLayerLegend",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapLayerLegend.html",
        "description": "TheQgsMapLayerLegendclass is abstract interface for implementations of legends for one map layer."
      },
      {
        "node_name": "QgsMapLayerLegendUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapLayerLegendUtils.html",
        "description": "Miscellaneous utility functions for handling of map layer legend"
      },
      {
        "node_name": "QgsMapLayerModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapLayerModel.html",
        "description": "TheQgsMapLayerModelclass is a model to display layers in widgets."
      },
      {
        "node_name": "QgsMapLayerProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapLayerProxyModel.html",
        "description": "TheQgsMapLayerProxyModelclass provides an easy to use model to display the list of layers in widgets."
      },
      {
        "node_name": "QgsMapLayerRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapLayerRenderer.html",
        "description": "Base class for utility classes that encapsulate information necessary for rendering of map layers."
      },
      {
        "node_name": "QgsMapLayerSelectionProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapLayerSelectionProperties.html",
        "description": "Base class for storage of map layer selection properties."
      },
      {
        "node_name": "QgsMapLayerServerProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapLayerServerProperties.html",
        "description": "Manages QGIS Server properties for a map layer"
      },
      {
        "node_name": "QgsMapLayerStore",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapLayerStore.html",
        "description": "A storage object for map layers, in which the layers are owned by the store and have their lifetime bound to the store."
      },
      {
        "node_name": "QgsMapLayerStyle",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapLayerStyle.html",
        "description": "Stores style information (renderer, opacity, labeling, diagrams etc.) applicable to a map layer."
      },
      {
        "node_name": "QgsMapLayerStyleManager",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapLayerStyleManager.html",
        "description": "Management of styles for use with one map layer"
      },
      {
        "node_name": "QgsMapLayerStyleOverride",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapLayerStyleOverride.html",
        "description": "Restore overridden layer style on destruction."
      },
      {
        "node_name": "QgsMapLayerTemporalProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapLayerTemporalProperties.html",
        "description": "Base class for storage of map layer temporal properties."
      },
      {
        "node_name": "QgsMapLayerUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapLayerUtils.html",
        "description": "Contains utility functions for working with map layers."
      },
      {
        "node_name": "QgsMapSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapSettings.html",
        "description": "TheQgsMapSettingsclass contains configuration for rendering of the map."
      },
      {
        "node_name": "QgsMapSettingsUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapSettingsUtils.html",
        "description": "Utilities for map settings."
      },
      {
        "node_name": "QgsMapThemeCollection",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapThemeCollection.html",
        "description": "Container class that allows storage of map themes consisting of visible map layers and layer styles."
      },
      {
        "node_name": "QgsMapToPixel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapToPixel.html",
        "description": "Perform transforms between map coordinates and device coordinates."
      },
      {
        "node_name": "QgsMapToPixelSimplifier",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapToPixelSimplifier.html",
        "description": "Implementation of GeometrySimplifier using the “MapToPixel” algorithm"
      },
      {
        "node_name": "QgsMapUnitScale",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapUnitScale.html",
        "description": "Struct for storing maximum and minimum scales for measurements in map"
      },
      {
        "node_name": "QgsMargins",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMargins.html",
        "description": "Constructs a margins object with all margins set to 0."
      },
      {
        "node_name": "QgsMaskIdProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMaskIdProvider.html",
        "description": "This class allows the creation of mask ids based on the different label layers and to give a mask id from a label layer."
      },
      {
        "node_name": "QgsMaskRenderSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMaskRenderSettings.html",
        "description": "Contains settings regarding how masks are calculated and handled during a map render."
      },
      {
        "node_name": "QgsMatrix4x4",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMatrix4x4.html",
        "description": "A simple 4x4 matrix implementation useful for transformation in 3D space."
      },
      {
        "node_name": "QgsMeshUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshUtils.html",
        "description": ""
      },
      {
        "node_name": "QgsMessageLog",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMessageLog.html",
        "description": "Interface for logging messages from QGIS in GUI independent way."
      },
      {
        "node_name": "QgsMessageLogConsole",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMessageLogConsole.html",
        "description": "Default implementation of message logging interface"
      },
      {
        "node_name": "QgsMessageLogNotifyBlocker",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMessageLogNotifyBlocker.html",
        "description": "Temporarily blocks the applicationQgsMessageLog(seeQgsApplication.messageLog()) from emitting the messageReceived( bool ) signal for the lifetime of the object."
      },
      {
        "node_name": "QgsMessageOutput",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMessageOutput.html",
        "description": "Interface for showing messages from QGIS in GUI independent way."
      },
      {
        "node_name": "QgsMessageOutputConsole",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMessageOutputConsole.html",
        "description": "Default implementation of message output interface"
      },
      {
        "node_name": "QgsMimeDataUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMimeDataUtils.html",
        "description": "Contains utility functions for working with MIME data."
      },
      {
        "node_name": "QgsMultiRenderChecker",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMultiRenderChecker.html",
        "description": "This class allows checking rendered images against comparison images."
      },
      {
        "node_name": "QgsNotSupportedException",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNotSupportedException.html",
        "description": "Custom exception class which is raised when an operation is not supported."
      },
      {
        "node_name": "QgsObjectCustomProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsObjectCustomProperties.html",
        "description": "Simple key-value store (keys = strings, values = variants) that supports loading/saving to/from XML in verbatim <customproperties> endverbatim element."
      },
      {
        "node_name": "QgsOfflineEditing",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsOfflineEditing.html",
        "description": "Handles logic relating to synchronizing online and offline copies of layer data."
      },
      {
        "node_name": "QgsOgcUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsOgcUtils.html",
        "description": "TheQgsOgcUtilsclass provides various utility functions for conversion between OGC (Open Geospatial Consortium) standards and QGIS internal representations."
      },
      {
        "node_name": "QgsOptionalExpression",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsOptionalExpression.html",
        "description": "An expression with an additional enabled flag."
      },
      {
        "node_name": "QgsOptionalQgsExpressionBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsOptionalQgsExpressionBase.html",
        "description": "QgsOptionalis a container for other classes and adds an additional enabled/disabled flag."
      },
      {
        "node_name": "QgsOwsConnection",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsOwsConnection.html",
        "description": "Connections management"
      },
      {
        "node_name": "QgsPathResolver",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPathResolver.html",
        "description": "Resolves relative paths into absolute paths and vice versa. Used for"
      },
      {
        "node_name": "QgsPluginLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPluginLayer.html",
        "description": "Base class for plugin layers. These can be implemented by plugins and registered inQgsPluginLayerRegistry."
      },
      {
        "node_name": "QgsPluginLayerRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPluginLayerRegistry.html",
        "description": "A registry of plugin layers types."
      },
      {
        "node_name": "QgsPluginLayerType",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPluginLayerType.html",
        "description": "Class for creating plugin specific layers"
      },
      {
        "node_name": "QgsPointLocator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointLocator.html",
        "description": "The class defines interface for querying point location:"
      },
      {
        "node_name": "QgsPointXY",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointXY.html",
        "description": "A class to represent a 2D point."
      },
      {
        "node_name": "QgsPolymorphicRelation",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPolymorphicRelation.html",
        "description": "A polymorphic relation consists of the same properties like a normal relation except for the referenced layer which is calculated based on one or several fields of the referencing layer."
      },
      {
        "node_name": "QgsPostgresStringUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPostgresStringUtils.html",
        "description": "TheQgsPostgresStringUtilsprovides functions to handle postgres array like formatted lists in strings."
      },
      {
        "node_name": "QgsPresetSchemeColorRamp",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPresetSchemeColorRamp.html",
        "description": "A scheme based color ramp consisting of a list of predefined colors."
      },
      {
        "node_name": "QgsProcessingException",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingException.html",
        "description": "Custom exception class for processing related exceptions."
      },
      {
        "node_name": "QgsProjectArchive",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectArchive.html",
        "description": "Class allowing to manage the zip/unzip actions on project file"
      },
      {
        "node_name": "QgsProjectColorScheme",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectColorScheme.html",
        "description": "A color scheme which contains project specific colors set through project properties dialog."
      },
      {
        "node_name": "QgsProperty",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProperty.html",
        "description": "A store for object properties."
      },
      {
        "node_name": "QgsPropertyCollection",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPropertyCollection.html",
        "description": "A grouped map of multipleQgsPropertyobjects, each referenced by a integer key value."
      },
      {
        "node_name": "QgsPropertyCollectionStack",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPropertyCollectionStack.html",
        "description": "An ordered stack ofQgsPropertyCollectioncontainers, where collections added later to the stack will take priority over earlier collections."
      },
      {
        "node_name": "QgsPropertyDefinition",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPropertyDefinition.html",
        "description": "Definition for a property."
      },
      {
        "node_name": "QgsPropertyTransformer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPropertyTransformer.html",
        "description": "Abstract base class for objects which transform the calculated value of a property. Possible uses include transformers which map a value into a scaled size or color from a gradient."
      },
      {
        "node_name": "QgsProviderConnectionException",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProviderConnectionException.html",
        "description": "Custom exception class for provider connection related exceptions."
      },
      {
        "node_name": "QgsProviderConnectionModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProviderConnectionModel.html",
        "description": "A model containing registered connection names for a specific data provider."
      },
      {
        "node_name": "QgsProxyFeatureSink",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProxyFeatureSink.html",
        "description": "A simple feature sink which proxies feature addition on to another feature sink."
      },
      {
        "node_name": "QgsProxyProgressTask",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProxyProgressTask.html",
        "description": "AQgsTaskshell which proxies progress reports."
      },
      {
        "node_name": "QgsPythonRunner",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPythonRunner.html",
        "description": "Utility class for running Python commands from various parts of QGIS."
      },
      {
        "node_name": "QgsQueryResultModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsQueryResultModel.html",
        "description": "TheQgsQueryResultModelclass is a model forQgsAbstractDatabaseProviderConnection.QueryResult"
      },
      {
        "node_name": "QgsRandomColorRamp",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRandomColorRamp.html",
        "description": "Totally random color ramp. Returns colors generated at random, but constrained to some hardcoded saturation and value ranges to prevent ugly color generation."
      },
      {
        "node_name": "QgsRangedoubleBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRangedoubleBase.html",
        "description": "A template based class for storing ranges (lower to upper values)."
      },
      {
        "node_name": "QgsRangeintBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRangeintBase.html",
        "description": "A template based class for storing ranges (lower to upper values)."
      },
      {
        "node_name": "QgsReadWriteContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsReadWriteContext.html",
        "description": "The class is used as a container of context for various read/write operations on other objects."
      },
      {
        "node_name": "QgsReadWriteContextCategoryPopper",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsReadWriteContextCategoryPopper.html",
        "description": "Allows entering a context category and takes care of leaving this category on deletion of the class. This would happen when it gets out of scope."
      },
      {
        "node_name": "QgsReadWriteLocker",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsReadWriteLocker.html",
        "description": "TheQgsReadWriteLockerclass is a convenience class that simplifies locking and unlocking QReadWriteLocks."
      },
      {
        "node_name": "QgsRecentColorScheme",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRecentColorScheme.html",
        "description": "A color scheme which contains the most recently used colors."
      },
      {
        "node_name": "QgsRecentStyleHandler",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRecentStyleHandler.html",
        "description": "Handles and tracks style items recently used in the QGIS GUI."
      },
      {
        "node_name": "QgsRelation",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRelation.html",
        "description": "Represents a relationship between two vector layers."
      },
      {
        "node_name": "QgsRelationContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRelationContext.html",
        "description": "Context for relations. Used to resolve layers from projects."
      },
      {
        "node_name": "QgsRelationManager",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRelationManager.html",
        "description": "This class manages a set of relations between layers."
      },
      {
        "node_name": "QgsRemappingProxyFeatureSink",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRemappingProxyFeatureSink.html",
        "description": "AQgsFeatureSinkwhich proxies incoming features to a destination feature sink, after applying transformations and field value mappings."
      },
      {
        "node_name": "QgsRemappingSinkDefinition",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRemappingSinkDefinition.html",
        "description": "Defines the parameters used to remap features when creating aQgsRemappingProxyFeatureSink."
      },
      {
        "node_name": "QgsRenderChecker",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRenderChecker.html",
        "description": "This is a helper class for unit tests that need to write an image and compare it to an expected result or render time."
      },
      {
        "node_name": "QgsRenderContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRenderContext.html",
        "description": "Contains information about the context of a rendering operation."
      },
      {
        "node_name": "QgsRenderedFeatureHandlerInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRenderedFeatureHandlerInterface.html",
        "description": "An interface for classes which provider custom handlers for features rendered as part of a map render job."
      },
      {
        "node_name": "QgsRenderedItemDetails",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRenderedItemDetails.html",
        "description": "Base class for detailed information about a rendered item."
      },
      {
        "node_name": "QgsRunProcess",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRunProcess.html",
        "description": "A class that executes an external program/script."
      },
      {
        "node_name": "QgsRuntimeProfiler",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRuntimeProfiler.html",
        "description": "Provides a method of recording run time profiles of operations, allowing easy recording of their overall run time."
      },
      {
        "node_name": "QgsSQLStatement",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSQLStatement.html",
        "description": "Class for parsing SQL statements."
      },
      {
        "node_name": "QgsSQLStatementFragment",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSQLStatementFragment.html",
        "description": "Class for parsing fragments of SQL statements, such as an expression or where clause."
      },
      {
        "node_name": "QgsScaleCalculator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsScaleCalculator.html",
        "description": "Calculates scale for a given combination of canvas size, map extent, and monitor dpi."
      },
      {
        "node_name": "QgsScaleUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsScaleUtils.html",
        "description": "Contains utility functions for working with map scales."
      },
      {
        "node_name": "QgsScopeLogger",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsScopeLogger.html",
        "description": ""
      },
      {
        "node_name": "QgsScopedProxyProgressTask",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsScopedProxyProgressTask.html",
        "description": "ScopedQgsScopedProxyProgressTask, which automatically adds the proxy task to the application task manager on construction and finalizes the task when it goes out of scope."
      },
      {
        "node_name": "QgsScopedRuntimeProfile",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsScopedRuntimeProfile.html",
        "description": "Scoped object for logging of the runtime for a single operation or group of operations."
      },
      {
        "node_name": "QgsScreenProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsScreenProperties.html",
        "description": "Stores properties relating to a screen."
      },
      {
        "node_name": "QgsSelectionContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSelectionContext.html",
        "description": "Encapsulates the context of a layer selection operation."
      },
      {
        "node_name": "QgsServerMetadataUrlProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsServerMetadataUrlProperties.html",
        "description": "Manages QGIS Server properties for a map layer"
      },
      {
        "node_name": "QgsServerWmsDimensionProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsServerWmsDimensionProperties.html",
        "description": "Manages QGIS Server properties for Wms dimensions"
      },
      {
        "node_name": "QgsSettingsException",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsException.html",
        "description": "Custom exception class for settings related exceptions."
      },
      {
        "node_name": "QgsSimplifyMethod",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSimplifyMethod.html",
        "description": "This class contains information about how to simplify geometries fetched from aQgsFeatureIterator"
      },
      {
        "node_name": "QgsSingleCategoryDiagramRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSingleCategoryDiagramRenderer.html",
        "description": "Renders the diagrams for all features with the same settings"
      },
      {
        "node_name": "QgsSingleItemModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSingleItemModel.html",
        "description": "AQgsSingleItemModelsubclass which contains a single read-only item."
      },
      {
        "node_name": "QgsSizeScaleTransformer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSizeScaleTransformer.html",
        "description": "QgsPropertyTransformersubclass for scaling a value into a size according to various scaling methods."
      },
      {
        "node_name": "QgsSldExportContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSldExportContext.html",
        "description": "TheQgsSldExportContextclass holds SLD export options and other information related to SLD export of a QGIS layer style."
      },
      {
        "node_name": "QgsSnappingConfig",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSnappingConfig.html",
        "description": "This is a container for configuration of the snapping of the project"
      },
      {
        "node_name": "QgsSnappingUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSnappingUtils.html",
        "description": "This class has all the configuration of snapping and can return answers to snapping queries."
      },
      {
        "node_name": "QgsSourceCache",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSourceCache.html",
        "description": "A cache for source strings that returns a local file path containing the source content."
      },
      {
        "node_name": "QgsSpatialIndex",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSpatialIndex.html",
        "description": "A spatial index forQgsFeatureobjects."
      },
      {
        "node_name": "QgsSpatialIndexKDBush",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSpatialIndexKDBush.html",
        "description": "A very fast static spatial index for 2D points based on a flat KD-tree."
      },
      {
        "node_name": "QgsSpatialIndexKDBushData",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSpatialIndexKDBushData.html",
        "description": "A container for data stored inside aQgsSpatialIndexKDBushindex."
      },
      {
        "node_name": "QgsSqliteUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSqliteUtils.html",
        "description": "Contains utilities for working with Sqlite data sources."
      },
      {
        "node_name": "QgsStackedDiagramRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStackedDiagramRenderer.html",
        "description": "Renders diagrams using mixed diagram render types. The size of the rendered diagram is given by a combination of subrenderers."
      },
      {
        "node_name": "QgsStatisticalSummary",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStatisticalSummary.html",
        "description": "Calculator for summary statistics for a list of doubles."
      },
      {
        "node_name": "QgsStoredExpression",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStoredExpression.html",
        "description": "Stored expression containing name, content (expression text) and a category tag."
      },
      {
        "node_name": "QgsStoredExpressionManager",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStoredExpressionManager.html",
        "description": "Manages stored expressions regarding creation, modification and storing in the project"
      },
      {
        "node_name": "QgsStringReplacement",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStringReplacement.html",
        "description": "A representation of a single string replacement."
      },
      {
        "node_name": "QgsStringReplacementCollection",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStringReplacementCollection.html",
        "description": "A collection of string replacements (specified usingQgsStringReplacementobjects)."
      },
      {
        "node_name": "QgsStringStatisticalSummary",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStringStatisticalSummary.html",
        "description": "Calculator for summary statistics and aggregates for a list of strings."
      },
      {
        "node_name": "QgsStringUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStringUtils.html",
        "description": "Utility functions for working with strings."
      },
      {
        "node_name": "QgsTableCell",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTableCell.html",
        "description": "Encapsulates the contents and formatting of a single table cell."
      },
      {
        "node_name": "QgsTask",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTask.html",
        "description": "Abstract base class for long running background tasks."
      },
      {
        "node_name": "QgsTaskManager",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTaskManager.html",
        "description": "Task manager for managing a set of long-runningQgsTasktasks."
      },
      {
        "node_name": "QgsTaskWithSerialSubTasks",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTaskWithSerialSubTasks.html",
        "description": "Task that is composed of sub-tasks to be executed in a serial way, which may be useful for example to add several layers in a single target dataset which does not support concurrent updates."
      },
      {
        "node_name": "QgsTaskWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTaskWrapper.html",
        "description": ""
      },
      {
        "node_name": "QgsTemporalController",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTemporalController.html",
        "description": "A controller base class for temporal objects, contains a signal for notifying updates of the objects temporal range."
      },
      {
        "node_name": "QgsTemporalNavigationObject",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTemporalNavigationObject.html",
        "description": "Implements a temporal controller based on a frame by frame navigation and animation."
      },
      {
        "node_name": "QgsTemporalProperty",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTemporalProperty.html",
        "description": "Base class for temporal property."
      },
      {
        "node_name": "QgsTemporalRangeObject",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTemporalRangeObject.html",
        "description": "Base class for objects with an associated (optional) temporal range."
      },
      {
        "node_name": "QgsTemporalUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTemporalUtils.html",
        "description": "Contains utility methods for working with temporal layers and projects."
      },
      {
        "node_name": "QgsTessellator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTessellator.html",
        "description": "Class that takes care of tessellation of polygons into triangles."
      },
      {
        "node_name": "QgsTestUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTestUtils.html",
        "description": ""
      },
      {
        "node_name": "QgsTileMatrix",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTileMatrix.html",
        "description": "Defines a matrix of tiles for a single zoom level: it is defined by its size (width * height) and map extent that it covers."
      },
      {
        "node_name": "QgsTileMatrixSet",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTileMatrixSet.html",
        "description": "Defines a set of tile matrices for multiple zoom levels."
      },
      {
        "node_name": "QgsTileRange",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTileRange.html",
        "description": "Range of tiles in a tile matrix to be rendered. The selection is rectangular, given by start/end row and column numbers."
      },
      {
        "node_name": "QgsTileXYZ",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTileXYZ.html",
        "description": "Stores coordinates of a tile in a tile matrix set."
      },
      {
        "node_name": "QgsTolerance",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTolerance.html",
        "description": "This is the class is providing tolerance value in map unit values."
      },
      {
        "node_name": "QgsTopologyPreservingSimplifier",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTopologyPreservingSimplifier.html",
        "description": "Implementation of GeometrySimplifier using the Douglas-Peucker algorithm"
      },
      {
        "node_name": "QgsTracer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTracer.html",
        "description": "Utility class that construct a planar graph from the input vector layers and provides shortest path search for tracing of existing features."
      },
      {
        "node_name": "QgsTransaction",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTransaction.html",
        "description": "This class allows including a set of layers in a database-side transaction, provided the layer data providers support transactions and are compatible with each other."
      },
      {
        "node_name": "QgsTransactionGroup",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTransactionGroup.html",
        "description": "Constructor for QgsTransactionGroup"
      },
      {
        "node_name": "QgsTranslationContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTranslationContext.html",
        "description": "Used for the collecting of strings from projects for translation and creation of ts files."
      },
      {
        "node_name": "QgsUnitTypes",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsUnitTypes.html",
        "description": "Helper functions for various unit types."
      },
      {
        "node_name": "QgsUnsetAttributeValue",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsUnsetAttributeValue.html",
        "description": "Represents a default, “not-specified” value for a feature attribute."
      },
      {
        "node_name": "QgsUserColorScheme",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsUserColorScheme.html",
        "description": "A color scheme which stores its colors in a gpl palette file within the “palettes” subfolder off the user’s QGIS settings folder."
      },
      {
        "node_name": "QgsUserProfile",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsUserProfile.html",
        "description": "User profile contains information about the user profile folders on the machine."
      },
      {
        "node_name": "QgsUserProfileManager",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsUserProfileManager.html",
        "description": "User profile manager is used to manager list, and manage user profiles on the users machine."
      },
      {
        "node_name": "QgsVariantUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVariantUtils.html",
        "description": "Contains utility functions for working with QVariants and QVariant types."
      },
      {
        "node_name": "QgsVector",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVector.html",
        "description": "A class to represent a vector. Currently no Z axis / 2.5D support is implemented."
      },
      {
        "node_name": "QgsVector3D",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVector3D.html",
        "description": "Class for storage of 3D vectors similar to QVector3D, with the difference that it uses double precision instead of single precision floating point numbers."
      },
      {
        "node_name": "QgsVectorFileWriter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorFileWriter.html",
        "description": "A convenience class for writing vector layers to disk based formats (e.g. Shapefiles, GeoPackage)."
      },
      {
        "node_name": "QgsVectorFileWriterTask",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorFileWriterTask.html",
        "description": "QgsTasktask which performs aQgsVectorFileWriterlayer saving operation as a background task. This can be used to save a vector layer out to a file without blocking the QGIS interface."
      },
      {
        "node_name": "QgsVectorLayerServerProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerServerProperties.html",
        "description": ""
      },
      {
        "node_name": "QgsVectorSimplifyMethod",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorSimplifyMethod.html",
        "description": "This class contains information how to simplify geometries fetched from a vector layer"
      },
      {
        "node_name": "QgsVirtualLayerDefinition",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVirtualLayerDefinition.html",
        "description": "Class to manipulate the definition of a virtual layer"
      },
      {
        "node_name": "QgsVirtualLayerDefinitionUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVirtualLayerDefinitionUtils.html",
        "description": "Utils class forQgsVirtualLayerDefinition"
      },
      {
        "node_name": "QgsVirtualLayerTask",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVirtualLayerTask.html",
        "description": "Initializes a virtual layer with postpone mode activated and reloads the data in a separated thread."
      },
      {
        "node_name": "QgsWeakRelation",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsWeakRelation.html",
        "description": "TheQgsWeakRelationclass represent aQgsRelationwith possibly unresolved layers or unmatched fields."
      },
      {
        "node_name": "QgsXmlUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsXmlUtils.html",
        "description": "Assorted helper methods for reading and writing chunks of XML"
      },
      {
        "node_name": "QgsZipUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsZipUtils.html",
        "description": ""
      },
      {
        "node_name": "ReadWriteContextEnterCategory",
        "node_url": "https://qgis.org/pyqgis/3.40/core/ReadWriteContextEnterCategory.html",
        "description": "Push a category to the stack"
      },
      {
        "node_name": "ScopedRuntimeProfileContextManager",
        "node_url": "https://qgis.org/pyqgis/3.40/core/ScopedRuntimeProfileContextManager.html",
        "description": "Context manager used to profile blocks of code in the QgsApplication.profiler() registry."
      },
      {
        "node_name": "USER_CRS_START_ID",
        "node_url": "https://qgis.org/pyqgis/3.40/core/USER_CRS_START_ID.html",
        "description": "Convert a number or string to an integer, or return 0 if no arguments are given.  If x is a number, return x.__int__().  For floating point numbers, this truncates towards zero."
      },
      {
        "node_name": "check",
        "node_url": "https://qgis.org/pyqgis/3.40/core/check.html",
        "description": "Constructs QgsAbstractValidityChecks using a decorator."
      },
      {
        "node_name": "compareWkt",
        "node_url": "https://qgis.org/pyqgis/3.40/core/compareWkt.html",
        "description": "Compare two WKT strings with some tolerance"
      },
      {
        "node_name": "edit",
        "node_url": "https://qgis.org/pyqgis/3.40/core/edit.html",
        "description": ""
      },
      {
        "node_name": "geoEpsgCrsAuthId",
        "node_url": "https://qgis.org/pyqgis/3.40/core/geoEpsgCrsAuthId.html",
        "description": ""
      },
      {
        "node_name": "metaEnumFromType",
        "node_url": "https://qgis.org/pyqgis/3.40/core/metaEnumFromType.html",
        "description": "Returns the QMetaEnum for an enum type.     The enum must have declared using the Q_ENUM macro"
      },
      {
        "node_name": "metaEnumFromValue",
        "node_url": "https://qgis.org/pyqgis/3.40/core/metaEnumFromValue.html",
        "description": "Returns the QMetaEnum for an enum value.     The enum must have declared using the Q_ENUM macro"
      },
      {
        "node_name": "qHash",
        "node_url": "https://qgis.org/pyqgis/3.40/core/qHash.html",
        "description": "Hash for QVariant"
      },
      {
        "node_name": "qgsDoubleNear",
        "node_url": "https://qgis.org/pyqgis/3.40/core/qgsDoubleNear.html",
        "description": "Compare two doubles (but allow some difference)"
      },
      {
        "node_name": "qgsDoubleNearSig",
        "node_url": "https://qgis.org/pyqgis/3.40/core/qgsDoubleNearSig.html",
        "description": "Compare two doubles using specified number of significant digits"
      },
      {
        "node_name": "qgsDoubleToString",
        "node_url": "https://qgis.org/pyqgis/3.40/core/qgsDoubleToString.html",
        "description": "Returns a string representation of a double"
      },
      {
        "node_name": "qgsFloatNear",
        "node_url": "https://qgis.org/pyqgis/3.40/core/qgsFloatNear.html",
        "description": "Compare two floats (but allow some difference)"
      },
      {
        "node_name": "qgsNanCompatibleEquals",
        "node_url": "https://qgis.org/pyqgis/3.40/core/qgsNanCompatibleEquals.html",
        "description": "Compare two doubles, treating nan values as equal"
      },
      {
        "node_name": "qgsPermissiveToDouble",
        "node_url": "https://qgis.org/pyqgis/3.40/core/qgsPermissiveToDouble.html",
        "description": "Converts a string to a double in a permissive way, e.g., allowing for incorrect numbers of digits between thousand separators"
      },
      {
        "node_name": "qgsPermissiveToInt",
        "node_url": "https://qgis.org/pyqgis/3.40/core/qgsPermissiveToInt.html",
        "description": "Converts a string to an integer in a permissive way, e.g., allowing for incorrect numbers of digits between thousand separators"
      },
      {
        "node_name": "qgsPermissiveToLongLong",
        "node_url": "https://qgis.org/pyqgis/3.40/core/qgsPermissiveToLongLong.html",
        "description": "Converts a string to an qlonglong in a permissive way, e.g., allowing for incorrect numbers of digits between thousand separators"
      },
      {
        "node_name": "qgsRound",
        "node_url": "https://qgis.org/pyqgis/3.40/core/qgsRound.html",
        "description": "Returns a doublenumber, rounded (as close as possible) to the specified number ofplaces."
      },
      {
        "node_name": "qgsVariantCompare",
        "node_url": "https://qgis.org/pyqgis/3.40/core/qgsVariantCompare.html",
        "description": "Compares two QVariant values."
      },
      {
        "node_name": "qgsVariantEqual",
        "node_url": "https://qgis.org/pyqgis/3.40/core/qgsVariantEqual.html",
        "description": "Compares two QVariant values and returns whether they are equal, two NULL values are always treated as equal and 0 is not treated as equal with NULL"
      },
      {
        "node_name": "qgsVariantGreaterThan",
        "node_url": "https://qgis.org/pyqgis/3.40/core/qgsVariantGreaterThan.html",
        "description": "Compares two QVariant values and returns whether the first is greater than the second. Useful for sorting lists of variants, correctly handling sorting of the various QVariant data types (such as strings, numeric values, dates and times)"
      },
      {
        "node_name": "qgsVariantLessThan",
        "node_url": "https://qgis.org/pyqgis/3.40/core/qgsVariantLessThan.html",
        "description": "Compares two QVariant values and returns whether the first is less than the second. Useful for sorting lists of variants, correctly handling sorting of the various QVariant data types (such as strings, numeric values, dates and times)"
      },
      {
        "node_name": "qgsVsiPrefix",
        "node_url": "https://qgis.org/pyqgis/3.40/core/qgsVsiPrefix.html",
        "description": ""
      },
      {
        "node_name": "qgsfunction",
        "node_url": "https://qgis.org/pyqgis/3.40/core/qgsfunction.html",
        "description": "Decorator function used to define a user expression function."
      },
      {
        "node_name": "register_function",
        "node_url": "https://qgis.org/pyqgis/3.40/core/register_function.html",
        "description": "Register a Python function to be used as a expression function."
      },
      {
        "node_name": "stringToSymbolLayerReferenceList",
        "node_url": "https://qgis.org/pyqgis/3.40/core/stringToSymbolLayerReferenceList.html",
        "description": "Utilitary function to parse a string originated from symbolLayerReferenceListToString into aQgsSymbolLayerReferenceList"
      },
      {
        "node_name": "symbolLayerReferenceListToString",
        "node_url": "https://qgis.org/pyqgis/3.40/core/symbolLayerReferenceListToString.html",
        "description": "Utilitary function to turn aQgsSymbolLayerReferenceListinto a string"
      },
      {
        "node_name": "Qgs3DRendererAbstractMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/Qgs3DRendererAbstractMetadata.html",
        "description": "Base metadata class for 3D renderers. Instances of derived classes may be registered in Qgs3DRendererRegistry."
      },
      {
        "node_name": "Qgs3DRendererRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/Qgs3DRendererRegistry.html",
        "description": "Keeps track of available 3D renderers. Should be accessed throughQgsApplication.renderer3DRegistry()singleton."
      },
      {
        "node_name": "Qgs3DSymbolAbstractMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/Qgs3DSymbolAbstractMetadata.html",
        "description": "Stores metadata about one 3D symbol class."
      },
      {
        "node_name": "Qgs3DSymbolRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/Qgs3DSymbolRegistry.html",
        "description": "Registry of available 3D symbol classes."
      },
      {
        "node_name": "QgsAbstract3DRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstract3DRenderer.html",
        "description": "Base class for all renderers that may to participate in 3D view."
      },
      {
        "node_name": "QgsAbstract3DSymbol",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstract3DSymbol.html",
        "description": "Abstract base class for 3D symbols that are used by VectorLayer3DRenderer objects."
      },
      {
        "node_name": "QgsAbstractPointCloud3DRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractPointCloud3DRenderer.html",
        "description": "Base class for point cloud 3D renderers."
      },
      {
        "node_name": "QgsAbstractAnnotationItemEditOperation",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractAnnotationItemEditOperation.html",
        "description": "Abstract base class for annotation item edit operations"
      },
      {
        "node_name": "QgsAnnotation",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotation.html",
        "description": "Abstract base class for annotation items which are drawn over a map."
      },
      {
        "node_name": "QgsAnnotationItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationItem.html",
        "description": "Abstract base class for annotation items which are drawn withQgsAnnotationLayers."
      },
      {
        "node_name": "QgsAnnotationItemAbstractMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationItemAbstractMetadata.html",
        "description": "Stores metadata about one annotation item class."
      },
      {
        "node_name": "QgsAnnotationItemEditContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationItemEditContext.html",
        "description": "Encapsulates the context for an annotation item edit operation."
      },
      {
        "node_name": "QgsAnnotationItemEditOperationAddNode",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationItemEditOperationAddNode.html",
        "description": "Annotation item edit operation consisting of adding a node"
      },
      {
        "node_name": "QgsAnnotationItemEditOperationDeleteNode",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationItemEditOperationDeleteNode.html",
        "description": "Annotation item edit operation consisting of deleting a node"
      },
      {
        "node_name": "QgsAnnotationItemEditOperationMoveNode",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationItemEditOperationMoveNode.html",
        "description": "Annotation item edit operation consisting of moving a node"
      },
      {
        "node_name": "QgsAnnotationItemEditOperationTransientResults",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationItemEditOperationTransientResults.html",
        "description": "Encapsulates the transient results of an in-progress annotation edit operation."
      },
      {
        "node_name": "QgsAnnotationItemEditOperationTranslateItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationItemEditOperationTranslateItem.html",
        "description": "Annotation item edit operation consisting of translating (moving) an"
      },
      {
        "node_name": "QgsAnnotationItemNode",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationItemNode.html",
        "description": "Contains information about a node used for editing an annotation item."
      },
      {
        "node_name": "QgsAnnotationItemRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationItemRegistry.html",
        "description": "Registry of available annotation item types."
      },
      {
        "node_name": "QgsAnnotationLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationLayer.html",
        "description": "Represents a map layer containing a set of georeferenced annotations, e.g. markers, lines, polygons or text items."
      },
      {
        "node_name": "QgsAnnotationLineItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationLineItem.html",
        "description": "An annotation item which renders a line symbol along a line geometry."
      },
      {
        "node_name": "QgsAnnotationLineTextItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationLineTextItem.html",
        "description": "An annotation item which renders text along a line geometry."
      },
      {
        "node_name": "QgsAnnotationManager",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationManager.html",
        "description": "Manages storage of a set ofQgsAnnotationannotation objects."
      },
      {
        "node_name": "QgsAnnotationMarkerItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationMarkerItem.html",
        "description": "An annotation item which renders a marker symbol at a point location."
      },
      {
        "node_name": "QgsAnnotationPictureItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationPictureItem.html",
        "description": "An annotation item which renders a picture."
      },
      {
        "node_name": "QgsAnnotationPointTextItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationPointTextItem.html",
        "description": "An annotation item which renders a text string at a point location."
      },
      {
        "node_name": "QgsAnnotationPolygonItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationPolygonItem.html",
        "description": "An annotation item which renders a fill symbol for a polygon geometry."
      },
      {
        "node_name": "QgsAnnotationRectItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationRectItem.html",
        "description": "Abstract base class for annotation items which render annotations in a rectangular shape."
      },
      {
        "node_name": "QgsAnnotationRectangleTextItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnnotationRectangleTextItem.html",
        "description": "An annotation item which renders paragraphs of text within a rectangle."
      },
      {
        "node_name": "QgsHtmlAnnotation",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsHtmlAnnotation.html",
        "description": "An annotation item that embeds HTML content."
      },
      {
        "node_name": "QgsRenderedAnnotationItemDetails",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRenderedAnnotationItemDetails.html",
        "description": "Contains information about a rendered annotation item."
      },
      {
        "node_name": "QgsSvgAnnotation",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSvgAnnotation.html",
        "description": "An annotation which renders the contents of an SVG file."
      },
      {
        "node_name": "QgsTextAnnotation",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTextAnnotation.html",
        "description": "An annotation item that displays formatted text from a QTextDocument document."
      },
      {
        "node_name": "QgsAttributeEditorAction",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAttributeEditorAction.html",
        "description": "This element will load a layer action onto the form."
      },
      {
        "node_name": "QgsAttributeEditorContainer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAttributeEditorContainer.html",
        "description": "This is a container for attribute editors, used to group them visually in the attribute form if it is set to the drag and drop designer."
      },
      {
        "node_name": "QgsAttributeEditorElement",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAttributeEditorElement.html",
        "description": "This is an abstract base class for any elements of a drag and drop form."
      },
      {
        "node_name": "QgsAttributeEditorField",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAttributeEditorField.html",
        "description": "This element will load a field’s widget onto the form."
      },
      {
        "node_name": "QgsAttributeEditorHtmlElement",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAttributeEditorHtmlElement.html",
        "description": "An attribute editor widget that will represent arbitrary HTML code."
      },
      {
        "node_name": "QgsAttributeEditorQmlElement",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAttributeEditorQmlElement.html",
        "description": "An attribute editor widget that will represent arbitrary QML code."
      },
      {
        "node_name": "QgsAttributeEditorRelation",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAttributeEditorRelation.html",
        "description": "This element will load a relation editor onto the form."
      },
      {
        "node_name": "QgsAttributeEditorSpacerElement",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAttributeEditorSpacerElement.html",
        "description": "An attribute editor widget that will represent a spacer."
      },
      {
        "node_name": "QgsAttributeEditorTextElement",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAttributeEditorTextElement.html",
        "description": "An attribute editor widget that will represent arbitrary text code."
      },
      {
        "node_name": "QgsEditFormConfig",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsEditFormConfig.html",
        "description": "Contains configuration settings for an editor form."
      },
      {
        "node_name": "QgsAuthCertUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAuthCertUtils.html",
        "description": "Utilities for working with certificates and keys"
      },
      {
        "node_name": "QgsAuthConfigSslServer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAuthConfigSslServer.html",
        "description": "Configuration container for SSL server connection exceptions or"
      },
      {
        "node_name": "QgsAuthConfigurationStorage",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAuthConfigurationStorage.html",
        "description": "Abstract class that defines the interface for all authentication configuration storage implementations."
      },
      {
        "node_name": "QgsAuthConfigurationStorageDb",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAuthConfigurationStorageDb.html",
        "description": "QSqlDatabase based implementation ofQgsAuthConfigurationStorage."
      },
      {
        "node_name": "QgsAuthConfigurationStorageRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAuthConfigurationStorageRegistry.html",
        "description": "Registry for authentication configuration storages."
      },
      {
        "node_name": "QgsAuthManager",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAuthManager.html",
        "description": "Singleton offering an interface to manage the authentication configuration database and to utilize configurations through various authentication method plugins"
      },
      {
        "node_name": "QgsAuthMethod",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAuthMethod.html",
        "description": "Abstract base class for authentication method plugins"
      },
      {
        "node_name": "QgsAuthMethodConfig",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAuthMethodConfig.html",
        "description": "Configuration storage class for authentication method configurations"
      },
      {
        "node_name": "QgsPkiBundle",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPkiBundle.html",
        "description": "Storage set for PKI bundle: SSL certificate, key, optional CA cert chain"
      },
      {
        "node_name": "QgsPkiConfigBundle",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPkiConfigBundle.html",
        "description": "Storage set for constructed SSL certificate, key, associated with an authentication config"
      },
      {
        "node_name": "QgsBrowserModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBrowserModel.html",
        "description": "A model for showing available data sources and other items in a structured tree."
      },
      {
        "node_name": "QgsBrowserProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBrowserProxyModel.html",
        "description": "A QSortFilterProxyModel subclass for filtering and sorting browser model items."
      },
      {
        "node_name": "QgsConnectionsRootItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsConnectionsRootItem.html",
        "description": "A Collection that represents a root group of connections from a single data provider"
      },
      {
        "node_name": "QgsDataCollectionItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDataCollectionItem.html",
        "description": "A Collection: logical collection of layers or subcollections, e.g. GRASS location/mapset, database? wms source?"
      },
      {
        "node_name": "QgsDataItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDataItem.html",
        "description": "Base class for all items in the model."
      },
      {
        "node_name": "QgsDataItemProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDataItemProvider.html",
        "description": "This is the interface for those who want to add custom data items to the browser tree."
      },
      {
        "node_name": "QgsDataItemProviderRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDataItemProviderRegistry.html",
        "description": "This class keeps a list of data item providers that may add items to the browser tree."
      },
      {
        "node_name": "QgsDatabaseSchemaItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDatabaseSchemaItem.html",
        "description": "A Collection that represents a database schema item"
      },
      {
        "node_name": "QgsDirectoryItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDirectoryItem.html",
        "description": "A directory: contains subdirectories and layers"
      },
      {
        "node_name": "QgsDirectoryParamWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDirectoryParamWidget.html",
        "description": "Browser parameter widget implementation for directory items."
      },
      {
        "node_name": "QgsErrorItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsErrorItem.html",
        "description": "Data item that can be used to report problems (e.g. network error)"
      },
      {
        "node_name": "QgsFavoritesItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFavoritesItem.html",
        "description": "Contains various Favorites directories"
      },
      {
        "node_name": "QgsFieldDomainItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFieldDomainItem.html",
        "description": "A browser item representing a field domain."
      },
      {
        "node_name": "QgsFieldDomainsItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFieldDomainsItem.html",
        "description": "Contains a collection of field domain items."
      },
      {
        "node_name": "QgsFieldItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFieldItem.html",
        "description": "A data item representing a single field from a layer."
      },
      {
        "node_name": "QgsFieldsItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFieldsItem.html",
        "description": "A collection of field items with some internal logic to retrieve the fields and a the vector layer instance from a connection URI, the schema and the table name."
      },
      {
        "node_name": "QgsLayerItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayerItem.html",
        "description": "Item that represents a layer that can be opened with one of the"
      },
      {
        "node_name": "QgsProjectItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectItem.html",
        "description": "Data item that can be used to represent QGIS projects."
      },
      {
        "node_name": "QgsRelationshipItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRelationshipItem.html",
        "description": "A browser item representing a relationship."
      },
      {
        "node_name": "QgsRelationshipsItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRelationshipsItem.html",
        "description": "Contains a collection of relationship items."
      },
      {
        "node_name": "QgsZipItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsZipItem.html",
        "description": "A zip file: contains layers, using GDAL/OGR VSIFILE mechanism"
      },
      {
        "node_name": "QgsClassificationCustom",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsClassificationCustom.html",
        "description": "is a dummy implementation ofQgsClassificationwhich does not compute any break."
      },
      {
        "node_name": "QgsClassificationEqualInterval",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsClassificationEqualInterval.html",
        "description": "is an implementation ofQgsClassificationMethodfor equal intervals"
      },
      {
        "node_name": "QgsClassificationFixedInterval",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsClassificationFixedInterval.html",
        "description": "Implementation of a fixed interval classification."
      },
      {
        "node_name": "QgsClassificationJenks",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsClassificationJenks.html",
        "description": "is an implementation ofQgsClassificationMethodfor natural breaks based on Jenks"
      },
      {
        "node_name": "QgsClassificationLogarithmic",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsClassificationLogarithmic.html",
        "description": "Implementation of a logarithmic scale method"
      },
      {
        "node_name": "QgsClassificationMethod",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsClassificationMethod.html",
        "description": "is an abstract class for implementations of classification methods"
      },
      {
        "node_name": "QgsClassificationMethodRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsClassificationMethodRegistry.html",
        "description": "This class manages all known classification methods"
      },
      {
        "node_name": "QgsClassificationPrettyBreaks",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsClassificationPrettyBreaks.html",
        "description": "is an implementation ofQgsClassificationMethodfor pretty breaks"
      },
      {
        "node_name": "QgsClassificationQuantile",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsClassificationQuantile.html",
        "description": "is an implementation ofQgsClassificationMethodbased on quantiles"
      },
      {
        "node_name": "QgsClassificationRange",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsClassificationRange.html",
        "description": "contains the information about a classification range"
      },
      {
        "node_name": "QgsClassificationStandardDeviation",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsClassificationStandardDeviation.html",
        "description": "QgsClassificationCustomis an implementation ofQgsClassificationMethodbased on standard deviation"
      },
      {
        "node_name": "QgsCelestialBody",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCelestialBody.html",
        "description": "Contains information about a celestial body."
      },
      {
        "node_name": "QgsCoordinateReferenceSystem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCoordinateReferenceSystem.html",
        "description": "This class represents a coordinate reference system (CRS)."
      },
      {
        "node_name": "QgsCoordinateReferenceSystemRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCoordinateReferenceSystemRegistry.html",
        "description": "A registry for known coordinate reference system (CRS) definitions, including any user-defined CRSes."
      },
      {
        "node_name": "QgsCoordinateReferenceSystemUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCoordinateReferenceSystemUtils.html",
        "description": "Utility functions for working withQgsCoordinateReferenceSystemobjects."
      },
      {
        "node_name": "QgsCoordinateTransform",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCoordinateTransform.html",
        "description": "Class for doing transforms between two map coordinate systems."
      },
      {
        "node_name": "QgsCoordinateTransformContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCoordinateTransformContext.html",
        "description": "Contains information about the context in which a coordinate transform is executed."
      },
      {
        "node_name": "QgsDatumEnsemble",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDatumEnsemble.html",
        "description": "Contains information about a datum ensemble."
      },
      {
        "node_name": "QgsDatumEnsembleMember",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDatumEnsembleMember.html",
        "description": "Contains information about a member of a datum ensemble."
      },
      {
        "node_name": "QgsDatumTransform",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDatumTransform.html",
        "description": "Contains methods and classes relating the datum transformations."
      },
      {
        "node_name": "QgsEllipsoidUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsEllipsoidUtils.html",
        "description": "Contains utility functions for working with ellipsoids and querying the ellipsoid database."
      },
      {
        "node_name": "QgsProjOperation",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjOperation.html",
        "description": "Contains information about a PROJ operation."
      },
      {
        "node_name": "QgsProjUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjUtils.html",
        "description": "Utility functions for working with the proj library."
      },
      {
        "node_name": "QgsProjectionFactors",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectionFactors.html",
        "description": "contains various cartographic properties, such as scale factors, angular distortion and meridian convergence."
      },
      {
        "node_name": "QgsDxfExport",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDxfExport.html",
        "description": "Exports QGIS layers to the DXF format."
      },
      {
        "node_name": "QgsAbstractDatabaseProviderConnection",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractDatabaseProviderConnection.html",
        "description": "TheQgsAbstractDatabaseProviderConnectionclass provides common functionality for DB based connections."
      },
      {
        "node_name": "QgsAbstractDbTableModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractDbTableModel.html",
        "description": "TheQgsAbstractDbTableModelclass is a pure virtual model class for results in a database source widget selector"
      },
      {
        "node_name": "QgsAbstractProviderConnection",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractProviderConnection.html",
        "description": "TheQgsAbstractProviderConnectionprovides an interface for data provider connections."
      },
      {
        "node_name": "QgsDataProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDataProvider.html",
        "description": "Abstract base class for spatial data provider implementations."
      },
      {
        "node_name": "QgsMeshDriverMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshDriverMetadata.html",
        "description": "Holds metadata about mesh driver"
      },
      {
        "node_name": "QgsProviderRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProviderRegistry.html",
        "description": "A registry / canonical manager of data providers."
      },
      {
        "node_name": "QgsProviderSqlQueryBuilder",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProviderSqlQueryBuilder.html",
        "description": "Provides an interface for provider-specific creation of SQL queries."
      },
      {
        "node_name": "QgsProviderSublayerDetails",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProviderSublayerDetails.html",
        "description": "Contains details about a sub layer available from a dataset."
      },
      {
        "node_name": "QgsProviderSublayerModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProviderSublayerModel.html",
        "description": "A model for representing the sublayers present in a URI."
      },
      {
        "node_name": "QgsProviderSublayerProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProviderSublayerProxyModel.html",
        "description": "A QSortFilterProxyModel for filtering and sorting aQgsProviderSublayerModel."
      },
      {
        "node_name": "QgsProviderSublayerTask",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProviderSublayerTask.html",
        "description": "AQgsTaskwhich retrieves sublayer details for a URI."
      },
      {
        "node_name": "QgsProviderUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProviderUtils.html",
        "description": "Contains utility functions for working with data providers."
      },
      {
        "node_name": "QgsArcGisPortalUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsArcGisPortalUtils.html",
        "description": "Utility functions for working with ArcGIS REST services."
      },
      {
        "node_name": "QgsArcGisRestContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsArcGisRestContext.html",
        "description": "Contains the context of a ArcGIS REST service operation."
      },
      {
        "node_name": "QgsArcGisRestUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsArcGisRestUtils.html",
        "description": "Utility functions for working with ArcGIS REST services."
      },
      {
        "node_name": "QgsMemoryProviderUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMemoryProviderUtils.html",
        "description": "Utility functions for use with the memory vector data provider."
      },
      {
        "node_name": "QgsSensorThingsExpansionDefinition",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSensorThingsExpansionDefinition.html",
        "description": "Encapsulates information about how relationships in a SensorThings API service should be expanded."
      },
      {
        "node_name": "QgsSensorThingsUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSensorThingsUtils.html",
        "description": "Utility functions for working with OGC SensorThings API services."
      },
      {
        "node_name": "QgsDiagram",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDiagram.html",
        "description": "Base class for all diagram types."
      },
      {
        "node_name": "QgsHistogramDiagram",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsHistogramDiagram.html",
        "description": "A histogram style diagram."
      },
      {
        "node_name": "QgsPieDiagram",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPieDiagram.html",
        "description": "A pie chart diagram."
      },
      {
        "node_name": "QgsStackedBarDiagram",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStackedBarDiagram.html",
        "description": "A stacked bar chart diagram."
      },
      {
        "node_name": "QgsStackedDiagram",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStackedDiagram.html",
        "description": "A diagram composed of several subdiagrams, located side by side."
      },
      {
        "node_name": "QgsTextDiagram",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTextDiagram.html",
        "description": "A text based diagram."
      },
      {
        "node_name": "QgsAbstractProfileGenerator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractProfileGenerator.html",
        "description": "Abstract base class for objects which generate elevation profiles."
      },
      {
        "node_name": "QgsAbstractProfileResults",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractProfileResults.html",
        "description": "Abstract base class for storage of elevation profiles."
      },
      {
        "node_name": "QgsAbstractProfileSource",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractProfileSource.html",
        "description": "Interface for classes which can generate elevation profiles."
      },
      {
        "node_name": "QgsAbstractTerrainProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractTerrainProvider.html",
        "description": "Abstract base class for terrain providers"
      },
      {
        "node_name": "QgsFlatTerrainProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFlatTerrainProvider.html",
        "description": "A terrain provider where the terrain is a simple flat surface."
      },
      {
        "node_name": "QgsMeshTerrainProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshTerrainProvider.html",
        "description": "A terrain provider that uses the Z values of a mesh layer to build a terrain surface."
      },
      {
        "node_name": "QgsProfileExporter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProfileExporter.html",
        "description": "Handles exports of elevation profiles in various formats."
      },
      {
        "node_name": "QgsProfileExporterTask",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProfileExporterTask.html",
        "description": "Handles exports of elevation profiles in various formats in a background task."
      },
      {
        "node_name": "QgsProfileGenerationContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProfileGenerationContext.html",
        "description": "Encapsulates the context in which an elevation profile is to be generated."
      },
      {
        "node_name": "QgsProfileIdentifyContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProfileIdentifyContext.html",
        "description": "Encapsulates the context of identifying profile results."
      },
      {
        "node_name": "QgsProfileIdentifyResults",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProfileIdentifyResults.html",
        "description": "Stores identify results generated by aQgsAbstractProfileResultsobject."
      },
      {
        "node_name": "QgsProfilePlotRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProfilePlotRenderer.html",
        "description": "Generates and renders elevation profile plots."
      },
      {
        "node_name": "QgsProfilePoint",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProfilePoint.html",
        "description": "Encapsulates a point on a distance-elevation profile."
      },
      {
        "node_name": "QgsProfileRenderContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProfileRenderContext.html",
        "description": "Abstract base class for storage of elevation profiles."
      },
      {
        "node_name": "QgsProfileRequest",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProfileRequest.html",
        "description": "Encapsulates properties and constraints relating to fetching elevation profiles from different sources."
      },
      {
        "node_name": "QgsProfileSnapContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProfileSnapContext.html",
        "description": "Encapsulates the context of snapping a profile point."
      },
      {
        "node_name": "QgsProfileSnapResult",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProfileSnapResult.html",
        "description": "Encapsulates results of snapping a profile point."
      },
      {
        "node_name": "QgsProfileSourceRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProfileSourceRegistry.html",
        "description": "Registry of profile sources used byQgsProfilePlotRenderer"
      },
      {
        "node_name": "QgsRasterDemTerrainProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterDemTerrainProvider.html",
        "description": "A terrain provider where the terrain source is a raster DEM layer."
      },
      {
        "node_name": "QgsExpression",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpression.html",
        "description": "Class for parsing and evaluation of expressions (formerly called “search strings”). The expressions try to follow both syntax and semantics of SQL expressions."
      },
      {
        "node_name": "QgsExpressionContextUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpressionContextUtils.html",
        "description": "Contains utilities for working withQgsExpressionContextobjects, including methods for creating scopes for specific uses (e.g., project scopes, layer scopes)."
      },
      {
        "node_name": "QgsExpressionFunction",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpressionFunction.html",
        "description": "A abstract base class for definingQgsExpressionfunctions."
      },
      {
        "node_name": "QgsExpressionNode",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpressionNode.html",
        "description": "Abstract base class for all nodes that can appear in an expression."
      },
      {
        "node_name": "QgsExpressionNodeBetweenOperator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpressionNodeBetweenOperator.html",
        "description": "SQL-like BETWEEN and NOT BETWEEN predicates."
      },
      {
        "node_name": "QgsExpressionNodeBinaryOperator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpressionNodeBinaryOperator.html",
        "description": "A binary expression operator, which operates on two values."
      },
      {
        "node_name": "QgsExpressionNodeColumnRef",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpressionNodeColumnRef.html",
        "description": "An expression node which takes it value from a feature’s field."
      },
      {
        "node_name": "QgsExpressionNodeCondition",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpressionNodeCondition.html",
        "description": "An expression node for CASE WHEN clauses."
      },
      {
        "node_name": "QgsExpressionNodeFunction",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpressionNodeFunction.html",
        "description": "An expression node for expression functions."
      },
      {
        "node_name": "QgsExpressionNodeInOperator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpressionNodeInOperator.html",
        "description": "An expression node for value IN or NOT IN clauses."
      },
      {
        "node_name": "QgsExpressionNodeIndexOperator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpressionNodeIndexOperator.html",
        "description": "A indexing expression operator, which allows use of square brackets [] to reference map and array items."
      },
      {
        "node_name": "QgsExpressionNodeLiteral",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpressionNodeLiteral.html",
        "description": "An expression node for literal values."
      },
      {
        "node_name": "QgsExpressionNodeUnaryOperator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpressionNodeUnaryOperator.html",
        "description": "A unary node is either negative as in boolean (not) or as in numbers (minus)."
      },
      {
        "node_name": "QgsScopedExpressionFunction",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsScopedExpressionFunction.html",
        "description": "Expression function for use within aQgsExpressionContextScope. This differs from a standardQgsExpression.Function in that it requires an implementedclone()method."
      },
      {
        "node_name": "QgsExternalStorage",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExternalStorage.html",
        "description": "Abstract interface for external storage - to be implemented by various backends and registered inQgsExternalStorageRegistry."
      },
      {
        "node_name": "QgsExternalStorageContent",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExternalStorageContent.html",
        "description": "Base class forQgsExternalStoragestored and fetched content"
      },
      {
        "node_name": "QgsExternalStorageFetchedContent",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExternalStorageFetchedContent.html",
        "description": "Class forQgsExternalStoragefetched content"
      },
      {
        "node_name": "QgsExternalStorageRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExternalStorageRegistry.html",
        "description": "Registry of external storage backends used byQgsExternalResourceWidget"
      },
      {
        "node_name": "QgsExternalStorageStoredContent",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExternalStorageStoredContent.html",
        "description": "Class forQgsExternalStoragestored content"
      },
      {
        "node_name": "QgsCheckBoxFieldFormatter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCheckBoxFieldFormatter.html",
        "description": "Field formatter for a checkbox field."
      },
      {
        "node_name": "QgsDateTimeFieldFormatter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDateTimeFieldFormatter.html",
        "description": "Field formatter for a date time field."
      },
      {
        "node_name": "QgsFallbackFieldFormatter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFallbackFieldFormatter.html",
        "description": "A default fallback field formatter in case no specialized field formatter is defined."
      },
      {
        "node_name": "QgsKeyValueFieldFormatter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsKeyValueFieldFormatter.html",
        "description": "Field formatter for a key value field."
      },
      {
        "node_name": "QgsListFieldFormatter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsListFieldFormatter.html",
        "description": "Field formatter for a list field."
      },
      {
        "node_name": "QgsRangeFieldFormatter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRangeFieldFormatter.html",
        "description": "Field formatter for a range (double) field with precision and locale."
      },
      {
        "node_name": "QgsRelationReferenceFieldFormatter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRelationReferenceFieldFormatter.html",
        "description": "Field formatter for a relation reference field."
      },
      {
        "node_name": "QgsValueMapFieldFormatter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsValueMapFieldFormatter.html",
        "description": "Field formatter for a ValueMap field."
      },
      {
        "node_name": "QgsValueRelationFieldFormatter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsValueRelationFieldFormatter.html",
        "description": "Field formatter for a value relation field."
      },
      {
        "node_name": "QgsAbstractBabelFormat",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractBabelFormat.html",
        "description": "Abstract base class for babel GPS formats."
      },
      {
        "node_name": "QgsBabelFormatRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBabelFormatRegistry.html",
        "description": "A registry forQgsAbstractBabelFormatGPSBabel formats."
      },
      {
        "node_name": "QgsBabelGpsDeviceFormat",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBabelGpsDeviceFormat.html",
        "description": "A babel format capable of interacting directly with a GPS device."
      },
      {
        "node_name": "QgsBabelSimpleImportFormat",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBabelSimpleImportFormat.html",
        "description": "A babel format capable of converting input files to GPX files."
      },
      {
        "node_name": "QgsGpsConnection",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGpsConnection.html",
        "description": "Abstract base class for connection to a GPS device"
      },
      {
        "node_name": "QgsGpsConnectionRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGpsConnectionRegistry.html",
        "description": "A class to register / unregister existing GPS connections such that the information is available to all classes and plugins."
      },
      {
        "node_name": "QgsGpsDetector",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGpsDetector.html",
        "description": "Class to detect the GPS port"
      },
      {
        "node_name": "QgsGpsInformation",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGpsInformation.html",
        "description": "Encapsulates information relating to a GPS position fix."
      },
      {
        "node_name": "QgsGpsLogger",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGpsLogger.html",
        "description": "Base class for objects which log incoming GPS data."
      },
      {
        "node_name": "QgsGpsdConnection",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGpsdConnection.html",
        "description": "Evaluates NMEA sentences coming from gpsd"
      },
      {
        "node_name": "QgsNmeaConnection",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNmeaConnection.html",
        "description": "Evaluates NMEA sentences coming from a GPS device"
      },
      {
        "node_name": "QgsQtLocationConnection",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsQtLocationConnection.html",
        "description": "A GPS connection subclass based on the Qt Location libraries."
      },
      {
        "node_name": "QgsSatelliteInfo",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSatelliteInfo.html",
        "description": "Encapsulates information relating to a GPS satellite."
      },
      {
        "node_name": "QgsVectorLayerGpsLogger",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerGpsLogger.html",
        "description": "Handles logging of incoming GPS data to a vector layer."
      },
      {
        "node_name": "QgsAbstractGeocoderLocatorFilter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractGeocoderLocatorFilter.html",
        "description": "An abstract base class which implements a locator filter populated from aQgsGeocoderInterface."
      },
      {
        "node_name": "QgsGeocoderContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGeocoderContext.html",
        "description": "Encapsulates the context of a geocoding operation."
      },
      {
        "node_name": "QgsGeocoderInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGeocoderInterface.html",
        "description": "Interface for geocoders."
      },
      {
        "node_name": "QgsGeocoderResult",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGeocoderResult.html",
        "description": "Represents a matching result from a geocoder search."
      },
      {
        "node_name": "QgsGoogleMapsGeocoder",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGoogleMapsGeocoder.html",
        "description": "A geocoder which uses the Google Map geocoding API to retrieve results."
      },
      {
        "node_name": "QgsNominatimGeocoder",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNominatimGeocoder.html",
        "description": "A geocoder which uses the Nominatim geocoding API to retrieve results."
      },
      {
        "node_name": "QgsAbstractGeometry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractGeometry.html",
        "description": "Abstract base class for all geometries"
      },
      {
        "node_name": "QgsAbstractGeometryTransformer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractGeometryTransformer.html",
        "description": "An abstract base class for classes which transform geometries by transforming input points to output points."
      },
      {
        "node_name": "QgsBox3D",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBox3D.html",
        "description": "A 3-dimensional box composed of x, y, z coordinates."
      },
      {
        "node_name": "QgsCircle",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCircle.html",
        "description": "Circle geometry type."
      },
      {
        "node_name": "QgsCircularString",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCircularString.html",
        "description": "Circular string geometry type"
      },
      {
        "node_name": "QgsCompoundCurve",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCompoundCurve.html",
        "description": "Compound curve geometry type"
      },
      {
        "node_name": "QgsConstWkbPtr",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsConstWkbPtr.html",
        "description": "A const WKB pointer."
      },
      {
        "node_name": "QgsCurve",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCurve.html",
        "description": "Abstract base class for curved geometry type"
      },
      {
        "node_name": "QgsCurvePolygon",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCurvePolygon.html",
        "description": "Curve polygon geometry type"
      },
      {
        "node_name": "QgsEllipse",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsEllipse.html",
        "description": "Ellipse geometry type."
      },
      {
        "node_name": "QgsGeometry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGeometry.html",
        "description": "A geometry is the spatial representation of a feature."
      },
      {
        "node_name": "QgsGeometryCollection",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGeometryCollection.html",
        "description": "Geometry collection"
      },
      {
        "node_name": "QgsGeometryConstPartIterator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGeometryConstPartIterator.html",
        "description": "Java-style iterator for const traversal of parts of a geometry"
      },
      {
        "node_name": "QgsGeometryEngine",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGeometryEngine.html",
        "description": "A geometry engine is a low-level representation of aQgsAbstractGeometryobject, optimised for use with external geometry libraries such as GEOS."
      },
      {
        "node_name": "QgsGeometryParameters",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGeometryParameters.html",
        "description": "Encapsulates parameters under which a geometry operation is performed."
      },
      {
        "node_name": "QgsGeometryPartIterator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGeometryPartIterator.html",
        "description": "Java-style iterator for traversal of parts of a geometry"
      },
      {
        "node_name": "QgsGeometryUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGeometryUtils.html",
        "description": "Contains various geometry utility functions."
      },
      {
        "node_name": "QgsGeometryUtilsBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGeometryUtilsBase.html",
        "description": "Convenience functions for geometry utils."
      },
      {
        "node_name": "QgsLineSegment2D",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLineSegment2D.html",
        "description": "Represents a single 2D line segment, consisting of a 2D start and end vertex only."
      },
      {
        "node_name": "QgsLineString",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLineString.html",
        "description": "Line string geometry type, with support for z-dimension and m-values."
      },
      {
        "node_name": "QgsMultiCurve",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMultiCurve.html",
        "description": "Multi curve geometry collection."
      },
      {
        "node_name": "QgsMultiLineString",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMultiLineString.html",
        "description": "Multi line string geometry collection."
      },
      {
        "node_name": "QgsMultiPoint",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMultiPoint.html",
        "description": "Multi point geometry collection."
      },
      {
        "node_name": "QgsMultiPolygon",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMultiPolygon.html",
        "description": "Multi polygon geometry collection."
      },
      {
        "node_name": "QgsMultiSurface",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMultiSurface.html",
        "description": "Multi surface geometry collection."
      },
      {
        "node_name": "QgsOrientedBox3D",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsOrientedBox3D.html",
        "description": "Represents a oriented (rotated) box in 3 dimensions."
      },
      {
        "node_name": "QgsPoint",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPoint.html",
        "description": "Point geometry type, with support for z-dimension and m-values."
      },
      {
        "node_name": "QgsPolygon",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPolygon.html",
        "description": "Polygon geometry type."
      },
      {
        "node_name": "QgsPolyhedralSurface",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPolyhedralSurface.html",
        "description": "Polyhedral surface geometry type."
      },
      {
        "node_name": "QgsQuadrilateral",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsQuadrilateral.html",
        "description": "Quadrilateral geometry type."
      },
      {
        "node_name": "QgsRay3D",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRay3D.html",
        "description": "A representation of a ray in 3D."
      },
      {
        "node_name": "QgsRectangle",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRectangle.html",
        "description": "A rectangle specified with double values."
      },
      {
        "node_name": "QgsReferencedGeometry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsReferencedGeometry.html",
        "description": "AQgsGeometrywith associated coordinate reference system."
      },
      {
        "node_name": "QgsReferencedGeometryBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsReferencedGeometryBase.html",
        "description": "A base class for geometry primitives which are stored with an associated reference system."
      },
      {
        "node_name": "QgsReferencedPointXY",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsReferencedPointXY.html",
        "description": "AQgsPointXYwith associated coordinate reference system."
      },
      {
        "node_name": "QgsReferencedRectangle",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsReferencedRectangle.html",
        "description": "AQgsRectanglewith associated coordinate reference system."
      },
      {
        "node_name": "QgsRegularPolygon",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRegularPolygon.html",
        "description": "Regular Polygon geometry type."
      },
      {
        "node_name": "QgsSphere",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSphere.html",
        "description": "A spherical geometry object."
      },
      {
        "node_name": "QgsSurface",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSurface.html",
        "description": "Surface geometry type."
      },
      {
        "node_name": "QgsTriangle",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTriangle.html",
        "description": "Triangle geometry type."
      },
      {
        "node_name": "QgsTriangulatedSurface",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTriangulatedSurface.html",
        "description": "Triangulated surface geometry type."
      },
      {
        "node_name": "QgsVertexId",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVertexId.html",
        "description": "Utility class for identifying a unique vertex within a geometry."
      },
      {
        "node_name": "QgsVertexIterator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVertexIterator.html",
        "description": "Java-style iterator for traversal of vertices of a geometry"
      },
      {
        "node_name": "QgsWkbPtr",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsWkbPtr.html",
        "description": "WKB pointer handler."
      },
      {
        "node_name": "QgsWkbTypes",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsWkbTypes.html",
        "description": "Handles storage of information regarding WKB types and their properties."
      },
      {
        "node_name": "QgsBalloonCallout",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBalloonCallout.html",
        "description": "A cartoon talking bubble callout style."
      },
      {
        "node_name": "QgsCallout",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCallout.html",
        "description": "Abstract base class for callout renderers."
      },
      {
        "node_name": "QgsCalloutAbstractMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCalloutAbstractMetadata.html",
        "description": "Stores metadata about one callout renderer class."
      },
      {
        "node_name": "QgsCalloutMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCalloutMetadata.html",
        "description": "Convenience metadata class that uses static functions to create callouts and their widgets."
      },
      {
        "node_name": "QgsCalloutRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCalloutRegistry.html",
        "description": "Registry of available callout classes."
      },
      {
        "node_name": "QgsCurvedLineCallout",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCurvedLineCallout.html",
        "description": "Draws curved lines as callouts."
      },
      {
        "node_name": "QgsManhattanLineCallout",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsManhattanLineCallout.html",
        "description": "Draws straight (right angled) lines as callouts."
      },
      {
        "node_name": "QgsSimpleLineCallout",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSimpleLineCallout.html",
        "description": "A simple direct line callout style."
      },
      {
        "node_name": "QgsAbstractVectorLayerLabeling",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractVectorLayerLabeling.html",
        "description": "Abstract base class - its implementations define different approaches to the labeling of a vector layer."
      },
      {
        "node_name": "QgsCalloutPosition",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCalloutPosition.html",
        "description": "Represents the calculated placement of a map label callout line."
      },
      {
        "node_name": "QgsLabelCandidate",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLabelCandidate.html",
        "description": "Represents a label candidate."
      },
      {
        "node_name": "QgsLabelLineSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLabelLineSettings.html",
        "description": "Contains settings related to how the label engine places and formats labels for line features (or polygon features which are labeled in a “perimeter” style mode)."
      },
      {
        "node_name": "QgsLabelObstacleSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLabelObstacleSettings.html",
        "description": "Contains settings related to how the label engine treats features as"
      },
      {
        "node_name": "QgsLabelPlacementSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLabelPlacementSettings.html",
        "description": "Contains general settings related to how labels are placed."
      },
      {
        "node_name": "QgsLabelPointSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLabelPointSettings.html",
        "description": "Contains settings related to how the label engine places and formats labels for point features, or polygon features which are labeled in the “around” or “over” centroid placement modes."
      },
      {
        "node_name": "QgsLabelPosition",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLabelPosition.html",
        "description": "Represents the calculated placement of a map label."
      },
      {
        "node_name": "QgsLabelSearchTree",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLabelSearchTree.html",
        "description": "A class to query the labeling structure at a given point (small wrapper around pal RTree class)"
      },
      {
        "node_name": "QgsLabelThinningSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLabelThinningSettings.html",
        "description": "Contains settings related to how the label engine removes candidate label positions and reduces the number of displayed labels."
      },
      {
        "node_name": "QgsLabeling",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLabeling.html",
        "description": "Contains constants and enums relating to labeling."
      },
      {
        "node_name": "QgsLabelingEngineSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLabelingEngineSettings.html",
        "description": "Stores global configuration for labeling engine"
      },
      {
        "node_name": "QgsLabelingResults",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLabelingResults.html",
        "description": "Class that stores computed placement from labeling engine."
      },
      {
        "node_name": "QgsPalLabeling",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPalLabeling.html",
        "description": "PAL labeling utilities."
      },
      {
        "node_name": "QgsPalLayerSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPalLayerSettings.html",
        "description": "Contains settings for how a map layer will be labeled."
      },
      {
        "node_name": "QgsRuleBasedLabeling",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRuleBasedLabeling.html",
        "description": "Rule based labeling for a vector layer."
      },
      {
        "node_name": "QgsVectorLayerSimpleLabeling",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerSimpleLabeling.html",
        "description": "Basic implementation of the labeling interface."
      },
      {
        "node_name": "QgsAbstractLabelingEngineRule",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractLabelingEngineRule.html",
        "description": "Abstract base class for labeling engine rules."
      },
      {
        "node_name": "QgsAbstractLabelingEngineRuleDistanceFromFeature",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractLabelingEngineRuleDistanceFromFeature.html",
        "description": "Base class for labeling engine rules which prevents labels being placed too close or to far from features from a different layer."
      },
      {
        "node_name": "QgsLabelingEngineContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLabelingEngineContext.html",
        "description": "Encapsulates the context for a labeling engine run."
      },
      {
        "node_name": "QgsLabelingEngineRuleAvoidLabelOverlapWithFeature",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLabelingEngineRuleAvoidLabelOverlapWithFeature.html",
        "description": "A labeling engine rule which prevents labels being placed overlapping features from a different layer."
      },
      {
        "node_name": "QgsLabelingEngineRuleMaximumDistanceLabelToFeature",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLabelingEngineRuleMaximumDistanceLabelToFeature.html",
        "description": "A labeling engine rule which prevents labels being placed too far from features from a different layer."
      },
      {
        "node_name": "QgsLabelingEngineRuleMinimumDistanceLabelToFeature",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLabelingEngineRuleMinimumDistanceLabelToFeature.html",
        "description": "A labeling engine rule which prevents labels being placed too close to features from a different layer."
      },
      {
        "node_name": "QgsLabelingEngineRuleMinimumDistanceLabelToLabel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLabelingEngineRuleMinimumDistanceLabelToLabel.html",
        "description": "A labeling engine rule which prevents labels being placed too close to labels from a different layer."
      },
      {
        "node_name": "QgsLabelingEngineRuleRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLabelingEngineRuleRegistry.html",
        "description": "A registry for labeling engine rules."
      },
      {
        "node_name": "QgsColorRampLegendNode",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsColorRampLegendNode.html",
        "description": "A legend node which renders a color ramp."
      },
      {
        "node_name": "QgsColorRampLegendNodeSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsColorRampLegendNodeSettings.html",
        "description": "Settings for a color ramp legend node."
      },
      {
        "node_name": "QgsDataDefinedSizeLegendNode",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDataDefinedSizeLegendNode.html",
        "description": "Produces legend node with a marker symbol"
      },
      {
        "node_name": "QgsImageLegendNode",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsImageLegendNode.html",
        "description": "Implementation of legend node interface for displaying arbitrary raster"
      },
      {
        "node_name": "QgsLayerTree",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayerTree.html",
        "description": "Namespace with helper functions for layer tree operations."
      },
      {
        "node_name": "QgsLayerTreeFilterProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayerTreeFilterProxyModel.html",
        "description": "is a sort filter proxy model to easily reproduce the legend/layer tree in a tree view."
      },
      {
        "node_name": "QgsLayerTreeFilterSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayerTreeFilterSettings.html",
        "description": "Contains settings relating to filtering the contents ofQgsLayerTreeModeland views."
      },
      {
        "node_name": "QgsLayerTreeGroup",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayerTreeGroup.html",
        "description": "Layer tree group node serves as a container for layers and further groups."
      },
      {
        "node_name": "QgsLayerTreeLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayerTreeLayer.html",
        "description": "Layer tree node points to a map layer."
      },
      {
        "node_name": "QgsLayerTreeModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayerTreeModel.html",
        "description": "TheQgsLayerTreeModelclass is model implementation for Qt item views framework."
      },
      {
        "node_name": "QgsLayerTreeModelLegendNode",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayerTreeModelLegendNode.html",
        "description": "TheQgsLegendRendererItemclass is abstract interface for legend items returned fromQgsMapLayerLegendimplementation."
      },
      {
        "node_name": "QgsLayerTreeNode",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayerTreeNode.html",
        "description": "This class is a base class for nodes in a layer tree."
      },
      {
        "node_name": "QgsLayerTreeRegistryBridge",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayerTreeRegistryBridge.html",
        "description": "Listens to the updates in map layer registry and does changes in layer tree."
      },
      {
        "node_name": "QgsLayerTreeUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayerTreeUtils.html",
        "description": "Assorted functions for dealing with layer trees."
      },
      {
        "node_name": "QgsLegendPatchShape",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLegendPatchShape.html",
        "description": "Represents a patch shape for use in map legends."
      },
      {
        "node_name": "QgsRasterSymbolLegendNode",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterSymbolLegendNode.html",
        "description": "Implementation of legend node interface for displaying raster legend"
      },
      {
        "node_name": "QgsSimpleLegendNode",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSimpleLegendNode.html",
        "description": "Implementation of legend node interface for displaying arbitrary label with icon."
      },
      {
        "node_name": "QgsSymbolLegendNode",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSymbolLegendNode.html",
        "description": "Implementation of legend node interface for displaying preview of vector symbols and their labels and allowing interaction with the symbol / renderer."
      },
      {
        "node_name": "QgsVectorLabelLegendNode",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLabelLegendNode.html",
        "description": "Produces legend node for a labeling text symbol"
      },
      {
        "node_name": "QgsWmsLegendNode",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsWmsLegendNode.html",
        "description": "Implementation of legend node interface for displaying WMS legend"
      },
      {
        "node_name": "QgsLocator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLocator.html",
        "description": "Handles the management ofQgsLocatorFilterobjects and async collection of search results from them."
      },
      {
        "node_name": "QgsLocatorAutomaticModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLocatorAutomaticModel.html",
        "description": "AQgsLocatorModelwhich has is associated directly with aQgsLocator, and is automatically populated with results from locator searches."
      },
      {
        "node_name": "QgsLocatorContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLocatorContext.html",
        "description": "Encapsulates the properties relating to the context of a locator search."
      },
      {
        "node_name": "QgsLocatorFilter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLocatorFilter.html",
        "description": "Abstract base class for filters which collect locator results."
      },
      {
        "node_name": "QgsLocatorModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLocatorModel.html",
        "description": "An abstract list model for displaying the results of locator searches."
      },
      {
        "node_name": "QgsLocatorModelBridge",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLocatorModelBridge.html",
        "description": "TheQgsLocatorModelBridgeclass provides the core functionality to be used in a locator widget."
      },
      {
        "node_name": "QgsLocatorProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLocatorProxyModel.html",
        "description": "A sort proxy model forQgsLocatorModel, which automatically sorts results by precedence."
      },
      {
        "node_name": "QgsLocatorResult",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLocatorResult.html",
        "description": "Encapsulates properties of an individual matching result found by aQgsLocatorFilter."
      },
      {
        "node_name": "QgsAction",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAction.html",
        "description": "Utility class that encapsulates an action based on vector attributes."
      },
      {
        "node_name": "QgsActionManager",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsActionManager.html",
        "description": "Storage and management of actions associated with a layer."
      },
      {
        "node_name": "QgsActionScope",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsActionScope.html",
        "description": "An action scope defines a “place” for an action to be shown and may add additional expression variables."
      },
      {
        "node_name": "QgsActionScopeRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsActionScopeRegistry.html",
        "description": "The action scope registry is an application wide registry that contains a list of available action scopes."
      },
      {
        "node_name": "QgsMapRendererAbstractCustomPainterJob",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapRendererAbstractCustomPainterJob.html",
        "description": "Abstract base class for map renderer jobs which use custom painters."
      },
      {
        "node_name": "QgsMapRendererCache",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapRendererCache.html",
        "description": "This class is responsible for keeping cache of rendered images resulting from a map rendering job."
      },
      {
        "node_name": "QgsMapRendererCustomPainterJob",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapRendererCustomPainterJob.html",
        "description": "Job implementation that renders everything sequentially using a custom painter."
      },
      {
        "node_name": "QgsMapRendererJob",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapRendererJob.html",
        "description": "Abstract base class for map rendering implementations."
      },
      {
        "node_name": "QgsMapRendererParallelJob",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapRendererParallelJob.html",
        "description": "Job implementation that renders all layers in parallel."
      },
      {
        "node_name": "QgsMapRendererQImageJob",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapRendererQImageJob.html",
        "description": "Intermediate base class adding functionality that allows client to query the rendered image."
      },
      {
        "node_name": "QgsMapRendererSequentialJob",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapRendererSequentialJob.html",
        "description": "Job implementation that renders everything sequentially in one thread."
      },
      {
        "node_name": "QgsMapRendererTask",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapRendererTask.html",
        "description": "QgsTasktask which draws a map to an image file or a painter as a background task. This can be used to draw maps without blocking the QGIS interface."
      },
      {
        "node_name": "QgsRenderedItemResults",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRenderedItemResults.html",
        "description": "Stores collated details of rendered items during a map rendering operation."
      },
      {
        "node_name": "QgsAbstractMeshLayerLabeling",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractMeshLayerLabeling.html",
        "description": "Abstract base class - its implementations define different approaches to the labeling of a mesh layer."
      },
      {
        "node_name": "QgsMesh",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMesh.html",
        "description": "Mesh - vertices, edges and faces"
      },
      {
        "node_name": "QgsMesh3DAveragingMethod",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMesh3DAveragingMethod.html",
        "description": "Abstract class to interpolate 3d stacked mesh data to 2d data"
      },
      {
        "node_name": "QgsMesh3DDataBlock",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMesh3DDataBlock.html",
        "description": "is a block of 3d stacked mesh data related N faces defined on base mesh frame."
      },
      {
        "node_name": "QgsMeshAdvancedEditing",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshAdvancedEditing.html",
        "description": "Abstract class that can be derived to implement advanced editing on mesh"
      },
      {
        "node_name": "QgsMeshCalculator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshCalculator.html",
        "description": "Performs mesh layer calculations."
      },
      {
        "node_name": "QgsMeshDataBlock",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshDataBlock.html",
        "description": "is a block of integers/doubles that can be used to retrieve: active flags (e.g. face’s active integer flag) scalars (e.g. scalar dataset double values) vectors (e.g. vector dataset doubles x,y values)"
      },
      {
        "node_name": "QgsMeshDataProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshDataProvider.html",
        "description": "Base class for providing data forQgsMeshLayer"
      },
      {
        "node_name": "QgsMeshDataProviderTemporalCapabilities",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshDataProviderTemporalCapabilities.html",
        "description": "Class for handling properties relating to a mesh data provider’s temporal capabilities."
      },
      {
        "node_name": "QgsMeshDataSourceInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshDataSourceInterface.html",
        "description": "Interface for mesh data sources"
      },
      {
        "node_name": "QgsMeshDataset",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshDataset.html",
        "description": "Abstract class that represents a dataset"
      },
      {
        "node_name": "QgsMeshDatasetGroup",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshDatasetGroup.html",
        "description": "Abstract class that represents a dataset group"
      },
      {
        "node_name": "QgsMeshDatasetGroupMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshDatasetGroupMetadata.html",
        "description": "is a collection of dataset group metadata such as whether the data is vector or scalar, name"
      },
      {
        "node_name": "QgsMeshDatasetGroupTreeItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshDatasetGroupTreeItem.html",
        "description": "Tree item for display of the mesh dataset groups. Dataset group is set of datasets with the same name, but different control variable (e.g. time)"
      },
      {
        "node_name": "QgsMeshDatasetIndex",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshDatasetIndex.html",
        "description": "is index that identifies the dataset group (e.g. wind speed) and a dataset in this group (e.g. magnitude of wind speed in particular time)"
      },
      {
        "node_name": "QgsMeshDatasetMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshDatasetMetadata.html",
        "description": "is a collection of mesh dataset metadata such as whether the data is valid or associated time for the"
      },
      {
        "node_name": "QgsMeshDatasetSourceInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshDatasetSourceInterface.html",
        "description": "Interface for mesh datasets and dataset groups"
      },
      {
        "node_name": "QgsMeshDatasetValue",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshDatasetValue.html",
        "description": "represents single dataset value."
      },
      {
        "node_name": "QgsMeshEditForceByLine",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshEditForceByLine.html",
        "description": "Class derived fromQgsMeshAdvancedEditingthat forces mesh based on a line"
      },
      {
        "node_name": "QgsMeshEditForceByPolylines",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshEditForceByPolylines.html",
        "description": "Class derived fromQgsMeshEditForceByLinethat forces mesh based on polyline."
      },
      {
        "node_name": "QgsMeshEditRefineFaces",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshEditRefineFaces.html",
        "description": "Class that can do a refinement of faces of a mesh."
      },
      {
        "node_name": "QgsMeshEditingError",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshEditingError.html",
        "description": "Class that represents an error during mesh editing"
      },
      {
        "node_name": "QgsMeshEditor",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshEditor.html",
        "description": "Class that makes edit operation on a mesh"
      },
      {
        "node_name": "QgsMeshElevationAveragingMethod",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshElevationAveragingMethod.html",
        "description": "Elevation averaging method averages the values based on range defined absolute value to the model’s datum"
      },
      {
        "node_name": "QgsMeshLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshLayer.html",
        "description": "Represents a mesh layer supporting display of data on structured or unstructured meshes"
      },
      {
        "node_name": "QgsMeshLayerElevationProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshLayerElevationProperties.html",
        "description": "Mesh layer specific subclass ofQgsMapLayerElevationProperties."
      },
      {
        "node_name": "QgsMeshLayerSimpleLabeling",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshLayerSimpleLabeling.html",
        "description": "Basic implementation of the labeling interface for mesh layer."
      },
      {
        "node_name": "QgsMeshLayerTemporalProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshLayerTemporalProperties.html",
        "description": "Implementation of map layer temporal properties for mesh layers."
      },
      {
        "node_name": "QgsMeshMultiLevelsAveragingMethod",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshMultiLevelsAveragingMethod.html",
        "description": "Multi level averaging method specifies limits of vertical layers from the top layer down or reversed."
      },
      {
        "node_name": "QgsMeshRelativeHeightAveragingMethod",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshRelativeHeightAveragingMethod.html",
        "description": "Relative height averaging method averages the values based on range defined relative to bed elevation or surface (whencountedFromTop())"
      },
      {
        "node_name": "QgsMeshRendererMeshSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshRendererMeshSettings.html",
        "description": "Represents a mesh renderer settings for mesh object"
      },
      {
        "node_name": "QgsMeshRendererScalarSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshRendererScalarSettings.html",
        "description": "Represents a mesh renderer settings for scalar datasets"
      },
      {
        "node_name": "QgsMeshRendererSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshRendererSettings.html",
        "description": "Represents all mesh renderer settings"
      },
      {
        "node_name": "QgsMeshRendererVectorArrowSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshRendererVectorArrowSettings.html",
        "description": "Represents a mesh renderer settings for vector datasets displayed with"
      },
      {
        "node_name": "QgsMeshRendererVectorSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshRendererVectorSettings.html",
        "description": "Represents a renderer settings for vector datasets"
      },
      {
        "node_name": "QgsMeshRendererVectorStreamlineSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshRendererVectorStreamlineSettings.html",
        "description": "Represents a streamline renderer settings for vector datasets displayed by streamlines"
      },
      {
        "node_name": "QgsMeshRendererVectorTracesSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshRendererVectorTracesSettings.html",
        "description": "Represents a trace renderer settings for vector datasets displayed by particle traces"
      },
      {
        "node_name": "QgsMeshRendererVectorWindBarbSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshRendererVectorWindBarbSettings.html",
        "description": "Represents a mesh renderer settings for vector datasets displayed with wind barbs"
      },
      {
        "node_name": "QgsMeshSigmaAveragingMethod",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshSigmaAveragingMethod.html",
        "description": "Sigma averages over the values between 0 (bed level) and 1 (surface)."
      },
      {
        "node_name": "QgsMeshSpatialIndex",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshSpatialIndex.html",
        "description": "A spatial index forQgsMeshFaceorQgsMeshEdgeobjects."
      },
      {
        "node_name": "QgsMeshTimeSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshTimeSettings.html",
        "description": "Represents a mesh time settings for mesh datasets"
      },
      {
        "node_name": "QgsMeshTransformVerticesByExpression",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshTransformVerticesByExpression.html",
        "description": "Class that can transform vertices of a mesh by expression"
      },
      {
        "node_name": "QgsMeshVectorTraceAnimationGenerator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMeshVectorTraceAnimationGenerator.html",
        "description": "A wrapper forQgsMeshParticuleTracesFieldused to render the particles. Available for Python binding"
      },
      {
        "node_name": "QgsTopologicalMesh",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTopologicalMesh.html",
        "description": "Class that wraps aQgsMeshto ensure the consistency of the mesh during editing and help to access to elements from other elements"
      },
      {
        "node_name": "QgsAbstractLayerMetadataProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractLayerMetadataProvider.html",
        "description": "Layer metadata provider backend interface."
      },
      {
        "node_name": "QgsAbstractMetadataBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractMetadataBase.html",
        "description": "An abstract base class for metadata stores."
      },
      {
        "node_name": "QgsAbstractMetadataBaseValidator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractMetadataBaseValidator.html",
        "description": "Abstract base class for metadata validators."
      },
      {
        "node_name": "QgsLayerMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayerMetadata.html",
        "description": "A structured metadata store for a map layer."
      },
      {
        "node_name": "QgsLayerMetadataFormatter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayerMetadataFormatter.html",
        "description": "Class for metadata formatter."
      },
      {
        "node_name": "QgsLayerMetadataProviderRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayerMetadataProviderRegistry.html",
        "description": "Registry of layer metadata provider backends."
      },
      {
        "node_name": "QgsLayerMetadataProviderResult",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayerMetadataProviderResult.html",
        "description": "Result record of layer metadata provider search. The result contains QGIS metadata information and all information that is required by QGIS to load the layer and to filter the results."
      },
      {
        "node_name": "QgsLayerMetadataSearchResults",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayerMetadataSearchResults.html",
        "description": "Container of result records from a layer metadata search."
      },
      {
        "node_name": "QgsMetadataSearchContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMetadataSearchContext.html",
        "description": "Metadata search context"
      },
      {
        "node_name": "QgsMetadataUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMetadataUtils.html",
        "description": "Contains utility functions for working with metadata."
      },
      {
        "node_name": "QgsNativeMetadataBaseValidator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNativeMetadataBaseValidator.html",
        "description": "A validator for the native base QGIS metadata schema definition."
      },
      {
        "node_name": "QgsNativeMetadataValidator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNativeMetadataValidator.html",
        "description": "A validator for the native QGIS layer metadata schema definition."
      },
      {
        "node_name": "QgsNativeProjectMetadataValidator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNativeProjectMetadataValidator.html",
        "description": "A validator for the native QGIS project metadata schema definition."
      },
      {
        "node_name": "QgsProjectMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectMetadata.html",
        "description": "A structured metadata store for a map layer."
      },
      {
        "node_name": "QgsBlockingNetworkRequest",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBlockingNetworkRequest.html",
        "description": "A thread safe class for performing blocking (sync) network requests, with full support for QGIS proxy and authentication settings."
      },
      {
        "node_name": "QgsFetchedContent",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFetchedContent.html",
        "description": "FetchedContent holds useful information about a network content being"
      },
      {
        "node_name": "QgsFileDownloader",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFileDownloader.html",
        "description": "is a utility class for downloading files."
      },
      {
        "node_name": "QgsHttpHeaders",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsHttpHeaders.html",
        "description": "This class implements simple http header management."
      },
      {
        "node_name": "QgsNetworkAccessManager",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNetworkAccessManager.html",
        "description": "network access manager for QGIS"
      },
      {
        "node_name": "QgsNetworkContentFetcher",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNetworkContentFetcher.html",
        "description": "HTTP network content fetcher. A simple method for fetching remote HTTP content and converting the content to standard formats."
      },
      {
        "node_name": "QgsNetworkContentFetcherRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNetworkContentFetcherRegistry.html",
        "description": "Registry for temporary fetched files"
      },
      {
        "node_name": "QgsNetworkContentFetcherTask",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNetworkContentFetcherTask.html",
        "description": "Handles HTTP network content fetching in a background task."
      },
      {
        "node_name": "QgsNetworkReplyContent",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNetworkReplyContent.html",
        "description": "Encapsulates a network reply within a container which is inexpensive to copy and safe to pass between threads."
      },
      {
        "node_name": "QgsNetworkRequestParameters",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNetworkRequestParameters.html",
        "description": "Encapsulates parameters and properties of a network request."
      },
      {
        "node_name": "QgsNewsFeedModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNewsFeedModel.html",
        "description": "A model for published QGIS news feeds."
      },
      {
        "node_name": "QgsNewsFeedParser",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNewsFeedParser.html",
        "description": "Parser for published QGIS news feeds."
      },
      {
        "node_name": "QgsNewsFeedProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNewsFeedProxyModel.html",
        "description": "A proxy model for use withQgsNewsFeedModel."
      },
      {
        "node_name": "QgsBasicNumericFormat",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBasicNumericFormat.html",
        "description": "A numeric formatter which returns a simple text representation of a value."
      },
      {
        "node_name": "QgsBearingNumericFormat",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBearingNumericFormat.html",
        "description": "A numeric formatter which returns a text representation of a direction/bearing."
      },
      {
        "node_name": "QgsCurrencyNumericFormat",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCurrencyNumericFormat.html",
        "description": "A numeric formatter which returns a text representation of a currency value."
      },
      {
        "node_name": "QgsExpressionBasedNumericFormat",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExpressionBasedNumericFormat.html",
        "description": "A numeric formatter which uses aQgsExpressionto calculate the text representation of a value."
      },
      {
        "node_name": "QgsFallbackNumericFormat",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFallbackNumericFormat.html",
        "description": "A basic numeric formatter which returns a simple text representation of a value."
      },
      {
        "node_name": "QgsFractionNumericFormat",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFractionNumericFormat.html",
        "description": "A numeric formatter which returns a vulgar fractional representation of a decimal value (e.g. “1/2” instead of 0.5)."
      },
      {
        "node_name": "QgsGeographicCoordinateNumericFormat",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGeographicCoordinateNumericFormat.html",
        "description": "A numeric formatter which returns a text representation of a geographic coordinate (latitude or longitude)."
      },
      {
        "node_name": "QgsNumericFormat",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNumericFormat.html",
        "description": "A numeric formatter allows for formatting a numeric value for display, using a variety of different formatting techniques (e.g. as scientific notation, currency values, percentage values, etc)"
      },
      {
        "node_name": "QgsNumericFormatContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNumericFormatContext.html",
        "description": "A context for numeric formats"
      },
      {
        "node_name": "QgsNumericFormatRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNumericFormatRegistry.html",
        "description": "TheQgsNumericFormatRegistrymanages registered classes ofQgsNumericFormat."
      },
      {
        "node_name": "QgsPercentageNumericFormat",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPercentageNumericFormat.html",
        "description": "A numeric formatter which returns a text representation of a percentage value."
      },
      {
        "node_name": "QgsScientificNumericFormat",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsScientificNumericFormat.html",
        "description": "A numeric formatter which returns a scientific notation representation of a value."
      },
      {
        "node_name": "QgsPdfRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPdfRenderer.html",
        "description": "Utility class for rendering PDF documents."
      },
      {
        "node_name": "QgsBlurEffect",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBlurEffect.html",
        "description": "A paint effect which blurs a source picture, using a number of different blur methods."
      },
      {
        "node_name": "QgsColorEffect",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsColorEffect.html",
        "description": "A paint effect which alters the colors (e.g., brightness, contrast) in a source picture."
      },
      {
        "node_name": "QgsDrawSourceEffect",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDrawSourceEffect.html",
        "description": "A paint effect which draws the source picture with minor or no"
      },
      {
        "node_name": "QgsDropShadowEffect",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDropShadowEffect.html",
        "description": "A paint effect which draws an offset and optionally blurred drop shadow"
      },
      {
        "node_name": "QgsEffectPainter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsEffectPainter.html",
        "description": "A class to manager painter saving and restoring required for effect"
      },
      {
        "node_name": "QgsEffectStack",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsEffectStack.html",
        "description": "A paint effect which consists of a stack of other chained paint effects"
      },
      {
        "node_name": "QgsGlowEffect",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGlowEffect.html",
        "description": "Base class for paint effect which draw a glow inside or outside a picture."
      },
      {
        "node_name": "QgsImageOperation",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsImageOperation.html",
        "description": "Contains operations and filters which apply to QImages"
      },
      {
        "node_name": "QgsInnerGlowEffect",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsInnerGlowEffect.html",
        "description": "A paint effect which draws a glow within a picture."
      },
      {
        "node_name": "QgsInnerShadowEffect",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsInnerShadowEffect.html",
        "description": "A paint effect which draws an offset and optionally blurred drop shadow within a picture."
      },
      {
        "node_name": "QgsOuterGlowEffect",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsOuterGlowEffect.html",
        "description": "A paint effect which draws a glow outside of a picture."
      },
      {
        "node_name": "QgsPaintEffect",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPaintEffect.html",
        "description": "Base class for visual effects which can be applied to QPicture drawings"
      },
      {
        "node_name": "QgsPaintEffectAbstractMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPaintEffectAbstractMetadata.html",
        "description": "Stores metadata about a paint effect class."
      },
      {
        "node_name": "QgsPaintEffectRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPaintEffectRegistry.html",
        "description": "Registry of available paint effects."
      },
      {
        "node_name": "QgsShadowEffect",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsShadowEffect.html",
        "description": "Base class for paint effects which offset, blurred shadows"
      },
      {
        "node_name": "QgsTransformEffect",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTransformEffect.html",
        "description": "A paint effect which applies transformations (such as move, scale and rotate) to a picture."
      },
      {
        "node_name": "QgsGeometryPaintDevice",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGeometryPaintDevice.html",
        "description": "A paint device which converts everything renderer to aQgsGeometryrepresentation of the rendered shapes."
      },
      {
        "node_name": "QgsMaskPaintDevice",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMaskPaintDevice.html",
        "description": "Mask painter device that can be used to register everything painted into a QPainterPath used later as clip path"
      },
      {
        "node_name": "QgsNullPaintDevice",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNullPaintDevice.html",
        "description": "Null painter device that can be used for map renderer jobs which use custom painters."
      },
      {
        "node_name": "QgsPaintEngineHack",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPaintEngineHack.html",
        "description": "Hack to workaround Qt #5114 by disabling PatternTransform"
      },
      {
        "node_name": "QgsPainting",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPainting.html",
        "description": "Contains miscellaneous painting utility functions."
      },
      {
        "node_name": "Qgs2DPlot",
        "node_url": "https://qgis.org/pyqgis/3.40/core/Qgs2DPlot.html",
        "description": "Base class for 2-dimensional plot/chart/graphs."
      },
      {
        "node_name": "QgsPlot",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPlot.html",
        "description": "Base class for plot/chart/graphs."
      },
      {
        "node_name": "QgsPlotAxis",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPlotAxis.html",
        "description": "Encapsulates the properties of a plot axis."
      },
      {
        "node_name": "QgsPlotDefaultSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPlotDefaultSettings.html",
        "description": "Manages default settings for plot objects"
      },
      {
        "node_name": "QgsPointCloudAttribute",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudAttribute.html",
        "description": "Attribute for point cloud data pair of name and size in bytes"
      },
      {
        "node_name": "QgsPointCloudAttributeByRampRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudAttributeByRampRenderer.html",
        "description": "An RGB renderer for 2d visualisation of point clouds using embedded red, green and blue attributes."
      },
      {
        "node_name": "QgsPointCloudAttributeCollection",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudAttributeCollection.html",
        "description": "Collection of point cloud attributes"
      },
      {
        "node_name": "QgsPointCloudAttributeModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudAttributeModel.html",
        "description": "A model for display of available attributes from a point cloud."
      },
      {
        "node_name": "QgsPointCloudAttributeProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudAttributeProxyModel.html",
        "description": "A proxy model for filtering available attributes from a point cloud attribute model."
      },
      {
        "node_name": "QgsPointCloudAttributeStatistics",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudAttributeStatistics.html",
        "description": "Class used to store statistics of one attribute of a point cloud dataset."
      },
      {
        "node_name": "QgsPointCloudBlock",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudBlock.html",
        "description": "Base class for storing raw data from point cloud nodes"
      },
      {
        "node_name": "QgsPointCloudCategory",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudCategory.html",
        "description": "Represents an individual category (class) from aQgsPointCloudClassifiedRenderer."
      },
      {
        "node_name": "QgsPointCloudClassifiedRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudClassifiedRenderer.html",
        "description": "Renders point clouds by a classification attribute."
      },
      {
        "node_name": "QgsPointCloudDataProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudDataProvider.html",
        "description": "Base class for providing data forQgsPointCloudLayer"
      },
      {
        "node_name": "QgsPointCloudExtentRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudExtentRenderer.html",
        "description": "A renderer for 2d visualisation of point clouds which shows the dataset’s extents using a fill symbol."
      },
      {
        "node_name": "QgsPointCloudLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudLayer.html",
        "description": "Represents a map layer supporting display of point clouds"
      },
      {
        "node_name": "QgsPointCloudLayerElevationProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudLayerElevationProperties.html",
        "description": "Point cloud layer specific subclass ofQgsMapLayerElevationProperties."
      },
      {
        "node_name": "QgsPointCloudLayerExporter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudLayerExporter.html",
        "description": "Handles exporting point cloud layers to memory layers, OGR supported files and PDAL supported files."
      },
      {
        "node_name": "QgsPointCloudLayerExporterTask",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudLayerExporterTask.html",
        "description": "QgsTasktask which performs aQgsPointCloudLayerExporterlayer export operation as a background task. This can be used to export a point cloud layer out to a provider without blocking the QGIS interface."
      },
      {
        "node_name": "QgsPointCloudRenderContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudRenderContext.html",
        "description": "Encapsulates the render context for a 2D point cloud rendering operation."
      },
      {
        "node_name": "QgsPointCloudRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudRenderer.html",
        "description": "Abstract base class for 2d point cloud renderers."
      },
      {
        "node_name": "QgsPointCloudRendererAbstractMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudRendererAbstractMetadata.html",
        "description": "Stores metadata about one point cloud renderer class."
      },
      {
        "node_name": "QgsPointCloudRendererMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudRendererMetadata.html",
        "description": "Convenience metadata class that uses static functions to create point cloud renderer and its widget."
      },
      {
        "node_name": "QgsPointCloudRendererRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudRendererRegistry.html",
        "description": "Registry of 2D renderers for point clouds."
      },
      {
        "node_name": "QgsPointCloudRgbRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudRgbRenderer.html",
        "description": "An RGB renderer for 2d visualisation of point clouds using embedded red, green and blue attributes."
      },
      {
        "node_name": "QgsPointCloudStatistics",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointCloudStatistics.html",
        "description": "Class used to store statistics of a point cloud dataset."
      },
      {
        "node_name": "QgsAbstractLayoutIterator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractLayoutIterator.html",
        "description": "An abstract base class forQgsLayoutbased classes which can be exported byQgsLayoutExporter."
      },
      {
        "node_name": "QgsAbstractLayoutUndoCommand",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractLayoutUndoCommand.html",
        "description": "Base class for commands to undo/redo layout and layout object changes."
      },
      {
        "node_name": "QgsAbstractReportSection",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractReportSection.html",
        "description": "An abstract base class forQgsReportsubsections."
      },
      {
        "node_name": "QgsLayout",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayout.html",
        "description": "Base class for layouts, which can contain items such as maps, labels, scalebars, etc."
      },
      {
        "node_name": "QgsLayoutAligner",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutAligner.html",
        "description": "Handles aligning and distributing sets of layout items."
      },
      {
        "node_name": "QgsLayoutAtlas",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutAtlas.html",
        "description": "Class used to renderQgsLayoutas an atlas, by iterating over the features from an associated vector layer."
      },
      {
        "node_name": "QgsLayoutEffect",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutEffect.html",
        "description": "A QGraphicsEffect subclass used for rendering layout items onto a scene with custom composition modes."
      },
      {
        "node_name": "QgsLayoutExporter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutExporter.html",
        "description": "Handles rendering and exports of layouts to various formats."
      },
      {
        "node_name": "QgsLayoutFrame",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutFrame.html",
        "description": "Base class for frame items, which form a layout multiframe item."
      },
      {
        "node_name": "QgsLayoutGridSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutGridSettings.html",
        "description": "Contains settings relating to the appearance, spacing and offset for layout grids."
      },
      {
        "node_name": "QgsLayoutGuide",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutGuide.html",
        "description": "Contains the configuration for a single snap guide used by a layout."
      },
      {
        "node_name": "QgsLayoutGuideCollection",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutGuideCollection.html",
        "description": "Stores and manages the snap guides used by a layout."
      },
      {
        "node_name": "QgsLayoutGuideProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutGuideProxyModel.html",
        "description": "FiltersQgsLayoutGuideCollectionmodels to guides of a single orientation (horizontal or vertical)."
      },
      {
        "node_name": "QgsLayoutItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItem.html",
        "description": "Base class for graphical items within aQgsLayout."
      },
      {
        "node_name": "QgsLayoutItemAbstractMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemAbstractMetadata.html",
        "description": "Stores metadata about one layout item class."
      },
      {
        "node_name": "QgsLayoutItemAttributeTable",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemAttributeTable.html",
        "description": "A layout table subclass that displays attributes from a vector layer."
      },
      {
        "node_name": "QgsLayoutItemElevationProfile",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemElevationProfile.html",
        "description": "A layout item subclass for elevation profile plots."
      },
      {
        "node_name": "QgsLayoutItemGroup",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemGroup.html",
        "description": "A container for grouping severalQgsLayoutItems."
      },
      {
        "node_name": "QgsLayoutItemHtml",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemHtml.html",
        "description": "A layout multiframe subclass for HTML content."
      },
      {
        "node_name": "QgsLayoutItemLabel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemLabel.html",
        "description": "A layout item subclass for text labels."
      },
      {
        "node_name": "QgsLayoutItemLegend",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemLegend.html",
        "description": "A layout item subclass for map legends."
      },
      {
        "node_name": "QgsLayoutItemManualTable",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemManualTable.html",
        "description": "A layout table subclass that displays manually entered (and formatted) content."
      },
      {
        "node_name": "QgsLayoutItemMap",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemMap.html",
        "description": "Layout graphical items for displaying a map."
      },
      {
        "node_name": "QgsLayoutItemMapAtlasClippingSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemMapAtlasClippingSettings.html",
        "description": "Contains settings relating to clipping a layout map by the current atlas feature."
      },
      {
        "node_name": "QgsLayoutItemMapGrid",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemMapGrid.html",
        "description": "An individual grid which is drawn above the map content in aQgsLayoutItemMap."
      },
      {
        "node_name": "QgsLayoutItemMapGridStack",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemMapGridStack.html",
        "description": "A collection of grids which is drawn above the map content in aQgsLayoutItemMap. The grid stack controls which grids are drawn and the order they are drawn in."
      },
      {
        "node_name": "QgsLayoutItemMapItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemMapItem.html",
        "description": "An item which is drawn inside aQgsLayoutItemMap, e.g., a grid or map overview."
      },
      {
        "node_name": "QgsLayoutItemMapItemClipPathSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemMapItemClipPathSettings.html",
        "description": "Contains settings relating to clipping a layout map by another layout item."
      },
      {
        "node_name": "QgsLayoutItemMapItemStack",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemMapItemStack.html",
        "description": "A collection of map items which are drawn above the map content in aQgsLayoutItemMap. The item stack controls which items are drawn and the order they are drawn in."
      },
      {
        "node_name": "QgsLayoutItemMapOverview",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemMapOverview.html",
        "description": "An individual overview which is drawn above the map content in aQgsLayoutItemMap, and shows the extent of anotherQgsLayoutItemMap."
      },
      {
        "node_name": "QgsLayoutItemMapOverviewStack",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemMapOverviewStack.html",
        "description": "A collection of overviews which are drawn above the map content in aQgsLayoutItemMap. The overview stack controls which overviews are drawn and the order they are drawn in."
      },
      {
        "node_name": "QgsLayoutItemMarker",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemMarker.html",
        "description": "A layout item for showing marker symbols."
      },
      {
        "node_name": "QgsLayoutItemPage",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemPage.html",
        "description": "Item representing the paper in a layout."
      },
      {
        "node_name": "QgsLayoutItemPicture",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemPicture.html",
        "description": "A layout item subclass that displays SVG files or raster format images (jpg, png, …)."
      },
      {
        "node_name": "QgsLayoutItemPolygon",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemPolygon.html",
        "description": "Layout item for node based polygon shapes."
      },
      {
        "node_name": "QgsLayoutItemPolyline",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemPolyline.html",
        "description": "Layout item for node based polyline shapes."
      },
      {
        "node_name": "QgsLayoutItemRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemRegistry.html",
        "description": "Registry of available layout item types."
      },
      {
        "node_name": "QgsLayoutItemRenderContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemRenderContext.html",
        "description": "Contains settings and helpers relating to a render of aQgsLayoutItem."
      },
      {
        "node_name": "QgsLayoutItemScaleBar",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemScaleBar.html",
        "description": "A layout item subclass for scale bars."
      },
      {
        "node_name": "QgsLayoutItemShape",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemShape.html",
        "description": "Layout item for basic filled shapes (e.g. rectangles, ellipses)."
      },
      {
        "node_name": "QgsLayoutItemTextTable",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutItemTextTable.html",
        "description": "A text table item that reads text from string lists"
      },
      {
        "node_name": "QgsLayoutManager",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutManager.html",
        "description": "Manages storage of a set of layouts."
      },
      {
        "node_name": "QgsLayoutManagerModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutManagerModel.html",
        "description": "List model representing the print layouts and reports available in a layout manager."
      },
      {
        "node_name": "QgsLayoutManagerProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutManagerProxyModel.html",
        "description": "QSortFilterProxyModel subclass forQgsLayoutManagerModel"
      },
      {
        "node_name": "QgsLayoutMeasurement",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutMeasurement.html",
        "description": "This class provides a method of storing measurements for use in QGIS layouts using a variety of different measurement units."
      },
      {
        "node_name": "QgsLayoutMeasurementConverter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutMeasurementConverter.html",
        "description": "This class provides a method of convertingQgsLayoutMeasurementsfrom one unit to another."
      },
      {
        "node_name": "QgsLayoutModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutModel.html",
        "description": "A model for items attached to a layout. The model also maintains the z-order for the layout, and must be notified whenever item stacking changes."
      },
      {
        "node_name": "QgsLayoutMultiFrame",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutMultiFrame.html",
        "description": "Abstract base class for layout items with the ability to distribute the content to several frames (QgsLayoutFrameitems)."
      },
      {
        "node_name": "QgsLayoutMultiFrameAbstractMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutMultiFrameAbstractMetadata.html",
        "description": "Stores metadata about one layout multiframe class."
      },
      {
        "node_name": "QgsLayoutNodesItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutNodesItem.html",
        "description": "An abstract layout item that provides generic methods for node based shapes such as polygon or polylines."
      },
      {
        "node_name": "QgsLayoutNorthArrowHandler",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutNorthArrowHandler.html",
        "description": "An object which handles north-arrow type behavior for layout items."
      },
      {
        "node_name": "QgsLayoutObject",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutObject.html",
        "description": "A base class for objects which belong to a layout."
      },
      {
        "node_name": "QgsLayoutPageCollection",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutPageCollection.html",
        "description": "A manager for a collection of pages in a layout."
      },
      {
        "node_name": "QgsLayoutPoint",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutPoint.html",
        "description": "This class provides a method of storing points, consisting of an x and y coordinate, for use in QGIS layouts. Measurement units are stored alongside the position."
      },
      {
        "node_name": "QgsLayoutProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutProxyModel.html",
        "description": "Allows for filtering aQgsLayoutModelby item type."
      },
      {
        "node_name": "QgsLayoutRenderContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutRenderContext.html",
        "description": "Stores information relating to the current rendering settings for a layout."
      },
      {
        "node_name": "QgsLayoutReportContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutReportContext.html",
        "description": "Stores information relating to the current reporting context for a layout."
      },
      {
        "node_name": "QgsLayoutSerializableObject",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutSerializableObject.html",
        "description": "An interface for layout objects which can be stored and read from DOM elements."
      },
      {
        "node_name": "QgsLayoutSize",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutSize.html",
        "description": "This class provides a method of storing sizes, consisting of a width and height, for use in QGIS layouts. Measurement units are stored alongside the size."
      },
      {
        "node_name": "QgsLayoutSnapper",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutSnapper.html",
        "description": "Manages snapping grids and preset snap lines in a layout, and handles snapping points to the nearest grid coordinate/snap line when possible."
      },
      {
        "node_name": "QgsLayoutTable",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutTable.html",
        "description": "A class to display a table in the print layout, and allow the table to span over multiple frames"
      },
      {
        "node_name": "QgsLayoutTableColumn",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutTableColumn.html",
        "description": "Stores properties of a column for aQgsLayoutTable."
      },
      {
        "node_name": "QgsLayoutTableStyle",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutTableStyle.html",
        "description": "Styling option for a layout table cell"
      },
      {
        "node_name": "QgsLayoutUndoObjectInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutUndoObjectInterface.html",
        "description": "Interface for layout objects which support undo/redo commands."
      },
      {
        "node_name": "QgsLayoutUndoStack",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutUndoStack.html",
        "description": "An undo stack forQgsLayouts."
      },
      {
        "node_name": "QgsLayoutUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutUtils.html",
        "description": "Utilities for layouts."
      },
      {
        "node_name": "QgsLegendModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLegendModel.html",
        "description": "Item model implementation based on layer tree model for layout legend."
      },
      {
        "node_name": "QgsMasterLayoutInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMasterLayoutInterface.html",
        "description": "Interface for master layout type objects, such as print layouts and reports."
      },
      {
        "node_name": "QgsPageSize",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPageSize.html",
        "description": "A named page size for layouts."
      },
      {
        "node_name": "QgsPageSizeRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPageSizeRegistry.html",
        "description": "A registry for known page sizes."
      },
      {
        "node_name": "QgsPrintLayout",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPrintLayout.html",
        "description": "Print layout, aQgsLayoutsubclass for static or atlas-based layouts."
      },
      {
        "node_name": "QgsReport",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsReport.html",
        "description": "Represents a report for use with theQgsLayoutengine."
      },
      {
        "node_name": "QgsReportSectionContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsReportSectionContext.html",
        "description": "Current context for a report section."
      },
      {
        "node_name": "QgsReportSectionFieldGroup",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsReportSectionFieldGroup.html",
        "description": "A report section consisting of a features"
      },
      {
        "node_name": "QgsReportSectionLayout",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsReportSectionLayout.html",
        "description": "A report section consisting of a singleQgsLayoutbody."
      },
      {
        "node_name": "QgsProcessing",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessing.html",
        "description": "Contains enumerations and other constants for use in processing algorithms and parameters."
      },
      {
        "node_name": "QgsProcessingAlgRunnerTask",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingAlgRunnerTask.html",
        "description": "QgsTasktask which runs aQgsProcessingAlgorithmin a background task."
      },
      {
        "node_name": "QgsProcessingAlgorithm",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingAlgorithm.html",
        "description": "Abstract base class for processing algorithms."
      },
      {
        "node_name": "QgsProcessingAlgorithmInformation",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingAlgorithmInformation.html",
        "description": "Contains basic properties for a Processing algorithm."
      },
      {
        "node_name": "QgsProcessingBatchFeedback",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingBatchFeedback.html",
        "description": "Processing feedback subclass for use when batch processing."
      },
      {
        "node_name": "QgsProcessingContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingContext.html",
        "description": "Contains information about the context in which a processing algorithm is executed."
      },
      {
        "node_name": "QgsProcessingDestinationParameter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingDestinationParameter.html",
        "description": "Base class for all parameter definitions which represent file or layer destinations, e.g. parameters which are used for the destination for layers output by an algorithm."
      },
      {
        "node_name": "QgsProcessingFeatureBasedAlgorithm",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingFeatureBasedAlgorithm.html",
        "description": "An abstractQgsProcessingAlgorithmbase class for processing algorithms which operate “feature-by-feature”."
      },
      {
        "node_name": "QgsProcessingFeatureSource",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingFeatureSource.html",
        "description": "QgsFeatureSourcesubclass which proxies methods to an underlyingQgsFeatureSource, modifying results according to the settings in aQgsProcessingContext."
      },
      {
        "node_name": "QgsProcessingFeatureSourceDefinition",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingFeatureSourceDefinition.html",
        "description": "Encapsulates settings relating to a feature source input to a processing algorithm."
      },
      {
        "node_name": "QgsProcessingFeedback",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingFeedback.html",
        "description": "Base class for providing feedback from a processing algorithm."
      },
      {
        "node_name": "QgsProcessingLayerPostProcessorInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingLayerPostProcessorInterface.html",
        "description": "An interface for layer post-processing handlers for execution following a processing algorithm operation."
      },
      {
        "node_name": "QgsProcessingMultiStepFeedback",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingMultiStepFeedback.html",
        "description": "Processing feedback object for multi-step operations."
      },
      {
        "node_name": "QgsProcessingOutputBoolean",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingOutputBoolean.html",
        "description": "A boolean output for processing algorithms."
      },
      {
        "node_name": "QgsProcessingOutputConditionalBranch",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingOutputConditionalBranch.html",
        "description": "A conditional branch output for processing algorithms, which represents a possible model logic flow which branches out from this algorithm."
      },
      {
        "node_name": "QgsProcessingOutputDefinition",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingOutputDefinition.html",
        "description": "Base class for the definition of processing outputs."
      },
      {
        "node_name": "QgsProcessingOutputFile",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingOutputFile.html",
        "description": "A file output for processing algorithms."
      },
      {
        "node_name": "QgsProcessingOutputFolder",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingOutputFolder.html",
        "description": "A folder output for processing algorithms."
      },
      {
        "node_name": "QgsProcessingOutputHtml",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingOutputHtml.html",
        "description": "A HTML file output for processing algorithms."
      },
      {
        "node_name": "QgsProcessingOutputLayerDefinition",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingOutputLayerDefinition.html",
        "description": "Encapsulates settings relating to a feature sink or output raster layer for a processing algorithm."
      },
      {
        "node_name": "QgsProcessingOutputMapLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingOutputMapLayer.html",
        "description": "A map layer output for processing algorithms, where layers may be either vector or raster."
      },
      {
        "node_name": "QgsProcessingOutputMultipleLayers",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingOutputMultipleLayers.html",
        "description": "A multi-layer output for processing algorithms which create map layers, when the number and nature of the output layers is not predefined."
      },
      {
        "node_name": "QgsProcessingOutputNumber",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingOutputNumber.html",
        "description": "A numeric output for processing algorithms."
      },
      {
        "node_name": "QgsProcessingOutputPointCloudLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingOutputPointCloudLayer.html",
        "description": "A pointcloud layer output for processing algorithms."
      },
      {
        "node_name": "QgsProcessingOutputRasterLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingOutputRasterLayer.html",
        "description": "A raster layer output for processing algorithms."
      },
      {
        "node_name": "QgsProcessingOutputString",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingOutputString.html",
        "description": "A string output for processing algorithms."
      },
      {
        "node_name": "QgsProcessingOutputVariant",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingOutputVariant.html",
        "description": "A variant output for processing algorithms, capable of storing any QVariant value."
      },
      {
        "node_name": "QgsProcessingOutputVectorLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingOutputVectorLayer.html",
        "description": "A vector layer output for processing algorithms."
      },
      {
        "node_name": "QgsProcessingOutputVectorTileLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingOutputVectorTileLayer.html",
        "description": "A vector tile layer output for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterAggregate",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterAggregate.html",
        "description": "A parameter for “aggregate” configurations, which consist of a definition of desired output fields, types, and aggregate used to populate then."
      },
      {
        "node_name": "QgsProcessingParameterAlignRasterLayers",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterAlignRasterLayers.html",
        "description": "A parameter for Processing algorithms that need a list of input raster layers to align - this parameter provides Processing framework’s adapter for QList<QgsAlignRaster.Item>."
      },
      {
        "node_name": "QgsProcessingParameterAnnotationLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterAnnotationLayer.html",
        "description": "An annotation layer parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterArea",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterArea.html",
        "description": "A double numeric parameter for area values. Linked to a source layer or CRS parameter to determine what units the area values are in."
      },
      {
        "node_name": "QgsProcessingParameterAuthConfig",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterAuthConfig.html",
        "description": "A string parameter for authentication configuration ID values."
      },
      {
        "node_name": "QgsProcessingParameterBand",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterBand.html",
        "description": "A raster band parameter for Processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterBoolean",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterBoolean.html",
        "description": "A boolean parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterColor",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterColor.html",
        "description": "A color parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterCoordinateOperation",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterCoordinateOperation.html",
        "description": "A coordinate operation parameter for processing algorithms, for selection between available coordinate operations to use when projecting between a source and destination coordinate reference system."
      },
      {
        "node_name": "QgsProcessingParameterCrs",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterCrs.html",
        "description": "A coordinate reference system parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterDatabaseSchema",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterDatabaseSchema.html",
        "description": "A database schema parameter for processing algorithms, allowing users to select from existing schemas on a registered database connection."
      },
      {
        "node_name": "QgsProcessingParameterDatabaseTable",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterDatabaseTable.html",
        "description": "A database table name parameter for processing algorithms, allowing users to select from existing database tables on a registered database connection (or optionally to enter a new table name)."
      },
      {
        "node_name": "QgsProcessingParameterDateTime",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterDateTime.html",
        "description": "A datetime (or pure date or time) parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterDefinition",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterDefinition.html",
        "description": "Base class for the definition of processing parameters."
      },
      {
        "node_name": "QgsProcessingParameterDistance",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterDistance.html",
        "description": "A double numeric parameter for distance values. Linked to a source layer or CRS parameter to determine what units the distance values are in."
      },
      {
        "node_name": "QgsProcessingParameterDuration",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterDuration.html",
        "description": "A double numeric parameter for duration values. The returned value will always be in milliseconds."
      },
      {
        "node_name": "QgsProcessingParameterDxfLayers",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterDxfLayers.html",
        "description": "A parameter for Processing algorithms that need a list of input vector layers to export as DXF file - this parameter provides Processing framework’s adapter for QList<QgsDxfExport.DxfLayer>."
      },
      {
        "node_name": "QgsProcessingParameterEnum",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterEnum.html",
        "description": "An enum based parameter for processing algorithms, allowing for selection from predefined values."
      },
      {
        "node_name": "QgsProcessingParameterExpression",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterExpression.html",
        "description": "An expression parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterExtent",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterExtent.html",
        "description": "A rectangular map extent parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterFeatureSink",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterFeatureSink.html",
        "description": "A feature sink output for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterFeatureSource",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterFeatureSource.html",
        "description": "An input feature source (such as vector layers) parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterField",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterField.html",
        "description": "A vector layer or feature source field parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterFieldMapping",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterFieldMapping.html",
        "description": "A parameter for “field mapping” configurations, which consist of a definition of desired output fields, types, and expressions used to populate then."
      },
      {
        "node_name": "QgsProcessingParameterFile",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterFile.html",
        "description": "An input file or folder parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterFileDestination",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterFileDestination.html",
        "description": "A generic file based destination parameter, for specifying the destination path for a file (non-map layer) created by the algorithm."
      },
      {
        "node_name": "QgsProcessingParameterFolderDestination",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterFolderDestination.html",
        "description": "A folder destination parameter, for specifying the destination path for a folder created by the algorithm or used for creating new files within the algorithm."
      },
      {
        "node_name": "QgsProcessingParameterGeometry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterGeometry.html",
        "description": "A geometry parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterLayout",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterLayout.html",
        "description": "A print layout parameter, allowing users to select a print layout."
      },
      {
        "node_name": "QgsProcessingParameterLayoutItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterLayoutItem.html",
        "description": "A print layout item parameter, allowing users to select a particular item from a print layout."
      },
      {
        "node_name": "QgsProcessingParameterLimitedDataTypes",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterLimitedDataTypes.html",
        "description": "Can be inherited by parameters which require limits to their acceptable data types."
      },
      {
        "node_name": "QgsProcessingParameterMapLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterMapLayer.html",
        "description": "A map layer parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterMapTheme",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterMapTheme.html",
        "description": "A map theme parameter for processing algorithms, allowing users to select an existing map theme from a project."
      },
      {
        "node_name": "QgsProcessingParameterMatrix",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterMatrix.html",
        "description": "A table (matrix) parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterMeshDatasetGroups",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterMeshDatasetGroups.html",
        "description": "A parameter for processing algorithms that need a list of mesh dataset groups."
      },
      {
        "node_name": "QgsProcessingParameterMeshDatasetTime",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterMeshDatasetTime.html",
        "description": "A parameter for processing algorithms that need a list of mesh dataset index from time parameter."
      },
      {
        "node_name": "QgsProcessingParameterMeshLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterMeshLayer.html",
        "description": "A mesh layer parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterMultipleLayers",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterMultipleLayers.html",
        "description": "A parameter for processing algorithms which accepts multiple map layers."
      },
      {
        "node_name": "QgsProcessingParameterNumber",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterNumber.html",
        "description": "A numeric parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterPoint",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterPoint.html",
        "description": "A point parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterPointCloudAttribute",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterPointCloudAttribute.html",
        "description": "A point cloud layer attribute parameter for Processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterPointCloudDestination",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterPointCloudDestination.html",
        "description": "A point cloud layer destination parameter, for specifying the destination path for a point cloud layer created by the algorithm."
      },
      {
        "node_name": "QgsProcessingParameterPointCloudLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterPointCloudLayer.html",
        "description": "A point cloud layer parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterProviderConnection",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterProviderConnection.html",
        "description": "A data provider connection parameter for processing algorithms, allowing users to select from available registered connections for a particular data provider."
      },
      {
        "node_name": "QgsProcessingParameterRange",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterRange.html",
        "description": "A numeric range parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterRasterDestination",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterRasterDestination.html",
        "description": "A raster layer destination parameter, for specifying the destination path for a raster layer created by the algorithm."
      },
      {
        "node_name": "QgsProcessingParameterRasterLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterRasterLayer.html",
        "description": "A raster layer parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterScale",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterScale.html",
        "description": "A double numeric parameter for map scale values."
      },
      {
        "node_name": "QgsProcessingParameterString",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterString.html",
        "description": "A string parameter for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParameterTinInputLayers",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterTinInputLayers.html",
        "description": "A parameter for processing algorithms that need a list of input vector layers to construct a TIN."
      },
      {
        "node_name": "QgsProcessingParameterType",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterType.html",
        "description": "Makes metadata of processing parameters available."
      },
      {
        "node_name": "QgsProcessingParameterVectorDestination",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterVectorDestination.html",
        "description": "A vector layer destination parameter, for specifying the destination path for a vector layer created by the algorithm."
      },
      {
        "node_name": "QgsProcessingParameterVectorLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterVectorLayer.html",
        "description": "A vector layer (with or without geometry) parameter for processing algorithms. Consider using the more versatileQgsProcessingParameterFeatureSourcewherever possible."
      },
      {
        "node_name": "QgsProcessingParameterVectorTileDestination",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterVectorTileDestination.html",
        "description": "A vector tile layer destination parameter, for specifying the destination path for a vector tile layer created by the algorithm."
      },
      {
        "node_name": "QgsProcessingParameterVectorTileWriterLayers",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterVectorTileWriterLayers.html",
        "description": "A parameter for processing algorithms that need a list of input vector layers for writing of vector tiles - this parameter provides processing framework’s adapter for QList<QgsVectorTileWriter.Layer>."
      },
      {
        "node_name": "QgsProcessingParameterVolume",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameterVolume.html",
        "description": "A double numeric parameter for volume values. Linked to a source layer or CRS parameter to determine what units the volume values are in."
      },
      {
        "node_name": "QgsProcessingParameters",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingParameters.html",
        "description": "A collection of utilities for working with parameters when running a processing algorithm."
      },
      {
        "node_name": "QgsProcessingProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingProvider.html",
        "description": "Abstract base class for processing providers."
      },
      {
        "node_name": "QgsProcessingRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingRegistry.html",
        "description": "Registry for various processing components, including providers, algorithms and various parameters and outputs."
      },
      {
        "node_name": "QgsProcessingUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingUtils.html",
        "description": "Utility functions for use with processing classes."
      },
      {
        "node_name": "QgsProcessingModelAlgorithm",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingModelAlgorithm.html",
        "description": "Model based algorithm with processing."
      },
      {
        "node_name": "QgsProcessingModelChildAlgorithm",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingModelChildAlgorithm.html",
        "description": "Child algorithm representing a single component of aQgsProcessingModelAlgorithm."
      },
      {
        "node_name": "QgsProcessingModelChildAlgorithmResult",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingModelChildAlgorithmResult.html",
        "description": "Encapsulates the results of running a child algorithm within a model"
      },
      {
        "node_name": "QgsProcessingModelChildDependency",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingModelChildDependency.html",
        "description": "Contains details of a child algorithm dependency."
      },
      {
        "node_name": "QgsProcessingModelChildParameterSource",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingModelChildParameterSource.html",
        "description": "Source for the value of a parameter for a child algorithm within a model."
      },
      {
        "node_name": "QgsProcessingModelComment",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingModelComment.html",
        "description": "Represents a comment in a model."
      },
      {
        "node_name": "QgsProcessingModelComponent",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingModelComponent.html",
        "description": "Represents a component of a model algorithm."
      },
      {
        "node_name": "QgsProcessingModelGroupBox",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingModelGroupBox.html",
        "description": "Represents a group box in a model."
      },
      {
        "node_name": "QgsProcessingModelOutput",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingModelOutput.html",
        "description": "Represents a final output created by the model."
      },
      {
        "node_name": "QgsProcessingModelParameter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingModelParameter.html",
        "description": "Represents an input parameter used by the model."
      },
      {
        "node_name": "QgsProcessingModelResult",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProcessingModelResult.html",
        "description": "Encapsulates the results of running a Processing model"
      },
      {
        "node_name": "QgsMapViewsManager",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapViewsManager.html",
        "description": "Manages storage of a set of views."
      },
      {
        "node_name": "QgsProject",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProject.html",
        "description": "Encapsulates a QGIS project, including sets of map layers and their styles, layouts, annotations, canvases, etc."
      },
      {
        "node_name": "QgsProjectBadLayerHandler",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectBadLayerHandler.html",
        "description": "Interface for classes that handle missing layer files when reading project file."
      },
      {
        "node_name": "QgsProjectDirtyBlocker",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectDirtyBlocker.html",
        "description": "Temporarily blocksQgsProject“dirtying” for the lifetime of the object."
      },
      {
        "node_name": "QgsProjectDisplaySettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectDisplaySettings.html",
        "description": "Contains settings and properties relating to how aQgsProjectshould display values such as map coordinates and bearings."
      },
      {
        "node_name": "QgsProjectElevationProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectElevationProperties.html",
        "description": "Contains elevation properties for aQgsProject."
      },
      {
        "node_name": "QgsProjectFileTransform",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectFileTransform.html",
        "description": "Class to convert from older project file versions to newer."
      },
      {
        "node_name": "QgsProjectGpsSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectGpsSettings.html",
        "description": "Contains settings and properties relating to how aQgsProjectshould interact with a GPS device."
      },
      {
        "node_name": "QgsProjectProperty",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectProperty.html",
        "description": "An Abstract Base Class for QGIS project property hierarchys."
      },
      {
        "node_name": "QgsProjectPropertyKey",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectPropertyKey.html",
        "description": "Project property key node."
      },
      {
        "node_name": "QgsProjectPropertyValue",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectPropertyValue.html",
        "description": "Project property value node, contains aQgsProjectPropertyKey’s value."
      },
      {
        "node_name": "QgsProjectServerValidator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectServerValidator.html",
        "description": "Validates the server specific parts of the configuration of a QGIS project."
      },
      {
        "node_name": "QgsProjectStorage",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectStorage.html",
        "description": "Abstract interface for project storage - to be implemented by various backends and registered inQgsProjectStorageRegistry."
      },
      {
        "node_name": "QgsProjectStorageRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectStorageRegistry.html",
        "description": "Registry of storage backends thatQgsProjectmay use."
      },
      {
        "node_name": "QgsProjectStyleDatabaseModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectStyleDatabaseModel.html",
        "description": "List model representing the style databases associated with aQgsProject."
      },
      {
        "node_name": "QgsProjectStyleDatabaseProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectStyleDatabaseProxyModel.html",
        "description": "A proxy model for filteringQgsProjectStyleDatabaseModel."
      },
      {
        "node_name": "QgsProjectStyleSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectStyleSettings.html",
        "description": "Contains settings and properties relating to how aQgsProjectshould handle styling."
      },
      {
        "node_name": "QgsProjectTimeSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectTimeSettings.html",
        "description": "Contains temporal settings and properties for the project, this may be used when animating maps or showing temporal layers."
      },
      {
        "node_name": "QgsProjectTranslator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectTranslator.html",
        "description": "An interface for objects which can translate project strings."
      },
      {
        "node_name": "QgsProjectUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectUtils.html",
        "description": "Contains utility functions for working with QGIS projects."
      },
      {
        "node_name": "QgsProjectVersion",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectVersion.html",
        "description": "A class to describe the version of a project."
      },
      {
        "node_name": "QgsProjectViewSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsProjectViewSettings.html",
        "description": "Contains settings and properties relating to how aQgsProjectshould be displayed inside map canvas, e.g. map scales and default view extent for the project."
      },
      {
        "node_name": "QgsBilinearRasterResampler",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBilinearRasterResampler.html",
        "description": "Bilinear Raster Resampler"
      },
      {
        "node_name": "QgsBrightnessContrastFilter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsBrightnessContrastFilter.html",
        "description": "Brightness/contrast and gamma correction filter pipe for rasters."
      },
      {
        "node_name": "QgsClipToMinMaxEnhancement",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsClipToMinMaxEnhancement.html",
        "description": "A raster contrast enhancement that will clip a value to the specified min/max range."
      },
      {
        "node_name": "QgsColorRampShader",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsColorRampShader.html",
        "description": "A ramp shader will color a raster pixel based on a list of values ranges in a ramp."
      },
      {
        "node_name": "QgsContrastEnhancement",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsContrastEnhancement.html",
        "description": "Manipulates raster or point cloud pixel values so that they enhanceContrast or clip into a specified numerical range according to the specified ContrastEnhancementAlgorithm."
      },
      {
        "node_name": "QgsContrastEnhancementFunction",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsContrastEnhancementFunction.html",
        "description": "A contrast enhancement function is the base class for all raster contrast enhancements."
      },
      {
        "node_name": "QgsCubicRasterResampler",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCubicRasterResampler.html",
        "description": "Cubic Raster Resampler."
      },
      {
        "node_name": "QgsExifTools",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsExifTools.html",
        "description": "Contains utilities for working with EXIF tags in images."
      },
      {
        "node_name": "QgsHillshadeRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsHillshadeRenderer.html",
        "description": "A renderer for generating live hillshade models."
      },
      {
        "node_name": "QgsHueSaturationFilter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsHueSaturationFilter.html",
        "description": "Color and saturation filter pipe for rasters."
      },
      {
        "node_name": "QgsImageFetcher",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsImageFetcher.html",
        "description": "Handles asynchronous download of images"
      },
      {
        "node_name": "QgsLinearMinMaxEnhancement",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLinearMinMaxEnhancement.html",
        "description": "A color enhancement function that performs a linear enhanceContrast between min and max."
      },
      {
        "node_name": "QgsLinearMinMaxEnhancementWithClip",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLinearMinMaxEnhancementWithClip.html",
        "description": "A linear enhanceContrast enhancement that first clips to min max and then enhanceContrastes linearly between min and max."
      },
      {
        "node_name": "QgsMultiBandColorRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMultiBandColorRenderer.html",
        "description": "Renderer for multiband images with the color components"
      },
      {
        "node_name": "QgsPalettedRasterRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPalettedRasterRenderer.html",
        "description": "Renderer for paletted raster images."
      },
      {
        "node_name": "QgsRaster",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRaster.html",
        "description": "Raster namespace."
      },
      {
        "node_name": "QgsRasterAttributeTable",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterAttributeTable.html",
        "description": "TheQgsRasterAttributeTableclass represents a Raster Attribute Table (RAT)."
      },
      {
        "node_name": "QgsRasterBandStats",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterBandStats.html",
        "description": "The RasterBandStats struct is a container for statistics about a single raster band."
      },
      {
        "node_name": "QgsRasterBlock",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterBlock.html",
        "description": "Raster data container."
      },
      {
        "node_name": "QgsRasterBlockFeedback",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterBlockFeedback.html",
        "description": "Feedback object tailored for raster block reading."
      },
      {
        "node_name": "QgsRasterChecker",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterChecker.html",
        "description": "This is a helper class for unit tests that need to write an image and compare it to an expected result or render time."
      },
      {
        "node_name": "QgsRasterContourRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterContourRenderer.html",
        "description": "Raster renderer that generates contours on the fly for a source raster band."
      },
      {
        "node_name": "QgsRasterDataProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterDataProvider.html",
        "description": "Base class for raster data providers."
      },
      {
        "node_name": "QgsRasterDataProviderElevationProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterDataProviderElevationProperties.html",
        "description": "Handles elevation related properties for a raster data provider."
      },
      {
        "node_name": "QgsRasterDataProviderTemporalCapabilities",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterDataProviderTemporalCapabilities.html",
        "description": "Implementation of data provider temporal properties forQgsRasterDataProviders."
      },
      {
        "node_name": "QgsRasterDrawer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterDrawer.html",
        "description": "The drawing pipe for raster layers."
      },
      {
        "node_name": "QgsRasterFileWriter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterFileWriter.html",
        "description": "The raster file writer which allows you to save a raster to a new file."
      },
      {
        "node_name": "QgsRasterFileWriterTask",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterFileWriterTask.html",
        "description": "QgsTasktask which performs aQgsRasterFileWriterlayer saving operation as a background task. This can be used to save a raster layer out to a file without blocking the QGIS interface."
      },
      {
        "node_name": "QgsRasterHistogram",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterHistogram.html",
        "description": "TheQgsRasterHistogramis a container for histogram of a single raster band. It is used to cache computed histograms in raster providers."
      },
      {
        "node_name": "QgsRasterIdentifyResult",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterIdentifyResult.html",
        "description": "Raster identify results container."
      },
      {
        "node_name": "QgsRasterInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterInterface.html",
        "description": "Base class for processing filters like renderers, reprojector, resampler etc."
      },
      {
        "node_name": "QgsRasterIterator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterIterator.html",
        "description": "Iterator for sequentially processing raster cells."
      },
      {
        "node_name": "QgsRasterLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterLayer.html",
        "description": "Represents a raster layer."
      },
      {
        "node_name": "QgsRasterLayerElevationProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterLayerElevationProperties.html",
        "description": "Raster layer specific subclass ofQgsMapLayerElevationProperties."
      },
      {
        "node_name": "QgsRasterLayerTemporalProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterLayerTemporalProperties.html",
        "description": "Implementation of map layer temporal properties for raster layers."
      },
      {
        "node_name": "QgsRasterLayerUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterLayerUtils.html",
        "description": "Contains utility functions for working with raster layers."
      },
      {
        "node_name": "QgsRasterMinMaxOrigin",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterMinMaxOrigin.html",
        "description": "This class describes the origin of min/max values. It does not store by itself the min/max values."
      },
      {
        "node_name": "QgsRasterNuller",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterNuller.html",
        "description": "Raster pipe that deals with null values."
      },
      {
        "node_name": "QgsRasterPipe",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterPipe.html",
        "description": "Contains a pipeline of raster interfaces for sequential raster processing."
      },
      {
        "node_name": "QgsRasterProjector",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterProjector.html",
        "description": "Implements approximate projection support for optimised raster transformation."
      },
      {
        "node_name": "QgsRasterPyramid",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterPyramid.html",
        "description": "This struct is used to store pyramid info for the raster layer."
      },
      {
        "node_name": "QgsRasterRange",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterRange.html",
        "description": "Raster values range container. Represents range of values between min and max including min and max value."
      },
      {
        "node_name": "QgsRasterRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterRenderer.html",
        "description": "Raster renderer pipe that applies colors to a raster."
      },
      {
        "node_name": "QgsRasterRendererRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterRendererRegistry.html",
        "description": "Registry for raster renderers."
      },
      {
        "node_name": "QgsRasterRendererUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterRendererUtils.html",
        "description": "Utility functions for raster renderers."
      },
      {
        "node_name": "QgsRasterResampleFilter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterResampleFilter.html",
        "description": "Resample filter pipe for rasters."
      },
      {
        "node_name": "QgsRasterResampler",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterResampler.html",
        "description": "Interface for resampling rasters (e.g. to have a smoother appearance)"
      },
      {
        "node_name": "QgsRasterResamplerV2",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterResamplerV2.html",
        "description": "Interface for resampling rasters (V2) (e.g. to have a smoother appearance), which provides a more efficient interface vsQgsRasterResampler."
      },
      {
        "node_name": "QgsRasterShader",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterShader.html",
        "description": "Interface for all raster shaders."
      },
      {
        "node_name": "QgsRasterShaderFunction",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterShaderFunction.html",
        "description": "The raster shade function applies a shader to a pixel at render time - typically used to render grayscale images as false color."
      },
      {
        "node_name": "QgsRasterSingleColorRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterSingleColorRenderer.html",
        "description": "Raster renderer which renders all data pixels using a single color."
      },
      {
        "node_name": "QgsRasterTransparency",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterTransparency.html",
        "description": "Defines the list of pixel values to be considered as transparent or semi transparent when rendering rasters."
      },
      {
        "node_name": "QgsRasterViewPort",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterViewPort.html",
        "description": "This class provides details of the viewable area that a raster will be rendered into."
      },
      {
        "node_name": "QgsSingleBandColorDataRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSingleBandColorDataRenderer.html",
        "description": "Raster renderer pipe for single band color."
      },
      {
        "node_name": "QgsSingleBandGrayRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSingleBandGrayRenderer.html",
        "description": "Raster renderer pipe for single band gray."
      },
      {
        "node_name": "QgsSingleBandPseudoColorRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSingleBandPseudoColorRenderer.html",
        "description": "Raster renderer pipe for single band pseudocolor."
      },
      {
        "node_name": "QgsDoubleBoxScaleBarRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsDoubleBoxScaleBarRenderer.html",
        "description": "Double box with alternating colors."
      },
      {
        "node_name": "QgsHollowScaleBarRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsHollowScaleBarRenderer.html",
        "description": "Scalebar style that draws a single box with alternating color for the segments, with horizontal lines through alternating segments. AKA “South African” style."
      },
      {
        "node_name": "QgsNumericScaleBarRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNumericScaleBarRenderer.html",
        "description": "A scale bar style that draws text in the form of ‘1:XXXXX’."
      },
      {
        "node_name": "QgsScaleBarRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsScaleBarRenderer.html",
        "description": "Abstract base class for scale bar renderers."
      },
      {
        "node_name": "QgsScaleBarRendererRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsScaleBarRendererRegistry.html",
        "description": "TheQgsScaleBarRendererRegistrymanages registered scalebar renderers."
      },
      {
        "node_name": "QgsScaleBarSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsScaleBarSettings.html",
        "description": "TheQgsScaleBarSettingsclass stores the appearance and layout settings for scalebar drawing withQgsScaleBarRenderer."
      },
      {
        "node_name": "QgsSingleBoxScaleBarRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSingleBoxScaleBarRenderer.html",
        "description": "Scalebar style that draws a single box with alternating color for the segments."
      },
      {
        "node_name": "QgsSteppedLineScaleBarRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSteppedLineScaleBarRenderer.html",
        "description": "Scalebar style that draws a stepped line representation of a scalebar."
      },
      {
        "node_name": "QgsTicksScaleBarRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTicksScaleBarRenderer.html",
        "description": "A scale bar that draws segments using short ticks."
      },
      {
        "node_name": "QgsAbstractSensor",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractSensor.html",
        "description": "An abstract base class for sensor classes"
      },
      {
        "node_name": "QgsIODeviceSensor",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsIODeviceSensor.html",
        "description": "An abstract class QIODevice-based sensor classes"
      },
      {
        "node_name": "QgsSensorAbstractMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSensorAbstractMetadata.html",
        "description": "Stores metadata about a sensor class."
      },
      {
        "node_name": "QgsSensorManager",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSensorManager.html",
        "description": "Manages sensors."
      },
      {
        "node_name": "QgsSensorModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSensorModel.html",
        "description": "A QAbstractItemModel subclass for showing sensors within aQgsSensorManager."
      },
      {
        "node_name": "QgsSensorRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSensorRegistry.html",
        "description": "Registry of available sensor types."
      },
      {
        "node_name": "QgsSerialPortSensor",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSerialPortSensor.html",
        "description": "A serial port sensor class"
      },
      {
        "node_name": "QgsTcpSocketSensor",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTcpSocketSensor.html",
        "description": "A TCP socket sensor class"
      },
      {
        "node_name": "QgsUdpSocketSensor",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsUdpSocketSensor.html",
        "description": "A UDP socket sensor class"
      },
      {
        "node_name": "PyQgsSettingsEntryEnumFlag",
        "node_url": "https://qgis.org/pyqgis/3.40/core/PyQgsSettingsEntryEnumFlag.html",
        "description": "class PyQgsSettingsEntryEnumFlag     An enum settings entry.     since QGIS 3.20"
      },
      {
        "node_name": "QgsSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettings.html",
        "description": "This class is a composition of two QSettings instances:"
      },
      {
        "node_name": "QgsSettingsEntryBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsEntryBase.html",
        "description": "Represent settings entry and provides methods for reading and writing settings values. Different subclasses are provided for different settings types with metainformations to validate set values and provide more accurate settings description for the gui."
      },
      {
        "node_name": "QgsSettingsEntryBaseTemplateQColorBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsEntryBaseTemplateQColorBase.html",
        "description": "Base abstract class for settings entries with typed get and set methods"
      },
      {
        "node_name": "QgsSettingsEntryBaseTemplateQStringBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsEntryBaseTemplateQStringBase.html",
        "description": "Base abstract class for settings entries with typed get and set methods"
      },
      {
        "node_name": "QgsSettingsEntryBaseTemplateQStringListBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsEntryBaseTemplateQStringListBase.html",
        "description": "Base abstract class for settings entries with typed get and set methods"
      },
      {
        "node_name": "QgsSettingsEntryBaseTemplateQVariantBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsEntryBaseTemplateQVariantBase.html",
        "description": "Base abstract class for settings entries with typed get and set methods"
      },
      {
        "node_name": "QgsSettingsEntryBaseTemplateQVariantMapBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsEntryBaseTemplateQVariantMapBase.html",
        "description": "Base abstract class for settings entries with typed get and set methods"
      },
      {
        "node_name": "QgsSettingsEntryBaseTemplateboolBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsEntryBaseTemplateboolBase.html",
        "description": "Base abstract class for settings entries with typed get and set methods"
      },
      {
        "node_name": "QgsSettingsEntryBaseTemplatedoubleBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsEntryBaseTemplatedoubleBase.html",
        "description": "Base abstract class for settings entries with typed get and set methods"
      },
      {
        "node_name": "QgsSettingsEntryBaseTemplateintBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsEntryBaseTemplateintBase.html",
        "description": "Base abstract class for settings entries with typed get and set methods"
      },
      {
        "node_name": "QgsSettingsEntryBool",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsEntryBool.html",
        "description": "A boolean settings entry."
      },
      {
        "node_name": "QgsSettingsEntryColor",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsEntryColor.html",
        "description": "A color settings entry."
      },
      {
        "node_name": "QgsSettingsEntryDouble",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsEntryDouble.html",
        "description": "A double settings entry."
      },
      {
        "node_name": "QgsSettingsEntryGroup",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsEntryGroup.html",
        "description": "Creates a group of setting which have a common definition of base key"
      },
      {
        "node_name": "QgsSettingsEntryInteger",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsEntryInteger.html",
        "description": "An integer settings entry."
      },
      {
        "node_name": "QgsSettingsEntryString",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsEntryString.html",
        "description": "A string settings entry."
      },
      {
        "node_name": "QgsSettingsEntryStringList",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsEntryStringList.html",
        "description": "A string list settings entry."
      },
      {
        "node_name": "QgsSettingsEntryVariant",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsEntryVariant.html",
        "description": "A variant settings entry."
      },
      {
        "node_name": "QgsSettingsEntryVariantMap",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsEntryVariantMap.html",
        "description": "A string list settings entry."
      },
      {
        "node_name": "QgsSettingsRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsRegistry.html",
        "description": "is used for settings introspection and collects a list of childQgsSettingsRegistryand a list of childQgsSettingsRegistry"
      },
      {
        "node_name": "QgsSettingsRegistryCore",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsRegistryCore.html",
        "description": "is used for settings introspection and collects allQgsSettingsEntryinstances of core."
      },
      {
        "node_name": "QgsSettingsTree",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsTree.html",
        "description": "holds the tree structure for the settings in QGIS core"
      },
      {
        "node_name": "QgsSettingsTreeNamedListNode",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsTreeNamedListNode.html",
        "description": "is a named list tree node for the settings tree to help organizing and introspecting the tree. the named list node is used to store a group of settings under a dynamically named key."
      },
      {
        "node_name": "QgsSettingsTreeNode",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSettingsTreeNode.html",
        "description": "is a tree node for the settings tree to help organizing and introspecting the tree."
      },
      {
        "node_name": "Qgs25DRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/Qgs25DRenderer.html",
        "description": "A vector renderer which represents 3D features in an isometric view."
      },
      {
        "node_name": "QgsAbstractBrushedLineSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractBrushedLineSymbolLayer.html",
        "description": "Base class for line symbol layer types which draws line sections using a QBrush."
      },
      {
        "node_name": "QgsAnimatedMarkerSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAnimatedMarkerSymbolLayer.html",
        "description": "Animated marker symbol layer class."
      },
      {
        "node_name": "QgsArrowSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsArrowSymbolLayer.html",
        "description": "Line symbol layer used for representing lines as arrows."
      },
      {
        "node_name": "QgsCategorizedSymbolRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCategorizedSymbolRenderer.html",
        "description": "Constructor for QgsCategorizedSymbolRenderer."
      },
      {
        "node_name": "QgsCentroidFillSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCentroidFillSymbolLayer.html",
        "description": "A fill symbol layer which renders a marker symbol at the centroid of a polygon geometry."
      },
      {
        "node_name": "QgsColorBrewerPalette",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsColorBrewerPalette.html",
        "description": "Contains utility functions for working with Color Brewer color schemes."
      },
      {
        "node_name": "QgsCombinedStyleModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCombinedStyleModel.html",
        "description": "A model which contains entities from multipleQgsStyledatabases."
      },
      {
        "node_name": "QgsCptCityAllRampsItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCptCityAllRampsItem.html",
        "description": "An “All ramps item”, which contains all items in a flat hierarchy"
      },
      {
        "node_name": "QgsCptCityArchive",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCptCityArchive.html",
        "description": "Represents a CPT City color scheme."
      },
      {
        "node_name": "QgsCptCityBrowserModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCptCityBrowserModel.html",
        "description": "A custom item model for display of CPT City color palettes."
      },
      {
        "node_name": "QgsCptCityCollectionItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCptCityCollectionItem.html",
        "description": "A Collection: logical collection of subcollections and color ramps"
      },
      {
        "node_name": "QgsCptCityColorRampItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCptCityColorRampItem.html",
        "description": "Item that represents a layer that can be opened with one of the"
      },
      {
        "node_name": "QgsCptCityDataItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCptCityDataItem.html",
        "description": "Base class for all items in the model"
      },
      {
        "node_name": "QgsCptCityDirectoryItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCptCityDirectoryItem.html",
        "description": "A directory: contains subdirectories and color ramps"
      },
      {
        "node_name": "QgsCptCitySelectionItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCptCitySelectionItem.html",
        "description": "A selection: contains subdirectories and color ramps"
      },
      {
        "node_name": "QgsEllipseSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsEllipseSymbolLayer.html",
        "description": "A symbol layer for rendering objects with major and minor axis (e.g. ellipse, rectangle, etc)."
      },
      {
        "node_name": "QgsEmbeddedSymbolRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsEmbeddedSymbolRenderer.html",
        "description": "A vector feature renderer which uses embedded feature symbology to render per-feature symbols."
      },
      {
        "node_name": "QgsFeatureRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFeatureRenderer.html",
        "description": "Abstract base class for all 2D vector feature renderers."
      },
      {
        "node_name": "QgsFeatureRendererGenerator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFeatureRendererGenerator.html",
        "description": "An interface for objects which generate feature renderers for vector layers."
      },
      {
        "node_name": "QgsFillSymbol",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFillSymbol.html",
        "description": "A fill symbol type, for rendering Polygon and MultiPolygon geometries."
      },
      {
        "node_name": "QgsFillSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFillSymbolLayer.html",
        "description": "Abstract base class for fill symbol layers."
      },
      {
        "node_name": "QgsFilledLineSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFilledLineSymbolLayer.html",
        "description": "A line symbol layer type which fills a stroked line with aQgsFillSymbol."
      },
      {
        "node_name": "QgsFilledMarkerSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFilledMarkerSymbolLayer.html",
        "description": "Filled marker symbol layer, consisting of a shape which is rendered using aQgsFillSymbol. This allows the symbol to support advanced styling of the interior and stroke of the shape."
      },
      {
        "node_name": "QgsFontMarkerSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFontMarkerSymbolLayer.html",
        "description": "Constructs a font marker symbol layer."
      },
      {
        "node_name": "QgsGeometryGeneratorSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGeometryGeneratorSymbolLayer.html",
        "description": "A symbol layer subclass which alters rendered feature shapes through the use of QGIS expressions."
      },
      {
        "node_name": "QgsGradientFillSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGradientFillSymbolLayer.html",
        "description": "A fill symbol layer which draws a smooth color gradient over a polygon."
      },
      {
        "node_name": "QgsGraduatedSymbolRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGraduatedSymbolRenderer.html",
        "description": "A vector feature renderer which uses numeric attributes to classify features into different ranges."
      },
      {
        "node_name": "QgsHashedLineSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsHashedLineSymbolLayer.html",
        "description": "Line symbol layer type which draws repeating line sections along a line feature."
      },
      {
        "node_name": "QgsHeatmapRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsHeatmapRenderer.html",
        "description": "A renderer which draws points as a live heatmap"
      },
      {
        "node_name": "QgsImageFillSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsImageFillSymbolLayer.html",
        "description": "Base class for polygon renderers generating texture images"
      },
      {
        "node_name": "QgsInterpolatedLineColor",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsInterpolatedLineColor.html",
        "description": "Class defining color to render mesh datasets. The color can vary depending on the dataset value."
      },
      {
        "node_name": "QgsInterpolatedLineRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsInterpolatedLineRenderer.html",
        "description": "Represents a simple line renderer with width and color varying depending on values."
      },
      {
        "node_name": "QgsInterpolatedLineSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsInterpolatedLineSymbolLayer.html",
        "description": "A symbol layer that represents vector layer line feature as interpolated line The interpolation is done between two values defined at the"
      },
      {
        "node_name": "QgsInterpolatedLineWidth",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsInterpolatedLineWidth.html",
        "description": "Represents a width than can vary depending on values"
      },
      {
        "node_name": "QgsInvertedPolygonRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsInvertedPolygonRenderer.html",
        "description": "is a polygon-only feature renderer used to display features inverted, where the exterior is turned to an interior and where the exterior theoretically spans the entire plane, allowing to mask the surroundings of some features."
      },
      {
        "node_name": "QgsLegendSymbolItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLegendSymbolItem.html",
        "description": "The class stores information about one class/rule of a vector layer renderer in a unified way that can be used by legend model for rendering of legend."
      },
      {
        "node_name": "QgsLinePatternFillSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLinePatternFillSymbolLayer.html",
        "description": "A symbol fill consisting of repeated parallel lines."
      },
      {
        "node_name": "QgsLineSymbol",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLineSymbol.html",
        "description": "A line symbol type, for rendering LineString and MultiLineString geometries."
      },
      {
        "node_name": "QgsLineSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLineSymbolLayer.html",
        "description": "Abstract base class for line symbol layers."
      },
      {
        "node_name": "QgsLinearReferencingSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLinearReferencingSymbolLayer.html",
        "description": "Line symbol layer used for decorating accordingly to linear referencing."
      },
      {
        "node_name": "QgsLineburstSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLineburstSymbolLayer.html",
        "description": "Line symbol layer type which draws a gradient pattern perpendicularly along a line."
      },
      {
        "node_name": "QgsMapInfoSymbolConversionContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapInfoSymbolConversionContext.html",
        "description": "Context for a MapInfo symbol conversion operation."
      },
      {
        "node_name": "QgsMapInfoSymbolConverter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapInfoSymbolConverter.html",
        "description": "Handles conversion of MapInfo symbols to QGIS symbology."
      },
      {
        "node_name": "QgsMarkerLineSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMarkerLineSymbolLayer.html",
        "description": "Line symbol layer type which draws repeating marker symbols along a line feature."
      },
      {
        "node_name": "QgsMarkerSymbol",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMarkerSymbol.html",
        "description": "A marker symbol type, for rendering Point and MultiPoint geometries."
      },
      {
        "node_name": "QgsMarkerSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMarkerSymbolLayer.html",
        "description": "Abstract base class for marker symbol layers."
      },
      {
        "node_name": "QgsMaskMarkerSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMaskMarkerSymbolLayer.html",
        "description": "Special symbol layer that uses its sub symbol as a selective mask"
      },
      {
        "node_name": "QgsMergedFeatureRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMergedFeatureRenderer.html",
        "description": "is a polygon or line-only feature renderer used to renderer a set of features merged (or dissolved) into a single geometry."
      },
      {
        "node_name": "QgsNullSymbolRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsNullSymbolRenderer.html",
        "description": "Null symbol renderer, which draws no symbols for features by default, but allows for labeling and diagrams for the layer."
      },
      {
        "node_name": "QgsPointClusterRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointClusterRenderer.html",
        "description": "A renderer that automatically clusters points with the same geographic position."
      },
      {
        "node_name": "QgsPointDisplacementRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointDisplacementRenderer.html",
        "description": "A renderer that automatically displaces points with the same geographic location."
      },
      {
        "node_name": "QgsPointDistanceRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointDistanceRenderer.html",
        "description": "An abstract base class for distance based point renderers (e.g., clusterer and displacement renderers)."
      },
      {
        "node_name": "QgsPointPatternFillSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsPointPatternFillSymbolLayer.html",
        "description": "A fill symbol layer which fills polygon shapes with repeating marker symbols."
      },
      {
        "node_name": "QgsRandomMarkerFillSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRandomMarkerFillSymbolLayer.html",
        "description": "A fill symbol layer which places markers at random locations within polygons."
      },
      {
        "node_name": "QgsRasterFillSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterFillSymbolLayer.html",
        "description": "A class for filling symbols with a repeated raster image."
      },
      {
        "node_name": "QgsRasterLineSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterLineSymbolLayer.html",
        "description": "Line symbol layer type which draws line sections using a raster image file."
      },
      {
        "node_name": "QgsRasterMarkerSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRasterMarkerSymbolLayer.html",
        "description": "Raster marker symbol layer class."
      },
      {
        "node_name": "QgsRendererAbstractMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRendererAbstractMetadata.html",
        "description": "Stores metadata about one renderer class."
      },
      {
        "node_name": "QgsRendererCategory",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRendererCategory.html",
        "description": "Represents an individual category (class) from aQgsCategorizedSymbolRenderer."
      },
      {
        "node_name": "QgsRendererMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRendererMetadata.html",
        "description": "Convenience metadata class that uses static functions to create renderer and its widget."
      },
      {
        "node_name": "QgsRendererRange",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRendererRange.html",
        "description": "Creates a renderer symbol range"
      },
      {
        "node_name": "QgsRendererRangeLabelFormat",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRendererRangeLabelFormat.html",
        "description": "Deprecated since version 3.10."
      },
      {
        "node_name": "QgsRendererRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRendererRegistry.html",
        "description": "Registry of renderers."
      },
      {
        "node_name": "QgsRuleBasedRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRuleBasedRenderer.html",
        "description": "Rule based renderer."
      },
      {
        "node_name": "QgsSVGFillSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSVGFillSymbolLayer.html",
        "description": "A class for filling symbols with a repeated SVG file."
      },
      {
        "node_name": "QgsShapeburstFillSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsShapeburstFillSymbolLayer.html",
        "description": "Constructor for QgsShapeburstFillSymbolLayer."
      },
      {
        "node_name": "QgsSimpleFillSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSimpleFillSymbolLayer.html",
        "description": "Renders polygons using a single fill and stroke color."
      },
      {
        "node_name": "QgsSimpleLineSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSimpleLineSymbolLayer.html",
        "description": "A simple line symbol layer, which renders lines using a line in a variety of styles (e.g. solid, dotted, dashed)."
      },
      {
        "node_name": "QgsSimpleMarkerSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSimpleMarkerSymbolLayer.html",
        "description": "Simple marker symbol layer, consisting of a rendered shape with solid fill color and an stroke."
      },
      {
        "node_name": "QgsSimpleMarkerSymbolLayerBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSimpleMarkerSymbolLayerBase.html",
        "description": "Abstract base class for simple marker symbol layers. Handles creation of the symbol shapes but leaves the actual drawing of the symbols to subclasses."
      },
      {
        "node_name": "QgsSingleSymbolRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSingleSymbolRenderer.html",
        "description": "Constructor for QgsSingleSymbolRenderer."
      },
      {
        "node_name": "QgsStyle",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStyle.html",
        "description": "Constructor for QgsStyle, with the specifiedparentobject."
      },
      {
        "node_name": "QgsStyleColorRampEntity",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStyleColorRampEntity.html",
        "description": "A color ramp entity forQgsStyledatabases."
      },
      {
        "node_name": "QgsStyleEntityInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStyleEntityInterface.html",
        "description": "An interface for entities which can be placed in aQgsStyledatabase."
      },
      {
        "node_name": "QgsStyleEntityVisitorInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStyleEntityVisitorInterface.html",
        "description": "An interface for classes which can visit style entity (e.g. symbol) nodes (using the visitor pattern)."
      },
      {
        "node_name": "QgsStyleLabelSettingsEntity",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStyleLabelSettingsEntity.html",
        "description": "A label settings entity forQgsStyledatabases."
      },
      {
        "node_name": "QgsStyleLegendPatchShapeEntity",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStyleLegendPatchShapeEntity.html",
        "description": "A legend patch shape entity forQgsStyledatabases."
      },
      {
        "node_name": "QgsStyleModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStyleModel.html",
        "description": "A QAbstractItemModel subclass for showing symbol and color ramp entities contained within aQgsStyledatabase."
      },
      {
        "node_name": "QgsStyleProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStyleProxyModel.html",
        "description": "A QSortFilterProxyModel subclass for showing filtered symbol and color ramps entries from aQgsStyledatabase."
      },
      {
        "node_name": "QgsStyleSymbol3DEntity",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStyleSymbol3DEntity.html",
        "description": "A 3d symbol entity forQgsStyledatabases."
      },
      {
        "node_name": "QgsStyleSymbolEntity",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStyleSymbolEntity.html",
        "description": "A symbol entity forQgsStyledatabases."
      },
      {
        "node_name": "QgsStyleTextFormatEntity",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsStyleTextFormatEntity.html",
        "description": "A text format entity forQgsStyledatabases."
      },
      {
        "node_name": "QgsSvgCache",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSvgCache.html",
        "description": "A cache for images / pictures derived from SVG files"
      },
      {
        "node_name": "QgsSvgMarkerSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSvgMarkerSymbolLayer.html",
        "description": "Constructs SVG marker symbol layer with picture from given absolute path to a SVG file"
      },
      {
        "node_name": "QgsSymbol",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSymbol.html",
        "description": "Abstract base class for all rendered symbols."
      },
      {
        "node_name": "QgsSymbolAnimationSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSymbolAnimationSettings.html",
        "description": "Contains settings relating to symbol animation."
      },
      {
        "node_name": "QgsSymbolBufferSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSymbolBufferSettings.html",
        "description": "Contains settings relating to symbol buffers, which draw a “halo” effect around the symbol."
      },
      {
        "node_name": "QgsSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSymbolLayer.html",
        "description": "Constructor for QgsSymbolLayer."
      },
      {
        "node_name": "QgsSymbolLayerAbstractMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSymbolLayerAbstractMetadata.html",
        "description": "Stores metadata about one symbol layer class."
      },
      {
        "node_name": "QgsSymbolLayerId",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSymbolLayerId.html",
        "description": "We may need stable references to symbol layers, when pointers to symbol layers is not usable (when a symbol or a feature renderer is cloned for example)."
      },
      {
        "node_name": "QgsSymbolLayerMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSymbolLayerMetadata.html",
        "description": "Convenience metadata class that uses static functions to create symbol layer and its widget."
      },
      {
        "node_name": "QgsSymbolLayerReference",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSymbolLayerReference.html",
        "description": "Type used to refer to a specific symbol layer in a symbol of a layer."
      },
      {
        "node_name": "QgsSymbolLayerRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSymbolLayerRegistry.html",
        "description": "Registry of available symbol layer classes."
      },
      {
        "node_name": "QgsSymbolLayerUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSymbolLayerUtils.html",
        "description": "Contains utility functions for working with symbols and symbol layers."
      },
      {
        "node_name": "QgsSymbolLevelItem",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSymbolLevelItem.html",
        "description": ""
      },
      {
        "node_name": "QgsSymbolRenderContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsSymbolRenderContext.html",
        "description": "Constructor for QgsSymbolRenderContext"
      },
      {
        "node_name": "QgsTemplatedLineSymbolLayerBase",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTemplatedLineSymbolLayerBase.html",
        "description": "Base class for templated line symbols, e.g. line symbols which draw markers or hash lines at intervals along the line feature."
      },
      {
        "node_name": "QgsVectorFieldSymbolLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorFieldSymbolLayer.html",
        "description": "A symbol layer class for displaying displacement arrows based on point layer attributes."
      },
      {
        "node_name": "QgsFontDownloadDetails",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFontDownloadDetails.html",
        "description": "Encapsulates details required for downloading a font."
      },
      {
        "node_name": "QgsFontManager",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFontManager.html",
        "description": "Manages available fonts and font installation for a QGIS instance."
      },
      {
        "node_name": "QgsTextBackgroundSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTextBackgroundSettings.html",
        "description": "Container for settings relating to a text background object."
      },
      {
        "node_name": "QgsTextBlock",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTextBlock.html",
        "description": "Represents a block of text consisting of one or moreQgsTextFragmentobjects."
      },
      {
        "node_name": "QgsTextBlockFormat",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTextBlockFormat.html",
        "description": "Stores information relating to individual block formatting."
      },
      {
        "node_name": "QgsTextBufferSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTextBufferSettings.html",
        "description": "Container for settings relating to a text buffer."
      },
      {
        "node_name": "QgsTextCharacterFormat",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTextCharacterFormat.html",
        "description": "Stores information relating to individual character formatting."
      },
      {
        "node_name": "QgsTextDocument",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTextDocument.html",
        "description": "Represents a document consisting of one or moreQgsTextBlockobjects."
      },
      {
        "node_name": "QgsTextDocumentMetrics",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTextDocumentMetrics.html",
        "description": "Contains pre-calculated metrics of aQgsTextDocument."
      },
      {
        "node_name": "QgsTextDocumentRenderContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTextDocumentRenderContext.html",
        "description": "Encapsulates the context in which a text document is to be rendered."
      },
      {
        "node_name": "QgsTextFormat",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTextFormat.html",
        "description": "Container for all settings relating to text rendering."
      },
      {
        "node_name": "QgsTextFragment",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTextFragment.html",
        "description": "Stores a fragment of document along with formatting overrides to be used when rendering the fragment."
      },
      {
        "node_name": "QgsTextMaskSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTextMaskSettings.html",
        "description": "Container for settings relating to a selective masking around a text."
      },
      {
        "node_name": "QgsTextRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTextRenderer.html",
        "description": "Handles rendering text using rich formatting options, including drop shadows, buffers and background shapes."
      },
      {
        "node_name": "QgsTextRendererUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTextRendererUtils.html",
        "description": "Utility functions for text rendering."
      },
      {
        "node_name": "QgsTextShadowSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTextShadowSettings.html",
        "description": "Container for settings relating to a text shadow."
      },
      {
        "node_name": "QgsCesiumUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCesiumUtils.html",
        "description": "Contains utilities for working with Cesium data."
      },
      {
        "node_name": "QgsTiledSceneBoundingVolume",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTiledSceneBoundingVolume.html",
        "description": "Represents a bounding volume for a tiled scene."
      },
      {
        "node_name": "QgsTiledSceneDataProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTiledSceneDataProvider.html",
        "description": "Base class for data providers forQgsTiledSceneLayer"
      },
      {
        "node_name": "QgsTiledSceneIndex",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTiledSceneIndex.html",
        "description": "An index for tiled scene data providers."
      },
      {
        "node_name": "QgsTiledSceneLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTiledSceneLayer.html",
        "description": "Represents a map layer supporting display of tiled scene objects."
      },
      {
        "node_name": "QgsTiledSceneLayerElevationProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTiledSceneLayerElevationProperties.html",
        "description": "Tiled scene layer specific subclass ofQgsMapLayerElevationProperties."
      },
      {
        "node_name": "QgsTiledSceneRenderContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTiledSceneRenderContext.html",
        "description": "Encapsulates the render context for a 2D tiled scene rendering operation."
      },
      {
        "node_name": "QgsTiledSceneRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTiledSceneRenderer.html",
        "description": "Abstract base class for 2d tiled scene renderers."
      },
      {
        "node_name": "QgsTiledSceneRendererAbstractMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTiledSceneRendererAbstractMetadata.html",
        "description": "Stores metadata about one tiled scene renderer class."
      },
      {
        "node_name": "QgsTiledSceneRendererMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTiledSceneRendererMetadata.html",
        "description": "Convenience metadata class that uses static functions to create tiled scene renderer and its widget."
      },
      {
        "node_name": "QgsTiledSceneRendererRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTiledSceneRendererRegistry.html",
        "description": "Registry of 2D renderers for tiled scenes."
      },
      {
        "node_name": "QgsTiledSceneRequest",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTiledSceneRequest.html",
        "description": "Tiled scene data request."
      },
      {
        "node_name": "QgsTiledSceneTextureRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTiledSceneTextureRenderer.html",
        "description": "Renders tiled scene layers using textures."
      },
      {
        "node_name": "QgsTiledSceneTile",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTiledSceneTile.html",
        "description": "Represents an individual tile from a tiled scene data source."
      },
      {
        "node_name": "QgsTiledSceneWireframeRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTiledSceneWireframeRenderer.html",
        "description": "Renders tiled scene layers using the raw primitive wireframes."
      },
      {
        "node_name": "QgsAbstractValidityCheck",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAbstractValidityCheck.html",
        "description": "Abstract base class for individual validity checks."
      },
      {
        "node_name": "QgsLayoutValidityCheckContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsLayoutValidityCheckContext.html",
        "description": "Validity check context for print layout validation."
      },
      {
        "node_name": "QgsValidityCheckContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsValidityCheckContext.html",
        "description": "Base class for validity check contexts."
      },
      {
        "node_name": "QgsValidityCheckRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsValidityCheckRegistry.html",
        "description": "This class keeps a list ofQgsAbstractValidityCheckchecks which can be used when performing validity checks."
      },
      {
        "node_name": "QgsValidityCheckResult",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsValidityCheckResult.html",
        "description": "Represents an individual result from a validity check run by aQgsAbstractValidityChecksubclass."
      },
      {
        "node_name": "QgsAuxiliaryLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsAuxiliaryLayer.html",
        "description": "Class allowing to manage the auxiliary storage for a vector layer."
      },
      {
        "node_name": "QgsCodedFieldDomain",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCodedFieldDomain.html",
        "description": "Definition of a coded / enumerated field domain."
      },
      {
        "node_name": "QgsCodedValue",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsCodedValue.html",
        "description": "Associates a code and a value."
      },
      {
        "node_name": "QgsFieldDomain",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsFieldDomain.html",
        "description": "Base class for field domains."
      },
      {
        "node_name": "QgsGlobFieldDomain",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsGlobFieldDomain.html",
        "description": "Definition of a field domain for field content validated by a glob."
      },
      {
        "node_name": "QgsRangeFieldDomain",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsRangeFieldDomain.html",
        "description": "Definition of a numeric field domain with a range of validity for values."
      },
      {
        "node_name": "QgsTrackedVectorLayerTools",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsTrackedVectorLayerTools.html",
        "description": ""
      },
      {
        "node_name": "QgsVectorDataProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorDataProvider.html",
        "description": "This is the base class for vector data providers."
      },
      {
        "node_name": "QgsVectorDataProviderTemporalCapabilities",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorDataProviderTemporalCapabilities.html",
        "description": "Implementation of data provider temporal properties forQgsVectorDataProviders."
      },
      {
        "node_name": "QgsVectorLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayer.html",
        "description": "Represents a vector layer which manages a vector based data sets."
      },
      {
        "node_name": "QgsVectorLayerCache",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerCache.html",
        "description": "This class caches features of a givenQgsVectorLayer."
      },
      {
        "node_name": "QgsVectorLayerEditBuffer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerEditBuffer.html",
        "description": "Stores queued vector layer edit operations prior to committing changes to the layer’s data provider."
      },
      {
        "node_name": "QgsVectorLayerEditBufferGroup",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerEditBufferGroup.html",
        "description": "The edit buffer group manages a group of edit buffers."
      },
      {
        "node_name": "QgsVectorLayerEditPassthrough",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerEditPassthrough.html",
        "description": ""
      },
      {
        "node_name": "QgsVectorLayerEditUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerEditUtils.html",
        "description": "Contains utility functions for editing vector layers."
      },
      {
        "node_name": "QgsVectorLayerElevationProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerElevationProperties.html",
        "description": "Vector layer specific subclass ofQgsMapLayerElevationProperties."
      },
      {
        "node_name": "QgsVectorLayerExporter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerExporter.html",
        "description": "A convenience class for exporting vector layers to a destination data provider."
      },
      {
        "node_name": "QgsVectorLayerExporterTask",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerExporterTask.html",
        "description": "QgsTasktask which performs aQgsVectorLayerExporterlayer export operation as a background task. This can be used to export a vector layer out to a provider without blocking the QGIS interface."
      },
      {
        "node_name": "QgsVectorLayerFeatureCounter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerFeatureCounter.html",
        "description": "Counts the features in aQgsVectorLayerin task."
      },
      {
        "node_name": "QgsVectorLayerFeatureIterator",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerFeatureIterator.html",
        "description": "A feature iterator which iterates over features from aQgsVectorLayer."
      },
      {
        "node_name": "QgsVectorLayerFeatureSource",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerFeatureSource.html",
        "description": "Partial snapshot of vector layer’s state (only the members necessary for access to features)"
      },
      {
        "node_name": "QgsVectorLayerJoinBuffer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerJoinBuffer.html",
        "description": "Manages joined fields for a vector layer."
      },
      {
        "node_name": "QgsVectorLayerJoinInfo",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerJoinInfo.html",
        "description": "Defines left outer join from our vector layer to some other vector layer."
      },
      {
        "node_name": "QgsVectorLayerSelectedFeatureSource",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerSelectedFeatureSource.html",
        "description": "QgsFeatureSourcesubclass for the selected features from aQgsVectorLayer."
      },
      {
        "node_name": "QgsVectorLayerSelectionProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerSelectionProperties.html",
        "description": "Implementation of layer selection properties for vector layers."
      },
      {
        "node_name": "QgsVectorLayerTemporalContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerTemporalContext.html",
        "description": "Encapsulates the context in which aQgsVectorLayer’s temporal capabilities will be applied"
      },
      {
        "node_name": "QgsVectorLayerTemporalProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerTemporalProperties.html",
        "description": "Implementation of map layer temporal properties for vector layers."
      },
      {
        "node_name": "QgsVectorLayerTools",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerTools.html",
        "description": "Methods in this class are used to handle basic operations on vector layers. With an implementation of this class, parts of the application can ask for an operation to be done and the implementation will then take care of it."
      },
      {
        "node_name": "QgsVectorLayerToolsContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerToolsContext.html",
        "description": "Contains settings which reflect the context in which vector layer tool operations should consider."
      },
      {
        "node_name": "QgsVectorLayerUndoCommand",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUndoCommand.html",
        "description": "Base class for undo commands within aQgsVectorLayerEditBuffer."
      },
      {
        "node_name": "QgsVectorLayerUndoCommandAddAttribute",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUndoCommandAddAttribute.html",
        "description": "Undo command for adding a new attribute to a vector layer."
      },
      {
        "node_name": "QgsVectorLayerUndoCommandAddFeature",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUndoCommandAddFeature.html",
        "description": "Undo command for adding a feature to a vector layer."
      },
      {
        "node_name": "QgsVectorLayerUndoCommandChangeAttribute",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUndoCommandChangeAttribute.html",
        "description": "Undo command for modifying an attribute of a feature from a vector layer."
      },
      {
        "node_name": "QgsVectorLayerUndoCommandChangeGeometry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUndoCommandChangeGeometry.html",
        "description": "Undo command for modifying the geometry of a feature from a vector layer."
      },
      {
        "node_name": "QgsVectorLayerUndoCommandDeleteAttribute",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUndoCommandDeleteAttribute.html",
        "description": "Undo command for removing an existing attribute from a vector layer."
      },
      {
        "node_name": "QgsVectorLayerUndoCommandDeleteFeature",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUndoCommandDeleteFeature.html",
        "description": "Undo command for deleting a feature from a vector layer."
      },
      {
        "node_name": "QgsVectorLayerUndoCommandRenameAttribute",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUndoCommandRenameAttribute.html",
        "description": "Undo command for renaming an existing attribute of a vector layer."
      },
      {
        "node_name": "QgsVectorLayerUndoPassthroughCommand",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUndoPassthroughCommand.html",
        "description": "Undo command for vector layer in transaction group mode."
      },
      {
        "node_name": "QgsVectorLayerUndoPassthroughCommandAddAttribute",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUndoPassthroughCommandAddAttribute.html",
        "description": "Undo command for adding attri to a vector layer in transaction group."
      },
      {
        "node_name": "QgsVectorLayerUndoPassthroughCommandAddFeatures",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUndoPassthroughCommandAddFeatures.html",
        "description": "Undo command for adding a feature to a vector layer in transaction group mode."
      },
      {
        "node_name": "QgsVectorLayerUndoPassthroughCommandChangeAttribute",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUndoPassthroughCommandChangeAttribute.html",
        "description": "Undo command for changing attr value from a vector layer in transaction group."
      },
      {
        "node_name": "QgsVectorLayerUndoPassthroughCommandChangeAttributes",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUndoPassthroughCommandChangeAttributes.html",
        "description": "Undo command for changing attributes’ values from a vector layer in transaction group."
      },
      {
        "node_name": "QgsVectorLayerUndoPassthroughCommandChangeGeometry",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUndoPassthroughCommandChangeGeometry.html",
        "description": "Undo command for changing feature geometry from a vector layer in transaction group."
      },
      {
        "node_name": "QgsVectorLayerUndoPassthroughCommandDeleteAttribute",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUndoPassthroughCommandDeleteAttribute.html",
        "description": "Undo command for deleting attri of a vector layer in transaction group."
      },
      {
        "node_name": "QgsVectorLayerUndoPassthroughCommandDeleteFeatures",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUndoPassthroughCommandDeleteFeatures.html",
        "description": "Undo command for deleting features from a vector layer in transaction group."
      },
      {
        "node_name": "QgsVectorLayerUndoPassthroughCommandRenameAttribute",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUndoPassthroughCommandRenameAttribute.html",
        "description": "Undo command for deleting attri of a vector layer in transaction group."
      },
      {
        "node_name": "QgsVectorLayerUndoPassthroughCommandUpdate",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUndoPassthroughCommandUpdate.html",
        "description": "Undo command for running a specific sql query in transaction group."
      },
      {
        "node_name": "QgsVectorLayerUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorLayerUtils.html",
        "description": "Contains utility methods for working withQgsVectorLayers."
      },
      {
        "node_name": "QgsMapBoxGlStyleAbstractSource",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapBoxGlStyleAbstractSource.html",
        "description": "Abstract base class for MapBox GL style sources."
      },
      {
        "node_name": "QgsMapBoxGlStyleConversionContext",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapBoxGlStyleConversionContext.html",
        "description": "Context for a MapBox GL style conversion operation."
      },
      {
        "node_name": "QgsMapBoxGlStyleConverter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapBoxGlStyleConverter.html",
        "description": "Handles conversion of MapBox GL styles to QGIS vector tile renderers and labeling settings."
      },
      {
        "node_name": "QgsMapBoxGlStyleRasterSource",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapBoxGlStyleRasterSource.html",
        "description": "Encapsulates a MapBox GL style raster source."
      },
      {
        "node_name": "QgsMapBoxGlStyleRasterSubLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsMapBoxGlStyleRasterSubLayer.html",
        "description": "Encapsulates a MapBox GL style raster sub layer."
      },
      {
        "node_name": "QgsVectorTileBasicLabeling",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorTileBasicLabeling.html",
        "description": "Basic labeling configuration for vector tile layers. It contains a definition of a list of labeling styles, where each labeling style is a combination of sub-layer name, geometry type, filter expression, zoom range and label settings."
      },
      {
        "node_name": "QgsVectorTileBasicLabelingStyle",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorTileBasicLabelingStyle.html",
        "description": "Configuration of a single style withinQgsVectorTileBasicLabeling"
      },
      {
        "node_name": "QgsVectorTileBasicRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorTileBasicRenderer.html",
        "description": "The default vector tile renderer implementation. It has an ordered list of “styles”, each defines a rendering rule."
      },
      {
        "node_name": "QgsVectorTileBasicRendererStyle",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorTileBasicRendererStyle.html",
        "description": "Definition of map rendering of a subset of vector tile data. The subset of data is defined by:"
      },
      {
        "node_name": "QgsVectorTileLabeling",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorTileLabeling.html",
        "description": "Base class for labeling configuration classes for vector tile layers."
      },
      {
        "node_name": "QgsVectorTileLayer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorTileLayer.html",
        "description": "Implements a map layer that is dedicated to rendering of vector tiles."
      },
      {
        "node_name": "QgsVectorTileMatrixSet",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorTileMatrixSet.html",
        "description": "Encapsulates properties of a vector tile matrix set, including tile origins and scaling information."
      },
      {
        "node_name": "QgsVectorTileRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorTileRenderer.html",
        "description": "Abstract base class for all vector tile renderer implementations."
      },
      {
        "node_name": "QgsVectorTileRendererData",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorTileRendererData.html",
        "description": "Contains decoded features of a single vector tile and any other data necessary for rendering of it."
      },
      {
        "node_name": "QgsVectorTileUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorTileUtils.html",
        "description": "Random utility functions for working with vector tiles"
      },
      {
        "node_name": "QgsVectorTileWriter",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVectorTileWriter.html",
        "description": "Takes care of writing vector tiles."
      },
      {
        "node_name": "QgsVtpkTiles",
        "node_url": "https://qgis.org/pyqgis/3.40/core/QgsVtpkTiles.html",
        "description": "Utility class for reading and writing ESRI VTPK files."
      }
    ]
  },
  {
    "category_name": "gui",
    "category_url": "https://qgis.org/pyqgis/3.40/gui/index.html",
    "nodes": [
      {
        "node_name": "QgisInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgisInterface.html",
        "description": "Abstract base class defining interfaces exposed by QgisApp and made available to plugins."
      },
      {
        "node_name": "Qgs3DSymbolDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/Qgs3DSymbolDialog.html",
        "description": "A dialog for configuring a 3D symbol."
      },
      {
        "node_name": "Qgs3DSymbolWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/Qgs3DSymbolWidget.html",
        "description": "Base class for 3D symbol configuration widgets."
      },
      {
        "node_name": "QgsAbstractDataSourceWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAbstractDataSourceWidget.html",
        "description": "Abstract base Data Source Widget to create connections and add layers This class provides common functionality and the interface for all source select dialogs used by data providers to configure data sources and add layers."
      },
      {
        "node_name": "QgsAbstractFileContentSourceLineEdit",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAbstractFileContentSourceLineEdit.html",
        "description": "Abstract base class for a widgets which allows users to select content from a file, embedding a file, etc."
      },
      {
        "node_name": "QgsAbstractMapToolHandler",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAbstractMapToolHandler.html",
        "description": "An abstract base class for map tool handlers which automatically handle all the necessary logic for toggling the map tool and enabling/disabling the associated action when the QGIS application is in a state permissible for the tool."
      },
      {
        "node_name": "QgsAbstractRelationEditorConfigWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAbstractRelationEditorConfigWidget.html",
        "description": "This class should be subclassed for every configurable relation widget type."
      },
      {
        "node_name": "QgsAbstractRelationEditorWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAbstractRelationEditorWidget.html",
        "description": "Base class to build new relation widgets."
      },
      {
        "node_name": "QgsAbstractRelationEditorWidgetFactory",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAbstractRelationEditorWidgetFactory.html",
        "description": "Factory class for creating relation widgets and their corresponding config widgets"
      },
      {
        "node_name": "QgsAdvancedDigitizingCanvasItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAdvancedDigitizingCanvasItem.html",
        "description": "The QgsAdvancedDigitizingCanvasItem class draws the graphical elements of the CAD tools (QgsAdvancedDigitizingDockWidget) on the map canvas."
      },
      {
        "node_name": "QgsAdvancedDigitizingDockWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAdvancedDigitizingDockWidget.html",
        "description": "TheQgsAdvancedDigitizingDockWidgetclass is a dockable widget used to handle the CAD tools on top of a selection of map tools. It handles both the UI and the constraints. Constraints are applied by implementing filters called fromQgsMapToolAdvancedDigitizing."
      },
      {
        "node_name": "QgsAdvancedDigitizingFloater",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAdvancedDigitizingFloater.html",
        "description": "TheQgsAdvancedDigitizingFloaterclass is widget that floats next to the mouse pointer, and allow interaction with the AdvancedDigitizing feature. It proxies display and actions toQgsMapToolAdvancedDigitizingDockWidget."
      },
      {
        "node_name": "QgsAdvancedDigitizingTool",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAdvancedDigitizingTool.html",
        "description": "An abstract class for advanced digitizing tools."
      },
      {
        "node_name": "QgsAdvancedDigitizingToolAbstractMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAdvancedDigitizingToolAbstractMetadata.html",
        "description": "Stores metadata about one advanced digitizing tool class."
      },
      {
        "node_name": "QgsAdvancedDigitizingToolsRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAdvancedDigitizingToolsRegistry.html",
        "description": "Registry of available advanced digitizing tools."
      },
      {
        "node_name": "QgsAggregateToolButton",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAggregateToolButton.html",
        "description": "Offers a toolbutton to choose between different aggregate functions. Functions are filtered based on the type."
      },
      {
        "node_name": "QgsAlignmentComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAlignmentComboBox.html",
        "description": "A combo box which allows choice of alignment settings (e.g. left, right, …)."
      },
      {
        "node_name": "QgsAnimatedImageSourceLineEdit",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAnimatedImageSourceLineEdit.html",
        "description": "A line edit widget with toolbutton for setting an animated raster image path."
      },
      {
        "node_name": "QgsApplicationExitBlockerInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsApplicationExitBlockerInterface.html",
        "description": "An interface that may be implemented to allow plugins or scripts to temporarily block the QGIS application from exiting."
      },
      {
        "node_name": "QgsAttributeEditorContext",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAttributeEditorContext.html",
        "description": "This class contains context information for attribute editor widgets. It will be passed to embedded widgets whenever this occurs (e.g. when showing an embedded form due to relations)"
      },
      {
        "node_name": "QgsAttributeForm",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAttributeForm.html",
        "description": ""
      },
      {
        "node_name": "QgsAttributeFormEditorWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAttributeFormEditorWidget.html",
        "description": "A widget consisting of both an editor widget and additional widgets for controlling the behavior of the editor widget depending on a number of possible modes. For instance, if the parent attribute form is in the multi edit mode, this widget will show both the editor widget and a tool button for controlling the multi edit results."
      },
      {
        "node_name": "QgsAttributeFormInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAttributeFormInterface.html",
        "description": ""
      },
      {
        "node_name": "QgsAttributeFormRelationEditorWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAttributeFormRelationEditorWidget.html",
        "description": "Widget to show for child relations on an attribute form."
      },
      {
        "node_name": "QgsAttributeFormWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAttributeFormWidget.html",
        "description": "Base class for all widgets shown on aQgsAttributeForm. Consists of the widget which is visible in edit mode as well as the widget visible in search mode."
      },
      {
        "node_name": "QgsAttributeTypeLoadDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAttributeTypeLoadDialog.html",
        "description": ""
      },
      {
        "node_name": "QgsBlendModeComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsBlendModeComboBox.html",
        "description": "A combobox which lets the user select blend modes from a predefined list"
      },
      {
        "node_name": "QgsBrowserDockWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsBrowserDockWidget.html",
        "description": "A dock widget containing aQgsBrowserWidgetfor navigating and managing data sources."
      },
      {
        "node_name": "QgsBrowserTreeView",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsBrowserTreeView.html",
        "description": "TheQgsBrowserTreeViewclass extends QTreeView with save/restore tree state functionality."
      },
      {
        "node_name": "QgsBrowserWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsBrowserWidget.html",
        "description": "A widget showing a browser tree view along with toolbar and toggleable properties pane."
      },
      {
        "node_name": "QgsBusyIndicatorDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsBusyIndicatorDialog.html",
        "description": "A simple dialog to show an indeterminate busy progress indicator."
      },
      {
        "node_name": "QgsCategoryDisplayLabelDelegate",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCategoryDisplayLabelDelegate.html",
        "description": "A label delegate being able to display html encoded content"
      },
      {
        "node_name": "QgsCharacterSelectorDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCharacterSelectorDialog.html",
        "description": "A dialog for selecting a single character from a single font"
      },
      {
        "node_name": "QgsCheckableComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCheckableComboBox.html",
        "description": "QComboBox subclass which allows selecting multiple items."
      },
      {
        "node_name": "QgsCollapsibleGroupBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCollapsibleGroupBox.html",
        "description": "A groupbox that collapses/expands when toggled and can save its collapsed and checked states. By default, it auto-saves only its collapsed state to the global settings based on the widget and it’s parent names. Holding Alt modifier key when toggling collapsed state will synchronize the toggling across other collapsible group boxes with the same syncGroup QString value Holding Shift modifier key when attempting to toggle collapsed state will expand current group box, then collapse any others with"
      },
      {
        "node_name": "QgsCollapsibleGroupBoxBasic",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCollapsibleGroupBoxBasic.html",
        "description": "A groupbox that collapses/expands when toggled. Basic classQgsCollapsibleGroupBoxBasicdoes not auto-save collapsed or checked state Holding Alt modifier key when toggling collapsed state will synchronize the toggling across other collapsible group boxes with the same syncGroup QString value Holding Shift modifier key when attempting to toggle collapsed state will expand current group box, then collapse any others with the same syncGroup QString value"
      },
      {
        "node_name": "QgsColorBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorBox.html",
        "description": "A color box widget. This widget consists of a two dimensional rectangle filled with color variations, where a different color component varies along both the horizontal and vertical axis."
      },
      {
        "node_name": "QgsColorBrewerColorRampDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorBrewerColorRampDialog.html",
        "description": "A dialog which allows users to modify the properties of aQgsColorBrewerColorRamp."
      },
      {
        "node_name": "QgsColorBrewerColorRampWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorBrewerColorRampWidget.html",
        "description": "A widget which allows users to modify the properties of aQgsColorBrewerColorRamp."
      },
      {
        "node_name": "QgsColorButton",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorButton.html",
        "description": "A cross platform button subclass for selecting colors. Will open a color chooser dialog when clicked. Offers live updates to button from color chooser dialog. An attached drop-down menu allows for copying and pasting colors, picking colors from the screen, and selecting colors from color swatch grids."
      },
      {
        "node_name": "QgsColorDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorDialog.html",
        "description": "A custom QGIS dialog for selecting a color. Has many improvements over the standard Qt color picker dialog, including hue wheel supports, color swatches, and a color sampler."
      },
      {
        "node_name": "QgsColorPreviewWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorPreviewWidget.html",
        "description": "A preview box which displays one or two colors as swatches."
      },
      {
        "node_name": "QgsColorRampButton",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorRampButton.html",
        "description": "A cross platform button subclass for selecting color ramps. Will open color ramp dialogs when clicked. Offers live updates to button from color ramp dialog. An attached drop-down menu allows for access to saved color ramps, as well as option to invert the current color ramp and create new ramps."
      },
      {
        "node_name": "QgsColorRampLegendNodeDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorRampLegendNodeDialog.html",
        "description": "A dialog for configuring aQgsColorRampLegendNode(QgsColorRampLegendNodeSettings)."
      },
      {
        "node_name": "QgsColorRampLegendNodeWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorRampLegendNodeWidget.html",
        "description": "A widget for properties relating to aQgsColorRampLegendNode(QgsColorRampLegendNodeSettings)."
      },
      {
        "node_name": "QgsColorRampWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorRampWidget.html",
        "description": "A color ramp widget. This widget consists of an interactive box filled with a color which varies along its length by a single color component (e.g., varying saturation from 0 to 100%)."
      },
      {
        "node_name": "QgsColorSchemeList",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorSchemeList.html",
        "description": "An editable list of color swatches, taken from an associatedQgsColorScheme."
      },
      {
        "node_name": "QgsColorSchemeModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorSchemeModel.html",
        "description": "A model for colors in a color scheme"
      },
      {
        "node_name": "QgsColorSliderWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorSliderWidget.html",
        "description": "A composite horizontal color ramp widget and associated spinbox for manual value entry."
      },
      {
        "node_name": "QgsColorSwatchDelegate",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorSwatchDelegate.html",
        "description": "A delegate for showing a color swatch in a list"
      },
      {
        "node_name": "QgsColorSwatchGrid",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorSwatchGrid.html",
        "description": "A grid of color swatches, which allows for user selection. Colors are taken from an associatedQgsColorScheme."
      },
      {
        "node_name": "QgsColorSwatchGridAction",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorSwatchGridAction.html",
        "description": "A color swatch grid which can be embedded into a menu."
      },
      {
        "node_name": "QgsColorTextWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorTextWidget.html",
        "description": "A line edit widget which displays colors as text and accepts string representations of colors."
      },
      {
        "node_name": "QgsColorWheel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorWheel.html",
        "description": "A color wheel widget. This widget consists of an outer ring which allows for hue selection, and an inner rotating triangle which allows for saturation and value selection."
      },
      {
        "node_name": "QgsColorWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorWidget.html",
        "description": "A base class for interactive color widgets. Widgets can either allow setting a single component of a color (e.g., the red or green components), or an entire color. TheQgsColorWidgetalso keeps track of any explicitly set hue for the color, so that this information is not lost when the widget is set to a color with an ambiguous hue (e.g., black or white shades)."
      },
      {
        "node_name": "QgsColorWidgetAction",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorWidgetAction.html",
        "description": "An action containing a color widget, which can be embedded into a menu."
      },
      {
        "node_name": "QgsCompoundColorWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCompoundColorWidget.html",
        "description": "A custom QGIS widget for selecting a color, including options for selecting colors via hue wheel, color swatches, and a color sampler."
      },
      {
        "node_name": "QgsConfigureShortcutsDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsConfigureShortcutsDialog.html",
        "description": "Reusable dialog for allowing users to configure shortcuts contained in aQgsShortcutsManager."
      },
      {
        "node_name": "QgsCredentialDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCredentialDialog.html",
        "description": "A generic dialog for requesting credentials"
      },
      {
        "node_name": "QgsCurveEditorWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCurveEditorWidget.html",
        "description": "A widget for manipulatingQgsCurveTransformcurves."
      },
      {
        "node_name": "QgsCustomDropHandler",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCustomDropHandler.html",
        "description": "Abstract base class that may be implemented to handle new types of data to be dropped in QGIS."
      },
      {
        "node_name": "QgsCustomProjectOpenHandler",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCustomProjectOpenHandler.html",
        "description": "Abstract base class that may be implemented to handle new project file types within the QGIS application."
      },
      {
        "node_name": "QgsDataItemGuiContext",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDataItemGuiContext.html",
        "description": "Encapsulates the context in which aQgsDataItemis shown within the application GUI."
      },
      {
        "node_name": "QgsDataItemGuiProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDataItemGuiProvider.html",
        "description": "Abstract base class for providers which affect howQgsDataItemitems behave within the application GUI."
      },
      {
        "node_name": "QgsDataItemGuiProviderRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDataItemGuiProviderRegistry.html",
        "description": "This class keeps a list of data item GUI providers that may affect howQgsDataItemsbehave within the application GUI."
      },
      {
        "node_name": "QgsDataItemGuiProviderUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDataItemGuiProviderUtils.html",
        "description": "Utility functions forQgsDataItemGuiProviders."
      },
      {
        "node_name": "QgsDataSourceSelectDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDataSourceSelectDialog.html",
        "description": "TheQgsDataSourceSelectDialogclass embeds the browser view to select an existing data source."
      },
      {
        "node_name": "QgsDataSourceSelectWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDataSourceSelectWidget.html",
        "description": "TheQgsDataSourceSelectWidgetclass embeds the browser view to select an existing data source."
      },
      {
        "node_name": "QgsDatabaseSchemaComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDatabaseSchemaComboBox.html",
        "description": "TheQgsDatabaseSchemaComboBoxclass is a combo box which displays the list of schemas for a specific database connection."
      },
      {
        "node_name": "QgsDatabaseTableComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDatabaseTableComboBox.html",
        "description": "TheQgsDatabaseTableComboBoxclass is a combo box which displays the list of tables for a specific database connection."
      },
      {
        "node_name": "QgsDbRelationDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDbRelationDialog.html",
        "description": "A dialog for configuration of the properties of a relationship in a database."
      },
      {
        "node_name": "QgsDbRelationWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDbRelationWidget.html",
        "description": "A widget for configuration of the properties of a relationship in a database."
      },
      {
        "node_name": "QgsDetailedItemData",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDetailedItemData.html",
        "description": "This class is the data only representation of aQgsDetailedItemWidget, designed to be used in custom views."
      },
      {
        "node_name": "QgsDetailedItemDelegate",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDetailedItemDelegate.html",
        "description": "A custom model/view delegate that can display an icon, heading and detail sections."
      },
      {
        "node_name": "QgsDetailedItemWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDetailedItemWidget.html",
        "description": "A widget renderer for detailed item views."
      },
      {
        "node_name": "QgsDial",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDial.html",
        "description": "Constructor for QgsDial"
      },
      {
        "node_name": "QgsDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDialog.html",
        "description": "A generic dialog with layout and button box"
      },
      {
        "node_name": "QgsDirectionalLightWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDirectionalLightWidget.html",
        "description": "Widget for direction light settings"
      },
      {
        "node_name": "QgsDockWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDockWidget.html",
        "description": "subclass with more fine-grained control over how the widget is closed or opened."
      },
      {
        "node_name": "QgsDoubleValidator",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDoubleValidator.html",
        "description": "is a QLineEdit Validator that combines QDoubleValidator and QRegularExpressionValidator to allow users to enter doubles with both local and C interpretation as a fallback."
      },
      {
        "node_name": "QgsEncodingFileDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsEncodingFileDialog.html",
        "description": "A file dialog which lets the user select the preferred encoding type for a data provider."
      },
      {
        "node_name": "QgsEncodingSelectionDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsEncodingSelectionDialog.html",
        "description": "A dialog which presents the user with a choice of file encodings."
      },
      {
        "node_name": "QgsErrorDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsErrorDialog.html",
        "description": "Constructor for QgsErrorDialog"
      },
      {
        "node_name": "QgsExpressionBuilderDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsExpressionBuilderDialog.html",
        "description": "A generic dialog for building expression strings"
      },
      {
        "node_name": "QgsExpressionBuilderWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsExpressionBuilderWidget.html",
        "description": "A reusable widget that can be used to build a expression string. SeeQgsExpressionBuilderDialogfor example of usage."
      },
      {
        "node_name": "QgsExpressionHighlighter",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsExpressionHighlighter.html",
        "description": ""
      },
      {
        "node_name": "QgsExpressionItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsExpressionItem.html",
        "description": "An expression item that can be used in theQgsExpressionBuilderWidgettree."
      },
      {
        "node_name": "QgsExpressionItemSearchProxy",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsExpressionItemSearchProxy.html",
        "description": "Search proxy used to filter theQgsExpressionBuilderWidgettree. The default search for a tree model only searches top level this will handle one level down"
      },
      {
        "node_name": "QgsExpressionLineEdit",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsExpressionLineEdit.html",
        "description": "TheQgsExpressionLineEditwidget includes a line edit for entering expressions together with a button to open the expression creation dialog."
      },
      {
        "node_name": "QgsExpressionPreviewWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsExpressionPreviewWidget.html",
        "description": "is a widget to preview an expression result. If the layer is set, one can browse across features to see the different outputs."
      },
      {
        "node_name": "QgsExpressionSelectionDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsExpressionSelectionDialog.html",
        "description": "This class offers a dialog to change feature selections. To do so, aQgsExpressionBuilderWidgetis shown in a dialog. It offers the possibilities to create a new selection, add to the current selection remove from the current selection or select within the current selection."
      },
      {
        "node_name": "QgsExpressionStoreDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsExpressionStoreDialog.html",
        "description": "A generic dialog for editing expression text, label and help text."
      },
      {
        "node_name": "QgsExpressionTreeView",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsExpressionTreeView.html",
        "description": "is a tree view to list all expressions functions, variables and fields that can be used in an expression."
      },
      {
        "node_name": "QgsExtentGroupBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsExtentGroupBox.html",
        "description": "Collapsible group box for configuration of extent, typically for a save operation."
      },
      {
        "node_name": "QgsExtentWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsExtentWidget.html",
        "description": "A widget for configuration of a map extent."
      },
      {
        "node_name": "QgsExternalResourceWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsExternalResourceWidget.html",
        "description": "Widget to display file path with a push button for an “open file” dialog It can also be used to display a picture or a web page."
      },
      {
        "node_name": "QgsExternalStorageFileWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsExternalStorageFileWidget.html",
        "description": "TheQgsExternalStorageFileWidgetclass creates a widget for selecting a file or a folder and stores it to a given external storage backend if defined"
      },
      {
        "node_name": "QgsFeatureListComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFeatureListComboBox.html",
        "description": "This offers a combobox with autocompleter that allows selecting features from a layer."
      },
      {
        "node_name": "QgsFeaturePickerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFeaturePickerWidget.html",
        "description": "This offers a combobox with autocompleter that allows selecting features from a layer."
      },
      {
        "node_name": "QgsFeatureSelectionDlg",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFeatureSelectionDlg.html",
        "description": "Constructor for QgsFeatureSelectionDlg"
      },
      {
        "node_name": "QgsFieldComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFieldComboBox.html",
        "description": "TheQgsFieldComboBoxis a combo box which displays the list of fields of a given layer. It might be combined with aQgsMapLayerComboBoxto automatically update fields according to a chosen layer. If expression must be used,QgsFieldExpressionWidgetshall be used instead."
      },
      {
        "node_name": "QgsFieldDomainDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFieldDomainDialog.html",
        "description": "A dialog for configuration of the properties of aQgsFieldDomain."
      },
      {
        "node_name": "QgsFieldDomainWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFieldDomainWidget.html",
        "description": "A widget for configuration of the properties of aQgsFieldDomain."
      },
      {
        "node_name": "QgsFieldExpressionWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFieldExpressionWidget.html",
        "description": "TheQgsFieldExpressionWidgetclass creates a widget to choose fields and edit expressions It contains a combo box to display the fields and expression and a button to open the expression dialog. The combo box is editable, allowing expressions to be edited inline. The validity of the expression is checked live on key press, invalid expressions are displayed in red. The expression will be added to the model (and the fieldChanged signals emitted) only when editing in the line edit is fi"
      },
      {
        "node_name": "QgsFieldMappingModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFieldMappingModel.html",
        "description": "TheQgsFieldMappingModelholds mapping information for mapping from one set ofQgsFieldsto another, for each set of “destination” fields an expression defines how to obtain the values of the “destination” fields. The model can be optionally set “editable” allowing to modify all the fields, by default only the mapping expression is editable."
      },
      {
        "node_name": "QgsFieldMappingWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFieldMappingWidget.html",
        "description": "TheQgsFieldMappingWidgetclass creates a mapping from one set ofQgsFieldsto another, for each set of “destination” fields an expression defines how to obtain the values of the “destination” fields."
      },
      {
        "node_name": "QgsFieldValidator",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFieldValidator.html",
        "description": ""
      },
      {
        "node_name": "QgsFieldValuesLineEdit",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFieldValuesLineEdit.html",
        "description": "A line edit with an autocompleter which takes unique values from a vector layer’s fields. The autocompleter is populated from the vector layer in the background to ensure responsive interaction with the widget."
      },
      {
        "node_name": "QgsFileDownloaderDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFileDownloaderDialog.html",
        "description": "is a QProgressDialog subclass which handles file downloads and user feedback."
      },
      {
        "node_name": "QgsFileWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFileWidget.html",
        "description": "TheQgsFileWidgetclass creates a widget for selecting a file or a folder."
      },
      {
        "node_name": "QgsFilterLineEdit",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFilterLineEdit.html",
        "description": "QLineEdit subclass with built in support for clearing the widget’s value and handling custom null value representations."
      },
      {
        "node_name": "QgsFindFilesByPatternDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFindFilesByPatternDialog.html",
        "description": "A dialog for finding files (recursively) by file pattern."
      },
      {
        "node_name": "QgsFindFilesByPatternWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFindFilesByPatternWidget.html",
        "description": "A reusable widget for finding files (recursively) by file pattern."
      },
      {
        "node_name": "QgsFloatingWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFloatingWidget.html",
        "description": "A QWidget subclass for creating widgets which float outside of the normal Qt layout system. Floating widgets use an “anchor widget” to determine how they are anchored within their parent widget."
      },
      {
        "node_name": "QgsFocusWatcher",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFocusWatcher.html",
        "description": "A event filter for watching for focus events on a parent object. Usually QObjects must subclass and override methods like focusOutEvent to handle focus events. Using this class as an event filter avoids the need to subclass objects and the focus events can be directly caught using the emitted signals."
      },
      {
        "node_name": "QgsFontButton",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFontButton.html",
        "description": "A button for customizingQgsTextFormatsettings."
      },
      {
        "node_name": "QgsGeometryRubberBand",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsGeometryRubberBand.html",
        "description": "A rubberband class forQgsAbstractGeometry(considering curved geometries)."
      },
      {
        "node_name": "QgsGeometryWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsGeometryWidget.html",
        "description": "A widget for storing and interacting with aQgsGeometryobject."
      },
      {
        "node_name": "QgsGradientColorRampDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsGradientColorRampDialog.html",
        "description": "A dialog which allows users to modify the properties of aQgsGradientColorRamp."
      },
      {
        "node_name": "QgsGradientStopEditor",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsGradientStopEditor.html",
        "description": "An interactive editor for previewing a gradient color ramp and modifying the position of color stops along the gradient."
      },
      {
        "node_name": "QgsGroupBoxCollapseButton",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsGroupBoxCollapseButton.html",
        "description": ""
      },
      {
        "node_name": "QgsGroupWmsDataDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsGroupWmsDataDialog.html",
        "description": ""
      },
      {
        "node_name": "QgsGui",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsGui.html",
        "description": "is a singleton class containing various registry and other global members related to GUI classes."
      },
      {
        "node_name": "QgsHelp",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsHelp.html",
        "description": "Helper class for showing help topic URI for the given key."
      },
      {
        "node_name": "QgsHighlight",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsHighlight.html",
        "description": "A class for highlight features on the map."
      },
      {
        "node_name": "QgsHighlightableLineEdit",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsHighlightableLineEdit.html",
        "description": "AQgsFilterLineEditsubclass with the ability to “highlight” the edges of the widget."
      },
      {
        "node_name": "QgsHistogramWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsHistogramWidget.html",
        "description": "Graphical histogram for displaying distributions of field values."
      },
      {
        "node_name": "QgsHttpHeaderWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsHttpHeaderWidget.html",
        "description": "Display referer http header field and collapsible table of key/value"
      },
      {
        "node_name": "QgsIdentifyMenu",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsIdentifyMenu.html",
        "description": "The QgsIdentifyMenu class builds a menu to be used with identify results (QgsMapToolIdentify). It is customizable and can display attribute actions (QgsAction) as well as map layer actions (QgsMapLayerAction). It can also embed custom map layer actions, defined for this menu exclusively. If used in aQgsMapToolIdentify, it is accessible viaQgsMapToolIdentify.identifyMenu()and can be customized in the map tool sub-class."
      },
      {
        "node_name": "QgsImageSourceLineEdit",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsImageSourceLineEdit.html",
        "description": "A line edit widget with toolbutton for setting a raster image path."
      },
      {
        "node_name": "QgsKeyValueWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsKeyValueWidget.html",
        "description": "Widget allowing to edit a QVariantMap, using a table."
      },
      {
        "node_name": "QgsLUDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLUDialog.html",
        "description": ""
      },
      {
        "node_name": "QgsLayerMetadataResultsModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayerMetadataResultsModel.html",
        "description": "TheQgsLayerMetadataResultsModelclass handles the metadata fetching from the registered layer metadata providers."
      },
      {
        "node_name": "QgsLayerMetadataResultsProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayerMetadataResultsProxyModel.html",
        "description": "TheQgsLayerMetadataResultsProxyModelclass is a proxy model forQgsLayerMetadataResultsModel, it handles text and extent filtering."
      },
      {
        "node_name": "QgsLayerMetadataSearchWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayerMetadataSearchWidget.html",
        "description": "TheQgsLayerMetadataSearchWidgetclass offers layer metadata search and filtering. It is designed to be embedded in the data source manager dialog."
      },
      {
        "node_name": "QgsLayerPropertiesDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayerPropertiesDialog.html",
        "description": "Base class for “layer properties” dialogs, containing common utilities for handling functionality in these dialog."
      },
      {
        "node_name": "QgsLegendFilterButton",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLegendFilterButton.html",
        "description": "A tool button that allows enabling or disabling legend filter by contents of the map. An additional pop down menu allows defining a boolean expression to refine the filtering."
      },
      {
        "node_name": "QgsLegendPatchShapeButton",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLegendPatchShapeButton.html",
        "description": "A button for creating and modifyingQgsLegendPatchShapesettings."
      },
      {
        "node_name": "QgsLegendPatchShapeDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLegendPatchShapeDialog.html",
        "description": "A dialog for configuring a custom legend patch shape."
      },
      {
        "node_name": "QgsLegendPatchShapeWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLegendPatchShapeWidget.html",
        "description": "Widget for configuring a custom legend patch shape."
      },
      {
        "node_name": "QgsLimitedRandomColorRampDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLimitedRandomColorRampDialog.html",
        "description": "A dialog which allows users to modify the properties of aQgsLimitedRandomColorRamp."
      },
      {
        "node_name": "QgsLimitedRandomColorRampWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLimitedRandomColorRampWidget.html",
        "description": "A widget which allows users to modify the properties of aQgsLimitedRandomColorRamp."
      },
      {
        "node_name": "QgsListWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsListWidget.html",
        "description": "Widget allowing to edit a QVariantList, using a table."
      },
      {
        "node_name": "QgsLongLongValidator",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLongLongValidator.html",
        "description": ""
      },
      {
        "node_name": "QgsManageConnectionsDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsManageConnectionsDialog.html",
        "description": "Constructor for QgsManageConnectionsDialog."
      },
      {
        "node_name": "QgsMapCanvas",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapCanvas.html",
        "description": "Map canvas is a class for displaying all GIS data types on a canvas."
      },
      {
        "node_name": "QgsMapCanvasAnnotationItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapCanvasAnnotationItem.html",
        "description": "An interactive map canvas item which displays aQgsAnnotation."
      },
      {
        "node_name": "QgsMapCanvasInteractionBlocker",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapCanvasInteractionBlocker.html",
        "description": "An interface for objects which block interactions with aQgsMapCanvas."
      },
      {
        "node_name": "QgsMapCanvasItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapCanvasItem.html",
        "description": "An abstract class for items that can be placed on the map canvas."
      },
      {
        "node_name": "QgsMapCanvasSnappingUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapCanvasSnappingUtils.html",
        "description": "Snapping utils instance that is connected to a canvas and updates the configuration (map settings + current layer) whenever that is changed in the canvas."
      },
      {
        "node_name": "QgsMapCanvasTracer",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapCanvasTracer.html",
        "description": "Extension ofQgsTracerthat provides extra functionality:"
      },
      {
        "node_name": "QgsMapCanvasUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapCanvasUtils.html",
        "description": "Utility functions for working withQgsMapCanvaswidgets."
      },
      {
        "node_name": "QgsMapLayerComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapLayerComboBox.html",
        "description": "A combobox which displays a dynamic list of layers from a QGIS project."
      },
      {
        "node_name": "QgsMapLayerConfigWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapLayerConfigWidget.html",
        "description": "A panel widget that can be shown in the map style dock"
      },
      {
        "node_name": "QgsMapLayerConfigWidgetContext",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapLayerConfigWidgetContext.html",
        "description": "Encapsulates the context for aQgsMapLayerConfigWidget."
      },
      {
        "node_name": "QgsMapLayerConfigWidgetFactory",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapLayerConfigWidgetFactory.html",
        "description": "Factory class for creating custom map layer property pages"
      },
      {
        "node_name": "QgsMapLayerStyleCategoriesModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapLayerStyleCategoriesModel.html",
        "description": "Model for layer style categories"
      },
      {
        "node_name": "QgsMapLayerStyleManagerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapLayerStyleManagerWidget.html",
        "description": "TheQgsMapLayerStyleManagerWidgetclass which is used to visually manage the layer styles."
      },
      {
        "node_name": "QgsMapMouseEvent",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapMouseEvent.html",
        "description": "AQgsMapMouseEventis the result of a user interaction with the mouse on aQgsMapCanvas. It is sent whenever the user moves, clicks, releases or double clicks the mouse. In addition to the coordinates in pixel space it also knows the coordinates in the mapcanvas’ CRS as well as it knows the concept of snapping."
      },
      {
        "node_name": "QgsMapOverviewCanvas",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapOverviewCanvas.html",
        "description": "A widget that displays an overview map."
      },
      {
        "node_name": "QgsMapTip",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapTip.html",
        "description": "A maptip is a class to display a tip on a map canvas when a mouse is hovered over a feature."
      },
      {
        "node_name": "QgsMapUnitScaleDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapUnitScaleDialog.html",
        "description": "A dialog which allows the user to choose the minimum and maximum scale of an object in map units and millimeters. This dialog is designed to allow users to edit the properties of aQgsMapUnitScaleobject."
      },
      {
        "node_name": "QgsMapUnitScaleWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapUnitScaleWidget.html",
        "description": "A widget which allows the user to choose the minimum and maximum scale of an object in map units and millimeters. This widget is designed to allow users to edit the properties of aQgsMapUnitScaleobject."
      },
      {
        "node_name": "QgsMediaWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMediaWidget.html",
        "description": "TheQgsMediaWidgetclass creates a widget for playing back audio and video media files."
      },
      {
        "node_name": "QgsMenuHeader",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMenuHeader.html",
        "description": "Custom widget for displaying subheaders within a QMenu in a standard style."
      },
      {
        "node_name": "QgsMenuHeaderWidgetAction",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMenuHeaderWidgetAction.html",
        "description": "Custom QWidgetAction for displaying subheaders within a QMenu in a standard style."
      },
      {
        "node_name": "QgsMessageBar",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMessageBar.html",
        "description": "A bar for displaying non-blocking messages to the user."
      },
      {
        "node_name": "QgsMessageBarItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMessageBarItem.html",
        "description": "Represents an item shown within aQgsMessageBarwidget."
      },
      {
        "node_name": "QgsMessageLogViewer",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMessageLogViewer.html",
        "description": "A generic dialog widget for displaying QGIS log messages."
      },
      {
        "node_name": "QgsMessageViewer",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMessageViewer.html",
        "description": "A generic message view for displaying QGIS messages."
      },
      {
        "node_name": "QgsMetadataWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMetadataWidget.html",
        "description": "A wizard to edit metadata on a map layer."
      },
      {
        "node_name": "QgsNewAuxiliaryFieldDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsNewAuxiliaryFieldDialog.html",
        "description": "A dialog to create a new auxiliary field"
      },
      {
        "node_name": "QgsNewAuxiliaryLayerDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsNewAuxiliaryLayerDialog.html",
        "description": "A dialog to create a new auxiliary layer"
      },
      {
        "node_name": "QgsNewDatabaseTableNameDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsNewDatabaseTableNameDialog.html",
        "description": "is a dialog which allows selection of a DB schema and a new table name."
      },
      {
        "node_name": "QgsNewDatabaseTableNameWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsNewDatabaseTableNameWidget.html",
        "description": "TheQgsNewDatabaseTableNameWidgetclass embeds the browser view to select a DB schema and a new table name."
      },
      {
        "node_name": "QgsNewGeoPackageLayerDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsNewGeoPackageLayerDialog.html",
        "description": "Dialog to set up parameters to create a new GeoPackage layer, and onaccept()to create it and add it to the layers"
      },
      {
        "node_name": "QgsNewHttpConnection",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsNewHttpConnection.html",
        "description": "Dialog to allow the user to configure and save connection information for an HTTP Server for WMS, etc."
      },
      {
        "node_name": "QgsNewMemoryLayerDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsNewMemoryLayerDialog.html",
        "description": "New dialog constructor."
      },
      {
        "node_name": "QgsNewNameDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsNewNameDialog.html",
        "description": "New name, for example new layer name dialog. If existing names are provided, the dialog warns users if an entered name already exists."
      },
      {
        "node_name": "QgsNewVectorLayerDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsNewVectorLayerDialog.html",
        "description": "New dialog constructor."
      },
      {
        "node_name": "QgsNewVectorTableDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsNewVectorTableDialog.html",
        "description": "TheQgsNewVectorTableDialogclass is a provider-agnostic database vector and aspatial table designer dialog based on the connections API."
      },
      {
        "node_name": "QgsOWSSourceSelect",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsOWSSourceSelect.html",
        "description": "Dialog to create connections and add layers WCS etc."
      },
      {
        "node_name": "QgsOpacityWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsOpacityWidget.html",
        "description": "A widget for setting an opacity value."
      },
      {
        "node_name": "QgsOptionsDialogBase",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsOptionsDialogBase.html",
        "description": "A base dialog for options and properties dialogs that offers vertical tabs. It handles saving/restoring of geometry, splitter and current tab states, switching vertical tabs between icon/text to icon-only modes (splitter collapsed to left), and connecting QDialogButtonBox’s accepted/rejected signals to dialog’s accept/reject slots"
      },
      {
        "node_name": "QgsOptionsDialogHighlightButton",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsOptionsDialogHighlightButton.html",
        "description": "A highlight widget for buttons. This is used to search and highlight text inQgsOptionsDialogBaseimplementations."
      },
      {
        "node_name": "QgsOptionsDialogHighlightCheckBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsOptionsDialogHighlightCheckBox.html",
        "description": "A highlight widget for checkboxes. This is used to search and highlight text inQgsOptionsDialogBaseimplementations."
      },
      {
        "node_name": "QgsOptionsDialogHighlightGroupBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsOptionsDialogHighlightGroupBox.html",
        "description": "A highlight widget for group boxes. This is used to search and highlight text inQgsOptionsDialogBaseimplementations."
      },
      {
        "node_name": "QgsOptionsDialogHighlightLabel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsOptionsDialogHighlightLabel.html",
        "description": "A highlight widget for labels. This is used to search and highlight text inQgsOptionsDialogBaseimplementations."
      },
      {
        "node_name": "QgsOptionsDialogHighlightTable",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsOptionsDialogHighlightTable.html",
        "description": "A highlight widget for table widgets. This is used to search and highlight text inQgsOptionsDialogBaseimplementations."
      },
      {
        "node_name": "QgsOptionsDialogHighlightTree",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsOptionsDialogHighlightTree.html",
        "description": "A highlight widget for trees. This is used to search and highlight text inQgsOptionsDialogBaseimplementations. Highlighting is only available for tree widgets only while searching can be performed in any tree view or inherited class."
      },
      {
        "node_name": "QgsOptionsDialogHighlightWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsOptionsDialogHighlightWidget.html",
        "description": "Container for a widget to be used to search text in the option dialog If the widget type is handled, it is valid. It can perform a text search in the widget and highlight it in case of success. This uses stylesheets."
      },
      {
        "node_name": "QgsOptionsPageWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsOptionsPageWidget.html",
        "description": "Base class for widgets for pages included in the options dialog."
      },
      {
        "node_name": "QgsOptionsWidgetFactory",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsOptionsWidgetFactory.html",
        "description": ""
      },
      {
        "node_name": "QgsOrderByDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsOrderByDialog.html",
        "description": "This is a dialog to build and manage a list of order by clauses."
      },
      {
        "node_name": "QgsOverlayWidgetLayout",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsOverlayWidgetLayout.html",
        "description": "A custom layout which can be used to overlay child widgets over a parent widget."
      },
      {
        "node_name": "QgsPanelWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPanelWidget.html",
        "description": "Base class for any widget that can be shown as a inline panel"
      },
      {
        "node_name": "QgsPanelWidgetStack",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPanelWidgetStack.html",
        "description": "A stack widget to manage panels in the interface. Handles the open and close events for added panels. Any widgets that want to have a non blocking panel based interface should use this class to manage the panels."
      },
      {
        "node_name": "QgsPanelWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPanelWidgetWrapper.html",
        "description": "Wrapper widget for existing widgets which can’t have the inheritance tree changed, e.g dialogs."
      },
      {
        "node_name": "QgsPasswordLineEdit",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPasswordLineEdit.html",
        "description": "QLineEdit subclass with built in support for showing/hiding entered password."
      },
      {
        "node_name": "QgsPercentageWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPercentageWidget.html",
        "description": "A widget for setting a percentage value."
      },
      {
        "node_name": "QgsPictureSourceLineEditBase",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPictureSourceLineEditBase.html",
        "description": "A line edit widget with toolbutton for setting a raster image path."
      },
      {
        "node_name": "QgsPixmapLabel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPixmapLabel.html",
        "description": "TheQgsPixmapLabelclass shows a pixmap and adjusts its size to the space given to the widget by the layout and keeping its aspect ratio."
      },
      {
        "node_name": "QgsPlaybackControllerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPlaybackControllerWidget.html",
        "description": "A compound widget containing a set of buttons for controlling media playback."
      },
      {
        "node_name": "QgsPluginManagerInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPluginManagerInterface.html",
        "description": ""
      },
      {
        "node_name": "QgsPointCloudAttributeComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPointCloudAttributeComboBox.html",
        "description": "TheQgsPointCloudAttributeComboBoxis a combo box which displays the list of attributes of a given point cloud layer. It might be combined with aQgsMapLayerComboBoxto automatically update attributes according to a chosen layer."
      },
      {
        "node_name": "QgsPointCloudQueryBuilder",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPointCloudQueryBuilder.html",
        "description": "Query Builder for layers."
      },
      {
        "node_name": "QgsPresetColorRampDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPresetColorRampDialog.html",
        "description": "A dialog which allows users to modify the properties of aQgsPresetSchemeColorRamp."
      },
      {
        "node_name": "QgsPresetColorRampWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPresetColorRampWidget.html",
        "description": "A widget which allows users to modify the properties of aQgsPresetSchemeColorRamp."
      },
      {
        "node_name": "QgsPreviewEffect",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPreviewEffect.html",
        "description": "A graphics effect which can be applied to a widget to simulate various printing and color blindness modes."
      },
      {
        "node_name": "QgsProjectStorageGuiProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProjectStorageGuiProvider.html",
        "description": "Abstract interface for project storage GUI - to be implemented by various backends and registered inQgsProjectStorageGuiRegistry."
      },
      {
        "node_name": "QgsProjectStorageGuiRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProjectStorageGuiRegistry.html",
        "description": "A registry / canonical manager of GUI parts of project storage backends."
      },
      {
        "node_name": "QgsPropertyAssistantWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPropertyAssistantWidget.html",
        "description": "Shows a user-friendly assistant guiding users through the creation ofQgsPropertyoverrides."
      },
      {
        "node_name": "QgsPropertyOverrideButton",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPropertyOverrideButton.html",
        "description": "A button for controlling property overrides which may apply to a widget."
      },
      {
        "node_name": "QgsProviderConnectionComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProviderConnectionComboBox.html",
        "description": "TheQgsProviderConnectionComboBoxclass is a combo box which displays the list of connections registered for a given provider."
      },
      {
        "node_name": "QgsProviderGuiMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProviderGuiMetadata.html",
        "description": "Holds data for GUI part of the data providers"
      },
      {
        "node_name": "QgsProviderGuiRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProviderGuiRegistry.html",
        "description": "A registry / canonical manager of GUI parts of data providers."
      },
      {
        "node_name": "QgsProviderSourceWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProviderSourceWidget.html",
        "description": "Base class for widgets which allow customization of a provider’s source URI."
      },
      {
        "node_name": "QgsProviderSourceWidgetProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProviderSourceWidgetProvider.html",
        "description": "An interface for providers of widgets designed to configure a data provider’s source."
      },
      {
        "node_name": "QgsProviderSourceWidgetProviderRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProviderSourceWidgetProviderRegistry.html",
        "description": "This class keeps a list of provider source widget providers."
      },
      {
        "node_name": "QgsProviderSublayersDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProviderSublayersDialog.html",
        "description": "Dialog for selecting provider sublayers."
      },
      {
        "node_name": "QgsProxyStyle",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProxyStyle.html",
        "description": "A QProxyStyle subclass which correctly sets the base style to match the QGIS application style, and handles object lifetime by correctly parenting to a parent widget."
      },
      {
        "node_name": "QgsQueryBuilder",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsQueryBuilder.html",
        "description": "Query Builder for layers."
      },
      {
        "node_name": "QgsQueryResultWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsQueryResultWidget.html",
        "description": "TheQgsQueryResultWidgetclass allows users to enter and run an SQL query on a DB connection (an instance ofQgsAbstractDatabaseProviderConnection)."
      },
      {
        "node_name": "QgsRangeSlider",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRangeSlider.html",
        "description": "A slider control with two interactive endpoints, for interactive selection of a range of values."
      },
      {
        "node_name": "QgsRasterFormatSaveOptionsWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRasterFormatSaveOptionsWidget.html",
        "description": "A widget to select format-specific raster saving options"
      },
      {
        "node_name": "QgsRasterLayerSaveAsDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRasterLayerSaveAsDialog.html",
        "description": "Constructor for QgsRasterLayerSaveAsDialog"
      },
      {
        "node_name": "QgsRasterPyramidsOptionsWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRasterPyramidsOptionsWidget.html",
        "description": "A widget to select format-specific raster saving options"
      },
      {
        "node_name": "QgsRatioLockButton",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRatioLockButton.html",
        "description": "A cross platform button subclass used to represent a locked / unlocked ratio state."
      },
      {
        "node_name": "QgsRelationEditorConfigWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRelationEditorConfigWidget.html",
        "description": "Creates a new configuration widget for the relation editor widget"
      },
      {
        "node_name": "QgsRelationEditorWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRelationEditorWidget.html",
        "description": "The default relation widget in QGIS."
      },
      {
        "node_name": "QgsRelationWidgetRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRelationWidgetRegistry.html",
        "description": "Keeps track of the registered relations widgets. New widgets can be registered, old ones deleted. The default {QgsRelationEditorWidget} is protected from removing."
      },
      {
        "node_name": "QgsRichTextEditor",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRichTextEditor.html",
        "description": "A widget for editing rich text documents, with support for user controlled formatting of text and insertion of hyperlinks and images."
      },
      {
        "node_name": "QgsRubberBand",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRubberBand.html",
        "description": "A class for drawing transient features (e.g. digitizing lines) on the map."
      },
      {
        "node_name": "QgsScaleComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsScaleComboBox.html",
        "description": "A combobox which lets the user select map scale from predefined list and highlights nearest to current scale value"
      },
      {
        "node_name": "QgsScaleRangeWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsScaleRangeWidget.html",
        "description": "A widget allowing entry of a range of map scales, e.g. minimum scale and maximum scale."
      },
      {
        "node_name": "QgsScaleVisibilityDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsScaleVisibilityDialog.html",
        "description": "A dialog allowing users to enter a scale visibility range."
      },
      {
        "node_name": "QgsScaleWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsScaleWidget.html",
        "description": "A combobox which lets the user select map scale from predefined list and highlights nearest to current scale value"
      },
      {
        "node_name": "QgsScreenHelper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsScreenHelper.html",
        "description": "A utility class for dynamic handling of changes to screen properties."
      },
      {
        "node_name": "QgsScrollArea",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsScrollArea.html",
        "description": "A QScrollArea subclass with improved scrolling behavior."
      },
      {
        "node_name": "QgsScrollBarHighlight",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsScrollBarHighlight.html",
        "description": "Encapsulates the details of a highlight in a scrollbar, used alongsideQgsScrollBarHighlightController."
      },
      {
        "node_name": "QgsScrollBarHighlightController",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsScrollBarHighlightController.html",
        "description": "Adds highlights (colored markers) to a scrollbar."
      },
      {
        "node_name": "QgsSearchQueryBuilder",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSearchQueryBuilder.html",
        "description": "Query Builder for search strings"
      },
      {
        "node_name": "QgsShortcutsManager",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsShortcutsManager.html",
        "description": "Shortcuts manager is a class that contains a list of QActions and QShortcuts that have been registered and their shortcuts can be changed."
      },
      {
        "node_name": "QgsSlider",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSlider.html",
        "description": "Constructor for QgsSlider"
      },
      {
        "node_name": "QgsSnapIndicator",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSnapIndicator.html",
        "description": "Class that shows snapping marker on map canvas for the current snapping match."
      },
      {
        "node_name": "QgsSnapToGridCanvasItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSnapToGridCanvasItem.html",
        "description": "Shows a grid on the map canvas given a spatial resolution."
      },
      {
        "node_name": "QgsSourceSelectProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSourceSelectProvider.html",
        "description": "This is the interface for those who want to add entries to theQgsDataSourceManagerDialog"
      },
      {
        "node_name": "QgsSourceSelectProviderRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSourceSelectProviderRegistry.html",
        "description": "This class keeps a list of source select providers that may add items to theQgsDataSourceManagerDialogWhen created, it automatically adds providers from data provider plugins (e.g. PostGIS, WMS, …)"
      },
      {
        "node_name": "QgsStatusBar",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsStatusBar.html",
        "description": "A proxy widget for QStatusBar."
      },
      {
        "node_name": "QgsStyleItemsListWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsStyleItemsListWidget.html",
        "description": "A reusable widget for showing a filtered list of entities from aQgsStyledatabase."
      },
      {
        "node_name": "QgsSublayersDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSublayersDialog.html",
        "description": "Deprecated since version 3.40."
      },
      {
        "node_name": "QgsSubsetStringEditorInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSubsetStringEditorInterface.html",
        "description": "Interface for a dialog that can edit subset strings"
      },
      {
        "node_name": "QgsSubsetStringEditorProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSubsetStringEditorProvider.html",
        "description": "This is the interface for those who want to provide a dialog to edit a subset string."
      },
      {
        "node_name": "QgsSubsetStringEditorProviderRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSubsetStringEditorProviderRegistry.html",
        "description": "This class keeps a list of subset string editor providers."
      },
      {
        "node_name": "QgsSubstitutionListDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSubstitutionListDialog.html",
        "description": "A dialog which allows users to specify a list of substitutions to apply to a string, with options for exporting and importing substitution lists."
      },
      {
        "node_name": "QgsSubstitutionListWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSubstitutionListWidget.html",
        "description": "A widget which allows users to specify a list of substitutions to apply to a string, with options for exporting and importing substitution lists."
      },
      {
        "node_name": "QgsSvgSourceLineEdit",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSvgSourceLineEdit.html",
        "description": "A line edit widget with toolbutton for setting an SVG image path."
      },
      {
        "node_name": "QgsSymbolButton",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSymbolButton.html",
        "description": "A button for creating and modifyingQgsSymbolsettings."
      },
      {
        "node_name": "QgsTabWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTabWidget.html",
        "description": "TheQgsTabWidgetclass is the same as the QTabWidget but with additional methods to temporarily hide/show tabs."
      },
      {
        "node_name": "QgsTableView",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTableView.html",
        "description": "A QTableView subclass with QGIS specific tweaks and improvements."
      },
      {
        "node_name": "QgsTableWidgetBase",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTableWidgetBase.html",
        "description": "Base widget allowing to edit a collection, using a table."
      },
      {
        "node_name": "QgsTableWidgetItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTableWidgetItem.html",
        "description": "This can be used like a regular QTableWidgetItem with the difference that a specific role can be set to sort."
      },
      {
        "node_name": "QgsTaskManagerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTaskManagerWidget.html",
        "description": "A widget which displays tasks from aQgsTaskManagerand allows for interaction with the manager."
      },
      {
        "node_name": "QgsTemporalControllerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTemporalControllerWidget.html",
        "description": "A widget for controlling playback properties of aQgsTemporalController."
      },
      {
        "node_name": "QgsTextFormatDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTextFormatDialog.html",
        "description": "A simple dialog for customizing text formatting settings."
      },
      {
        "node_name": "QgsTextFormatPanelWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTextFormatPanelWidget.html",
        "description": "A panel widget for customizing text formatting settings."
      },
      {
        "node_name": "QgsTextFormatWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTextFormatWidget.html",
        "description": "A widget for customizing text formatting settings."
      },
      {
        "node_name": "QgsTextPreview",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTextPreview.html",
        "description": "A widget for previewing text formatting settings."
      },
      {
        "node_name": "QgsToolTipComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsToolTipComboBox.html",
        "description": "QComboBox subclass which features a tooltip when mouse hovering the combobox. The tooltip string is taken from the current item’s Qt.ToolTipRole data."
      },
      {
        "node_name": "QgsTreeWidgetItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTreeWidgetItem.html",
        "description": "QTreeWidgetItem subclass with custom handling for item sorting."
      },
      {
        "node_name": "QgsTreeWidgetItemObject",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTreeWidgetItemObject.html",
        "description": "CustomQgsTreeWidgetItemwith extra signals when item is edited."
      },
      {
        "node_name": "QgsUnitSelectionWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsUnitSelectionWidget.html",
        "description": "A widget displaying a combobox allowing the user to choose between various display units, such as millimeters or map units."
      },
      {
        "node_name": "QgsUserInputWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsUserInputWidget.html",
        "description": "TheQgsUserInputWidgetclass is a floating widget that shall be used to display widgets for user inputs. It can be used by map tools, plugins, etc. Several widgets can be displayed at once, they will be separated by a separator. Widgets will be either layout horizontally or vertically. The widget is automatically hidden if it contains no widget."
      },
      {
        "node_name": "QgsVScrollArea",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsVScrollArea.html",
        "description": "is a QScrollArea subclass which only displays a vertical scrollbar and fits the width to the contents."
      },
      {
        "node_name": "QgsValidityCheckResultsModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsValidityCheckResultsModel.html",
        "description": "A QAbstractItemModel subclass for displaying the results from aQgsAbstractValidityCheck."
      },
      {
        "node_name": "QgsValidityCheckResultsWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsValidityCheckResultsWidget.html",
        "description": "A reusable widget which displays a summary of the results from aQgsAbstractValidityCheck(or checks)."
      },
      {
        "node_name": "QgsVariableEditorWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsVariableEditorWidget.html",
        "description": "A tree based widget for editing expression context scope variables. The widget allows editing variables from aQgsExpressionContextScope, and can optionally also show inherited variables from aQgsExpressionContext."
      },
      {
        "node_name": "QgsVectorLayerTemporalPropertiesWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsVectorLayerTemporalPropertiesWidget.html",
        "description": "A widget for configuring the temporal properties for a vector layer."
      },
      {
        "node_name": "QgsVertexMarker",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsVertexMarker.html",
        "description": "A class for marking vertices of features using e.g. circles or ‘x’."
      },
      {
        "node_name": "QgsWindowManagerInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsWindowManagerInterface.html",
        "description": "Interface for window manager."
      },
      {
        "node_name": "QgsAnnotationItemAbstractGuiMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAnnotationItemAbstractGuiMetadata.html",
        "description": "Stores GUI metadata about one annotation item class."
      },
      {
        "node_name": "QgsAnnotationItemBaseWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAnnotationItemBaseWidget.html",
        "description": "A base class for property widgets for annotation items."
      },
      {
        "node_name": "QgsAnnotationItemCommonPropertiesWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAnnotationItemCommonPropertiesWidget.html",
        "description": "A widget for configuring common properties forQgsAnnotationItems"
      },
      {
        "node_name": "QgsAnnotationItemGuiGroup",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAnnotationItemGuiGroup.html",
        "description": "Stores GUI metadata about a group of annotation item classes."
      },
      {
        "node_name": "QgsAnnotationItemGuiRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAnnotationItemGuiRegistry.html",
        "description": "Registry of available annotation item GUI behavior."
      },
      {
        "node_name": "QgsCreateAnnotationItemMapToolHandler",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCreateAnnotationItemMapToolHandler.html",
        "description": "A handler object for map tools which create annotation items."
      },
      {
        "node_name": "QgsCreateAnnotationItemMapToolInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCreateAnnotationItemMapToolInterface.html",
        "description": "An interface for map tools which create annotation items."
      },
      {
        "node_name": "QgsFormAnnotation",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFormAnnotation.html",
        "description": "An annotation item that embeds a designer form showing the feature"
      },
      {
        "node_name": "QgsActionWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsActionWidgetWrapper.html",
        "description": "Wraps a button widget to launch a layer action."
      },
      {
        "node_name": "QgsCheckboxSearchWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCheckboxSearchWidgetWrapper.html",
        "description": "Wraps a checkbox edit widget for searching."
      },
      {
        "node_name": "QgsDateEdit",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDateEdit.html",
        "description": "TheQgsDateEditclass is a QDateEdit widget with the capability of setting/reading null dates."
      },
      {
        "node_name": "QgsDateTimeEdit",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDateTimeEdit.html",
        "description": "TheQgsDateTimeEditclass is a QDateTimeEdit with the capability of setting/reading null date/times."
      },
      {
        "node_name": "QgsDateTimeSearchWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDateTimeSearchWidgetWrapper.html",
        "description": "Wraps a date/time edit widget for searching."
      },
      {
        "node_name": "QgsDefaultSearchWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDefaultSearchWidgetWrapper.html",
        "description": "Wraps a search widget. Default form is just aQgsLineFilterEdit"
      },
      {
        "node_name": "QgsDoubleSpinBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDoubleSpinBox.html",
        "description": "TheQgsSpinBoxis a spin box with a clear button that will set the value to the defined clear value. The clear value can be either the minimum or the maiximum value of the spin box or a custom value. This value can then be handled by a special value text."
      },
      {
        "node_name": "QgsHtmlWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsHtmlWidgetWrapper.html",
        "description": "Wraps a QQuickWidget to display HTML code"
      },
      {
        "node_name": "QgsJsonEditWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsJsonEditWidget.html",
        "description": "TheQgsJsonEditWidgetis a widget to display JSON data in a code highlighted text or tree form."
      },
      {
        "node_name": "QgsMultiEditToolButton",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMultiEditToolButton.html",
        "description": "A tool button widget which is displayed next to editor widgets in attribute forms, and allows for controlling how the widget behaves and interacts with the form while in multi edit mode."
      },
      {
        "node_name": "QgsQmlWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsQmlWidgetWrapper.html",
        "description": "Wraps a QQuickWidget to display QML code"
      },
      {
        "node_name": "QgsRelationAggregateSearchWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRelationAggregateSearchWidgetWrapper.html",
        "description": "Search widget for the children of a relation. For each attribute of the child, an additionalQgsAggregateToolButtonwill be shown to determine how the values should be aggregated for searching."
      },
      {
        "node_name": "QgsRelationReferenceSearchWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRelationReferenceSearchWidgetWrapper.html",
        "description": "Wraps a relation reference search widget."
      },
      {
        "node_name": "QgsRelationReferenceWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRelationReferenceWidget.html",
        "description": ""
      },
      {
        "node_name": "QgsRelationReferenceWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRelationReferenceWidgetWrapper.html",
        "description": "Wraps a relation reference widget."
      },
      {
        "node_name": "QgsRelationWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRelationWidgetWrapper.html",
        "description": "Constructor for QgsRelationWidgetWrapper"
      },
      {
        "node_name": "QgsSearchWidgetToolButton",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSearchWidgetToolButton.html",
        "description": "A tool button widget which is displayed next to search widgets in forms, and allows for controlling how the widget behaves and how the filtering/searching operates."
      },
      {
        "node_name": "QgsSpacerWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSpacerWidgetWrapper.html",
        "description": "Wraps a spacer widget."
      },
      {
        "node_name": "QgsSpinBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSpinBox.html",
        "description": "TheQgsSpinBoxis a spin box with a clear button that will set the value to the defined clear value. The clear value can be either the minimum or the maiximum value of the spin box or a custom value. This value can then be handled by a special value text."
      },
      {
        "node_name": "QgsTextWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTextWidgetWrapper.html",
        "description": "Wraps a label widget to display text"
      },
      {
        "node_name": "QgsTimeEdit",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTimeEdit.html",
        "description": "TheQgsTimeEditclass is a QTimeEdit widget with the capability of setting/reading null date/times."
      },
      {
        "node_name": "QgsValueMapSearchWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsValueMapSearchWidgetWrapper.html",
        "description": "Wraps a value map search widget. This widget will offer a combobox with values from another layer referenced by a foreign key (a constraint may be set but is not required on data level). It will be used as a search widget and produces expression to look for in the layer."
      },
      {
        "node_name": "QgsValueRelationSearchWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsValueRelationSearchWidgetWrapper.html",
        "description": "Wraps a value relation search widget. This widget will offer a combobox with values from another layer referenced by a foreign key (a constraint may be set but is not required on data level). It will be used as a search widget and produces expression to look for in the layer."
      },
      {
        "node_name": "QgsEditorConfigWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsEditorConfigWidget.html",
        "description": "This class should be subclassed for every configurable editor widget type."
      },
      {
        "node_name": "QgsEditorWidgetAutoConfPlugin",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsEditorWidgetAutoConfPlugin.html",
        "description": "Base class for plugins allowing to pick automatically a widget type for editing fields."
      },
      {
        "node_name": "QgsEditorWidgetFactory",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsEditorWidgetFactory.html",
        "description": "Every attribute editor widget needs a factory, which inherits this class"
      },
      {
        "node_name": "QgsEditorWidgetRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsEditorWidgetRegistry.html",
        "description": "This class manages all known edit widget factories."
      },
      {
        "node_name": "QgsEditorWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsEditorWidgetWrapper.html",
        "description": "Manages an editor widget Widget and wrapper share the same parent"
      },
      {
        "node_name": "QgsSearchWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSearchWidgetWrapper.html",
        "description": "Shows a search widget on a filter form."
      },
      {
        "node_name": "QgsWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsWidgetWrapper.html",
        "description": "Manages an editor widget Widget and wrapper share the same parent"
      },
      {
        "node_name": "QgsAttributeTableAction",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAttributeTableAction.html",
        "description": "Create a new attribute table action."
      },
      {
        "node_name": "QgsAttributeTableDelegate",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAttributeTableDelegate.html",
        "description": "A delegate item class forQgsAttributeTable(see Qt documentation for QItemDelegate)."
      },
      {
        "node_name": "QgsAttributeTableFilterModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAttributeTableFilterModel.html",
        "description": "Make sure, the master model is already loaded, so the selection will get synchronized."
      },
      {
        "node_name": "QgsAttributeTableMapLayerAction",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAttributeTableMapLayerAction.html",
        "description": ""
      },
      {
        "node_name": "QgsAttributeTableModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAttributeTableModel.html",
        "description": "A model backed by aQgsVectorLayerCachewhich is able to provide feature/attribute information to a QAbstractItemView."
      },
      {
        "node_name": "QgsAttributeTableView",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAttributeTableView.html",
        "description": "Provides a table view of features of aQgsVectorLayer."
      },
      {
        "node_name": "QgsDualView",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDualView.html",
        "description": "This widget is used to show the attributes of a set of features of aQgsVectorLayer. The attributes can be edited. It supports two different layouts: the table layout, in which the attributes for the features are shown in a table and the editor layout, where the features are shown as a selectable list and the attributes for the currently selected feature are shown in a form."
      },
      {
        "node_name": "QgsEditConditionalFormatRuleWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsEditConditionalFormatRuleWidget.html",
        "description": "A widget for customizing an individual conditional formatting rule."
      },
      {
        "node_name": "QgsFeatureListModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFeatureListModel.html",
        "description": "Constructor for QgsFeatureListModel"
      },
      {
        "node_name": "QgsFeatureListView",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFeatureListView.html",
        "description": "Shows a list of features and renders a edit button next to each feature."
      },
      {
        "node_name": "QgsFeatureListViewDelegate",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFeatureListViewDelegate.html",
        "description": ""
      },
      {
        "node_name": "QgsFeatureModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFeatureModel.html",
        "description": ""
      },
      {
        "node_name": "QgsFeatureSelectionModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFeatureSelectionModel.html",
        "description": ""
      },
      {
        "node_name": "QgsFieldConditionalFormatWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFieldConditionalFormatWidget.html",
        "description": "A widget for customizing conditional formatting options."
      },
      {
        "node_name": "QgsIFeatureSelectionManager",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsIFeatureSelectionManager.html",
        "description": "Is an interface class to abstract feature selection handling."
      },
      {
        "node_name": "QgsOrganizeTableColumnsDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsOrganizeTableColumnsDialog.html",
        "description": "Dialog for organising (hiding and reordering) columns in the attributes table."
      },
      {
        "node_name": "QgsAuthAuthoritiesEditor",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthAuthoritiesEditor.html",
        "description": "Widget for viewing and editing authentication identities database"
      },
      {
        "node_name": "QgsAuthCertEditors",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthCertEditors.html",
        "description": "Wrapper widget to manage available certificate editors"
      },
      {
        "node_name": "QgsAuthCertInfo",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthCertInfo.html",
        "description": "Widget for viewing detailed info on a certificate and its hierarchical trust chain"
      },
      {
        "node_name": "QgsAuthCertInfoDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthCertInfoDialog.html",
        "description": "Dialog wrapper for widget displaying detailed info on a certificate and its hierarchical trust chain"
      },
      {
        "node_name": "QgsAuthCertManager",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthCertManager.html",
        "description": "Dialog wrapper for widget to manage available certificate editors"
      },
      {
        "node_name": "QgsAuthCertTrustPolicyComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthCertTrustPolicyComboBox.html",
        "description": "Widget for editing the trust policy associated with a Certificate (Intermediate) Authority"
      },
      {
        "node_name": "QgsAuthConfigEditor",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthConfigEditor.html",
        "description": "Widget for editing authentication configuration database"
      },
      {
        "node_name": "QgsAuthConfigSelect",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthConfigSelect.html",
        "description": "Selector widget for authentication configs"
      },
      {
        "node_name": "QgsAuthConfigUriEdit",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthConfigUriEdit.html",
        "description": "Dialog wrapper of select widget to edit an authcfg in a data source URI"
      },
      {
        "node_name": "QgsAuthEditorWidgets",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthEditorWidgets.html",
        "description": "Wrapper widget for available authentication editors"
      },
      {
        "node_name": "QgsAuthIdentitiesEditor",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthIdentitiesEditor.html",
        "description": "Widget for viewing and editing authentication identities database"
      },
      {
        "node_name": "QgsAuthImportCertDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthImportCertDialog.html",
        "description": "Widget for importing a certificate into the authentication database"
      },
      {
        "node_name": "QgsAuthImportIdentityDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthImportIdentityDialog.html",
        "description": "Widget for importing an identity certificate/key bundle into the authentication database"
      },
      {
        "node_name": "QgsAuthMethodEdit",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthMethodEdit.html",
        "description": "Abstract base class for the edit widget of authentication method plugins"
      },
      {
        "node_name": "QgsAuthMethodPlugins",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthMethodPlugins.html",
        "description": "Dialog for viewing available authentication method plugins"
      },
      {
        "node_name": "QgsAuthServersEditor",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthServersEditor.html",
        "description": "Widget for viewing and editing servers in authentication database"
      },
      {
        "node_name": "QgsAuthSettingsWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthSettingsWidget.html",
        "description": "Widget for entering authentication credentials both in the form username/password and by using QGIS Authentication Database and its authentication configurations."
      },
      {
        "node_name": "QgsAuthSslConfigDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthSslConfigDialog.html",
        "description": "Dialog wrapper of widget for editing an SSL server configuration"
      },
      {
        "node_name": "QgsAuthSslConfigWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthSslConfigWidget.html",
        "description": "Widget for editing an SSL server configuration"
      },
      {
        "node_name": "QgsAuthSslErrorsDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthSslErrorsDialog.html",
        "description": "Widget for reporting SSL errors and offering an option to store an SSL server exception into the authentication database"
      },
      {
        "node_name": "QgsAuthSslImportDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthSslImportDialog.html",
        "description": "Widget for importing an SSL server certificate exception into the authentication database"
      },
      {
        "node_name": "QgsAuthTrustedCAsDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAuthTrustedCAsDialog.html",
        "description": "Widget for listing trusted Certificate (Intermediate) Authorities used in secure connections"
      },
      {
        "node_name": "QgsBrowserGuiModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsBrowserGuiModel.html",
        "description": "A model for showing available data sources and other items in a structured tree."
      },
      {
        "node_name": "QgsCodeEditor",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCodeEditor.html",
        "description": "A text editor based on QScintilla2."
      },
      {
        "node_name": "QgsCodeEditorCSS",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCodeEditorCSS.html",
        "description": "A CSS editor based on QScintilla2. Adds syntax highlighting and code autocompletion."
      },
      {
        "node_name": "QgsCodeEditorColorScheme",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCodeEditorColorScheme.html",
        "description": "Defines a color scheme for use inQgsCodeEditorwidgets."
      },
      {
        "node_name": "QgsCodeEditorColorSchemeRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCodeEditorColorSchemeRegistry.html",
        "description": "A registry of color schemes for use inQgsCodeEditorwidgets."
      },
      {
        "node_name": "QgsCodeEditorDockWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCodeEditorDockWidget.html",
        "description": "A custom dock widget for code editors."
      },
      {
        "node_name": "QgsCodeEditorExpression",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCodeEditorExpression.html",
        "description": "A QGIS expression editor based on QScintilla2. Adds syntax highlighting and code autocompletion."
      },
      {
        "node_name": "QgsCodeEditorHTML",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCodeEditorHTML.html",
        "description": "A HTML editor based on QScintilla2. Adds syntax highlighting and code autocompletion."
      },
      {
        "node_name": "QgsCodeEditorJavascript",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCodeEditorJavascript.html",
        "description": "A Javascript editor based on QScintilla2. Adds syntax highlighting and code autocompletion."
      },
      {
        "node_name": "QgsCodeEditorJson",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCodeEditorJson.html",
        "description": "A JSON editor based on QScintilla2. Adds syntax highlighting and code autocompletion."
      },
      {
        "node_name": "QgsCodeEditorPython",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCodeEditorPython.html",
        "description": "A Python editor based on QScintilla2. Adds syntax highlighting and code autocompletion."
      },
      {
        "node_name": "QgsCodeEditorR",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCodeEditorR.html",
        "description": "A R stats code editor based on QScintilla2. Adds syntax highlighting and code autocompletion."
      },
      {
        "node_name": "QgsCodeEditorSQL",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCodeEditorSQL.html",
        "description": "A SQL editor based on QScintilla2. Adds syntax highlighting and code autocompletion."
      },
      {
        "node_name": "QgsCodeEditorShell",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCodeEditorShell.html",
        "description": "A shell script code editor based on QScintilla2. Adds syntax highlighting and code autocompletion."
      },
      {
        "node_name": "QgsCodeEditorWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCodeEditorWidget.html",
        "description": "A widget which wraps aQgsCodeEditorin additional functionality."
      },
      {
        "node_name": "QgsCodeInterpreter",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCodeInterpreter.html",
        "description": "An interface for code interpreters."
      },
      {
        "node_name": "QgsCoordinateBoundsPreviewMapWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCoordinateBoundsPreviewMapWidget.html",
        "description": "A widget for showing the bounds of a rectangular region on an interactive map."
      },
      {
        "node_name": "QgsCoordinateOperationWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCoordinateOperationWidget.html",
        "description": "A widget for selecting the coordinate operation to use when transforming between a source and destination coordinate reference system."
      },
      {
        "node_name": "QgsCoordinateReferenceSystemModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCoordinateReferenceSystemModel.html",
        "description": "A tree model for display of known coordinate reference systems."
      },
      {
        "node_name": "QgsCoordinateReferenceSystemProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCoordinateReferenceSystemProxyModel.html",
        "description": "A sort/filter proxy model for coordinate reference systems."
      },
      {
        "node_name": "QgsCrsDefinitionWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCrsDefinitionWidget.html",
        "description": "A widget for definition a custom coordinate reference system."
      },
      {
        "node_name": "QgsCrsSelectionWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCrsSelectionWidget.html",
        "description": "A generic widget allowing users to pick a Coordinate Reference System (or define their own)."
      },
      {
        "node_name": "QgsProjectionSelectionDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProjectionSelectionDialog.html",
        "description": "A generic dialog to prompt the user for a Coordinate Reference System."
      },
      {
        "node_name": "QgsProjectionSelectionTreeWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProjectionSelectionTreeWidget.html",
        "description": "A widget for selecting a coordinate reference system from a tree."
      },
      {
        "node_name": "QgsProjectionSelectionWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProjectionSelectionWidget.html",
        "description": "A widget for selecting a projection."
      },
      {
        "node_name": "QgsRecentCoordinateReferenceSystemsModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRecentCoordinateReferenceSystemsModel.html",
        "description": "A model for display of recently used coordinate reference systems."
      },
      {
        "node_name": "QgsRecentCoordinateReferenceSystemsProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRecentCoordinateReferenceSystemsProxyModel.html",
        "description": "A sort/filter proxy model for recent coordinate reference systems."
      },
      {
        "node_name": "QgsAbstractDbSourceSelect",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAbstractDbSourceSelect.html",
        "description": "TheQgsAbstractDbSourceSelectclass is a base class for database source widget selector"
      },
      {
        "node_name": "QgsProviderSublayerDialogModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProviderSublayerDialogModel.html",
        "description": "A model for representing the sublayers present in a URI for theQgsProviderSublayersDialog."
      },
      {
        "node_name": "QgsGdalCredentialOptionsWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsGdalCredentialOptionsWidget.html",
        "description": "A widget for configuring GDAL credential options."
      },
      {
        "node_name": "QgsVectorLayerSaveAsDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsVectorLayerSaveAsDialog.html",
        "description": "Class to select destination file, type and CRS for ogr layers"
      },
      {
        "node_name": "QgsDevToolWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDevToolWidget.html",
        "description": "A panel widget that can be shown in the developer tools panel."
      },
      {
        "node_name": "QgsDevToolWidgetFactory",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDevToolWidgetFactory.html",
        "description": "Factory class for creating custom developer/debugging tool pages"
      },
      {
        "node_name": "QgsElevationControllerSettingsAction",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsElevationControllerSettingsAction.html",
        "description": ""
      },
      {
        "node_name": "QgsElevationControllerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsElevationControllerWidget.html",
        "description": "A widget for configuring vertical elevation slicing behavior for maps."
      },
      {
        "node_name": "QgsElevationProfileCanvas",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsElevationProfileCanvas.html",
        "description": "A canvas for elevation profiles."
      },
      {
        "node_name": "QgsGeocoderLocatorFilter",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsGeocoderLocatorFilter.html",
        "description": "An adapter class which implements a locator filter populated from aQgsGeocoderInterface."
      },
      {
        "node_name": "QgsAbstract2DMapController",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAbstract2DMapController.html",
        "description": "Abstract base class for all 2D map controllers."
      },
      {
        "node_name": "QgsAbstract3DMapController",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAbstract3DMapController.html",
        "description": "Abstract base class for all 3D map controllers."
      },
      {
        "node_name": "QgsAbstractInputController",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAbstractInputController.html",
        "description": "Abstract base class for all input controllers."
      },
      {
        "node_name": "QgsInputControllerManager",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsInputControllerManager.html",
        "description": "Manages input control devices."
      },
      {
        "node_name": "QgsCalloutPanelWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCalloutPanelWidget.html",
        "description": "A panel widget for configuration of callouts."
      },
      {
        "node_name": "QgsCalloutWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCalloutWidget.html",
        "description": "Base class for widgets which allow control over the properties of callouts."
      },
      {
        "node_name": "QgsLabelLineAnchorWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLabelLineAnchorWidget.html",
        "description": "A widget for customising label line anchor settings."
      },
      {
        "node_name": "QgsLabelObstacleSettingsWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLabelObstacleSettingsWidget.html",
        "description": "A widget for customising label obstacle settings."
      },
      {
        "node_name": "QgsLabelSettingsWidgetBase",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLabelSettingsWidgetBase.html",
        "description": "Base class for widgets which allow customization of label engine properties, such as label placement settings."
      },
      {
        "node_name": "QgsLabelSettingsWidgetDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLabelSettingsWidgetDialog.html",
        "description": "A blocking dialog containing aQgsLabelSettingsWidgetBase."
      },
      {
        "node_name": "QgsLabelingEngineRuleWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLabelingEngineRuleWidget.html",
        "description": "Base class for widgets which allow control over the properties ofQgsAbstractLabelingEngineRulesubclasses"
      },
      {
        "node_name": "QgsLabelingEngineRulesDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLabelingEngineRulesDialog.html",
        "description": "A dialog which allows configuration of a list of labeling engine rules."
      },
      {
        "node_name": "QgsLabelingEngineRulesWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLabelingEngineRulesWidget.html",
        "description": "A widget which allows configuration of a list of labeling engine rules."
      },
      {
        "node_name": "QgsCustomLayerOrderWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCustomLayerOrderWidget.html",
        "description": "TheQgsCustomLayerOrderWidgetclass provides a list box where the user can define custom order for drawing of layers. It also features a checkbox for enabling or disabling the custom order. Any changes made by the user are automatically propagated to the assignedQgsLayerTreeMapCanvasBridge. Also, any updates to the layer tree cause refresh of the list."
      },
      {
        "node_name": "QgsLayerTreeEmbeddedConfigWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayerTreeEmbeddedConfigWidget.html",
        "description": "A widget to configure layer tree embedded widgets for a particular map layer."
      },
      {
        "node_name": "QgsLayerTreeEmbeddedWidgetProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayerTreeEmbeddedWidgetProvider.html",
        "description": "Provider interface to be implemented in order to introduce new kinds of embedded widgets for use in layer tree. Embedded widgets are assigned per individual map layers and they are shown before any legend entries."
      },
      {
        "node_name": "QgsLayerTreeEmbeddedWidgetRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayerTreeEmbeddedWidgetRegistry.html",
        "description": "Registry of widgets that may be embedded into layer tree view. Embedded widgets are assigned per individual map layers and they are shown before any legend entries. Layer tree must have UseEmbeddedWidgets flag enabled in order to show assigned widgets."
      },
      {
        "node_name": "QgsLayerTreeMapCanvasBridge",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayerTreeMapCanvasBridge.html",
        "description": "TheQgsLayerTreeMapCanvasBridgeclass takes care of updates of layer set forQgsMapCanvasfrom a layer tree. The class listens to the updates in the layer tree and updates the list of layers for rendering whenever some layers are added, removed, or their visibility changes."
      },
      {
        "node_name": "QgsLayerTreeProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayerTreeProxyModel.html",
        "description": "TheQgsLayerTreeProxyModelclass is a proxy model forQgsLayerTreeModel, supports private layers and text filtering."
      },
      {
        "node_name": "QgsLayerTreeView",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayerTreeView.html",
        "description": "TheQgsLayerTreeViewclass extends QTreeView and provides some additional functionality when working with a layer tree."
      },
      {
        "node_name": "QgsLayerTreeViewDefaultActions",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayerTreeViewDefaultActions.html",
        "description": "TheQgsLayerTreeViewDefaultActionsclass serves as a factory of actions that can be used together with a layer tree view."
      },
      {
        "node_name": "QgsLayerTreeViewIndicator",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayerTreeViewIndicator.html",
        "description": "Indicator that can be used in a layer tree view to display icons next to items of the layer tree. They add extra context to the item and interactivity (usingclicked()signal)."
      },
      {
        "node_name": "QgsLayerTreeViewMenuProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayerTreeViewMenuProvider.html",
        "description": "Implementation of this interface can be implemented to allowQgsLayerTreeViewinstance to provide custom context menus (opened upon right-click)."
      },
      {
        "node_name": "QgsLocatorWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLocatorWidget.html",
        "description": "A special locator widget which allows searching for matching results from aQgsLocatorand presenting them to users for selection."
      },
      {
        "node_name": "QgsActionMenu",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsActionMenu.html",
        "description": "This class is a menu that is populated automatically with the actions defined for a given layer."
      },
      {
        "node_name": "QgsAttributeDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAttributeDialog.html",
        "description": "Create an attribute dialog for a given layer and feature"
      },
      {
        "node_name": "QgsMapLayerAction",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapLayerAction.html",
        "description": "An action which can run on map layers The class can be used in two manners: * by instantiating it and connecting to its signals to perform an action * by subclassing and reimplementing its method (only since QGIS 3.18.2)"
      },
      {
        "node_name": "QgsMapLayerActionContext",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapLayerActionContext.html",
        "description": "Encapsulates the context in which aQgsMapLayerActionaction is executed."
      },
      {
        "node_name": "QgsMapLayerActionContextGenerator",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapLayerActionContextGenerator.html",
        "description": "An interface for objects which can create aQgsMapLayerActionContext."
      },
      {
        "node_name": "QgsMapLayerActionRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapLayerActionRegistry.html",
        "description": "This class tracks map layer actions."
      },
      {
        "node_name": "QgsMapTool",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapTool.html",
        "description": "Abstract base class for all map tools. Map tools are user interactive tools for manipulating the map canvas. For example map pan and zoom features are implemented as map tools."
      },
      {
        "node_name": "QgsMapToolAdvancedDigitizing",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapToolAdvancedDigitizing.html",
        "description": "TheQgsMapToolAdvancedDigitizingclass is aQgsMapToolwhich gives event directly in map coordinates and allows filtering its events. Events fromQgsMapToolare caught and their QMouseEvent are transformed intoQgsMapMouseEvent(with map coordinates). Events are then forwarded to corresponding virtual methods which can be reimplemented in subclasses. An event filter can be set on the map tool to filter and modify the events in map coordinates (:py:"
      },
      {
        "node_name": "QgsMapToolCapture",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapToolCapture.html",
        "description": "is a base class capable of capturing point, lines and polygons. The tool supports different techniques: straight segments, curves, streaming and shapes Once the the geometry is captured the virtual private handler geometryCaptured is called as well as a more specific handler (pointCaptured, lineCaptured or polygonCaptured)"
      },
      {
        "node_name": "QgsMapToolCaptureLayerGeometry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapToolCaptureLayerGeometry.html",
        "description": "is a base class for map tools digitizing layer geometries This map tool subclass automatically handles intersection avoidance with other layers in the active project whenever a geometry is digitized by the user."
      },
      {
        "node_name": "QgsMapToolDigitizeFeature",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapToolDigitizeFeature.html",
        "description": "This tool digitizes geometry of new point/line/polygon features on already existing vector layers Once the map tool is enabled, user can digitize the feature geometry. A signal will then be emitted."
      },
      {
        "node_name": "QgsMapToolEdit",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapToolEdit.html",
        "description": "Base class for map tools that edit vector geometry"
      },
      {
        "node_name": "QgsMapToolEmitPoint",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapToolEmitPoint.html",
        "description": "A map tool that simply emits a point when clicking on the map. Connecting a slot to itscanvasClicked()signal will let you implement custom behavior for the passed in point."
      },
      {
        "node_name": "QgsMapToolExtent",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapToolExtent.html",
        "description": "A map tool that emits an extent from a rectangle drawn onto the map canvas."
      },
      {
        "node_name": "QgsMapToolIdentify",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapToolIdentify.html",
        "description": "Map tool for identifying features in layers"
      },
      {
        "node_name": "QgsMapToolIdentifyFeature",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapToolIdentifyFeature.html",
        "description": "TheQgsMapToolIdentifyFeatureclass is a map tool to identify a feature on a chosen layer. Once the map tool is enable, user can click on the map canvas to identify a feature. A signal will then be emitted."
      },
      {
        "node_name": "QgsMapToolPan",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapToolPan.html",
        "description": "A map tool for panning the map."
      },
      {
        "node_name": "QgsMapToolZoom",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMapToolZoom.html",
        "description": "A map tool for zooming into the map."
      },
      {
        "node_name": "QgsMeshLayerProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMeshLayerProperties.html",
        "description": "Property sheet for a mesh map layer. Contains information, source and style tabs"
      },
      {
        "node_name": "QgsBasicNumericFormatWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsBasicNumericFormatWidget.html",
        "description": "A widget which allow control over the properties of aQgsBasicNumericFormat."
      },
      {
        "node_name": "QgsBearingNumericFormatDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsBearingNumericFormatDialog.html",
        "description": "A dialog which allow control over the properties of aQgsBearingNumericFormat."
      },
      {
        "node_name": "QgsBearingNumericFormatWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsBearingNumericFormatWidget.html",
        "description": "A widget which allow control over the properties of aQgsBearingNumericFormat."
      },
      {
        "node_name": "QgsCurrencyNumericFormatWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCurrencyNumericFormatWidget.html",
        "description": "A widget which allow control over the properties of aQgsCurrencyNumericFormat."
      },
      {
        "node_name": "QgsExpressionBasedNumericFormatWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsExpressionBasedNumericFormatWidget.html",
        "description": "A widget which allow control over the properties of aQgsExpressionBasedNumericFormat."
      },
      {
        "node_name": "QgsFractionNumericFormatWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFractionNumericFormatWidget.html",
        "description": "A widget which allow control over the properties of aQgsFractionNumericFormat."
      },
      {
        "node_name": "QgsGeographicCoordinateNumericFormatDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsGeographicCoordinateNumericFormatDialog.html",
        "description": "A dialog which allow control over the properties of aQgsGeographicCoordinateNumericFormat."
      },
      {
        "node_name": "QgsGeographicCoordinateNumericFormatWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsGeographicCoordinateNumericFormatWidget.html",
        "description": "A widget which allow control over the properties of aQgsGeographicCoordinateNumericFormat."
      },
      {
        "node_name": "QgsNumericFormatConfigurationWidgetFactory",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsNumericFormatConfigurationWidgetFactory.html",
        "description": "Interface base class for factories for numeric format configuration widgets."
      },
      {
        "node_name": "QgsNumericFormatGuiRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsNumericFormatGuiRegistry.html",
        "description": "TheQgsNumericFormatGuiRegistryis a home for widgets for configuringQgsNumericFormatobjects."
      },
      {
        "node_name": "QgsNumericFormatSelectorDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsNumericFormatSelectorDialog.html",
        "description": "A simple dialog for customizing a numeric format."
      },
      {
        "node_name": "QgsNumericFormatSelectorWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsNumericFormatSelectorWidget.html",
        "description": "A widget which allows choice of numeric formats and the properties of them."
      },
      {
        "node_name": "QgsNumericFormatWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsNumericFormatWidget.html",
        "description": "Base class for widgets which allow control over the properties ofQgsNumericFormatsubclasses"
      },
      {
        "node_name": "QgsPercentageNumericFormatWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPercentageNumericFormatWidget.html",
        "description": "A widget which allow control over the properties of aQgsPercentageNumericFormat."
      },
      {
        "node_name": "QgsScientificNumericFormatWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsScientificNumericFormatWidget.html",
        "description": "A widget which allow control over the properties of aQgsScientificNumericFormat."
      },
      {
        "node_name": "QgsBlurWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsBlurWidget.html",
        "description": ""
      },
      {
        "node_name": "QgsColorEffectWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorEffectWidget.html",
        "description": ""
      },
      {
        "node_name": "QgsDrawSourceWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDrawSourceWidget.html",
        "description": ""
      },
      {
        "node_name": "QgsEffectDrawModeComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsEffectDrawModeComboBox.html",
        "description": "A combo box allowing selection of paint effect draw modes"
      },
      {
        "node_name": "QgsEffectStackCompactWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsEffectStackCompactWidget.html",
        "description": "A small widget consisting of a checkbox for enabling/disabling an effect stack and a button for opening an effect stack customization dialog."
      },
      {
        "node_name": "QgsEffectStackPropertiesDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsEffectStackPropertiesDialog.html",
        "description": "A dialog for modifying the properties of aQgsEffectStack, including adding and reordering effects within the stack."
      },
      {
        "node_name": "QgsEffectStackPropertiesWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsEffectStackPropertiesWidget.html",
        "description": "A widget for modifying the properties of aQgsEffectStack, including adding and reordering effects within the stack."
      },
      {
        "node_name": "QgsGlowWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsGlowWidget.html",
        "description": ""
      },
      {
        "node_name": "QgsPaintEffectPropertiesWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPaintEffectPropertiesWidget.html",
        "description": "A widget which modifies the properties of aQgsPaintEffect"
      },
      {
        "node_name": "QgsPaintEffectWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPaintEffectWidget.html",
        "description": "Base class for effect properties widgets."
      },
      {
        "node_name": "QgsShadowEffectWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsShadowEffectWidget.html",
        "description": ""
      },
      {
        "node_name": "QgsTransformWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTransformWidget.html",
        "description": ""
      },
      {
        "node_name": "QgsPlotCanvas",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPlotCanvas.html",
        "description": "Plot canvas is a class for displaying interactive 2d charts and plots."
      },
      {
        "node_name": "QgsPlotCanvasItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPlotCanvasItem.html",
        "description": "An abstract class for items that can be placed on aQgsPlotCanvas."
      },
      {
        "node_name": "QgsPlotMouseEvent",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPlotMouseEvent.html",
        "description": "AQgsPlotMouseEventis the result of a user interaction with the mouse on aQgsPlotCanvas."
      },
      {
        "node_name": "QgsPlotRectangularRubberBand",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPlotRectangularRubberBand.html",
        "description": "is rectangular rubber band for use withinQgsPlotCanvaswidgets."
      },
      {
        "node_name": "QgsPlotRubberBand",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPlotRubberBand.html",
        "description": "is an abstract base class for temporary rubber band items in various shapes, for use withinQgsPlotCanvaswidgets."
      },
      {
        "node_name": "QgsPlotTool",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPlotTool.html",
        "description": "Abstract base class for all interactive plot tools."
      },
      {
        "node_name": "QgsPlotToolPan",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPlotToolPan.html",
        "description": "Plot tool for panning/zoom/navigating plots."
      },
      {
        "node_name": "QgsPlotToolTemporaryKeyPan",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPlotToolTemporaryKeyPan.html",
        "description": "Plot tool for temporarily panning a plot while a key is depressed."
      },
      {
        "node_name": "QgsPlotToolTemporaryKeyZoom",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPlotToolTemporaryKeyZoom.html",
        "description": "Plot tool for temporarily zooming a plot while a key is depressed."
      },
      {
        "node_name": "QgsPlotToolTemporaryMousePan",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPlotToolTemporaryMousePan.html",
        "description": "Plot tool for temporarily panning a plot while a mouse button is depressed."
      },
      {
        "node_name": "QgsPlotToolZoom",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPlotToolZoom.html",
        "description": "Plot tool for zooming into and out of the plot."
      },
      {
        "node_name": "QgsPointCloudRendererPropertiesWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPointCloudRendererPropertiesWidget.html",
        "description": "A generic widget for setting the 2D renderer for a point cloud layer."
      },
      {
        "node_name": "QgsPointCloudRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPointCloudRendererWidget.html",
        "description": "Base class for point cloud 2D renderer settings widgets."
      },
      {
        "node_name": "QgsLayoutComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutComboBox.html",
        "description": "TheQgsLayoutComboBoxclass is a combo box which displays available layouts from aQgsLayoutManager."
      },
      {
        "node_name": "QgsLayoutConfigObject",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutConfigObject.html",
        "description": "An object for property widgets for layout items. All layout config type widgets should contain this object."
      },
      {
        "node_name": "QgsLayoutCustomDropHandler",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutCustomDropHandler.html",
        "description": "Abstract base class that may be implemented to handle new types of data to be dropped or pasted in QGIS layouts."
      },
      {
        "node_name": "QgsLayoutDesignerInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutDesignerInterface.html",
        "description": "A common interface for layout designer dialogs and widgets."
      },
      {
        "node_name": "QgsLayoutItemAbstractGuiMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutItemAbstractGuiMetadata.html",
        "description": "Stores GUI metadata about one layout item class."
      },
      {
        "node_name": "QgsLayoutItemBaseWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutItemBaseWidget.html",
        "description": "A base class for property widgets for layout items. All layout item widgets should inherit from this base class."
      },
      {
        "node_name": "QgsLayoutItemComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutItemComboBox.html",
        "description": "TheQgsLayoutItemComboBoxclass is a combo box which displays items of a matching type from a layout."
      },
      {
        "node_name": "QgsLayoutItemGuiGroup",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutItemGuiGroup.html",
        "description": "Stores GUI metadata about a group of layout item classes."
      },
      {
        "node_name": "QgsLayoutItemGuiRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutItemGuiRegistry.html",
        "description": "Registry of available layout item GUI behavior."
      },
      {
        "node_name": "QgsLayoutItemPropertiesDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutItemPropertiesDialog.html",
        "description": "A dialog for configuring properties like the size and position of layout items."
      },
      {
        "node_name": "QgsLayoutItemPropertiesWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutItemPropertiesWidget.html",
        "description": "A widget for controlling the common properties of layout items (e.g. position and size, background, stroke, frame). This widget can be embedded into other layout item widgets."
      },
      {
        "node_name": "QgsLayoutRuler",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutRuler.html",
        "description": "A custom ruler widget for use withQgsLayoutView, displaying the current zoom and position of the visible layout and for interacting with guides in a layout."
      },
      {
        "node_name": "QgsLayoutUnitsComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutUnitsComboBox.html",
        "description": "A custom combo box for selecting units for layout settings."
      },
      {
        "node_name": "QgsLayoutView",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutView.html",
        "description": "A graphical widget to display and interact withQgsLayouts."
      },
      {
        "node_name": "QgsLayoutViewEllipticalRubberBand",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutViewEllipticalRubberBand.html",
        "description": "QgsLayoutViewEllipseRubberBandis elliptical rubber band for use withinQgsLayoutViewwidgets."
      },
      {
        "node_name": "QgsLayoutViewMenuProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutViewMenuProvider.html",
        "description": "Interface for aQgsLayoutViewcontext menu."
      },
      {
        "node_name": "QgsLayoutViewMouseEvent",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutViewMouseEvent.html",
        "description": "AQgsLayoutViewMouseEventis the result of a user interaction with the mouse on aQgsLayoutView."
      },
      {
        "node_name": "QgsLayoutViewRectangularRubberBand",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutViewRectangularRubberBand.html",
        "description": "is rectangular rubber band for use withinQgsLayoutViewwidgets."
      },
      {
        "node_name": "QgsLayoutViewRubberBand",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutViewRubberBand.html",
        "description": "is an abstract base class for temporary rubber band items in various shapes, for use withinQgsLayoutViewwidgets."
      },
      {
        "node_name": "QgsLayoutViewTool",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutViewTool.html",
        "description": "Abstract base class for all layout view tools. Layout view tools are user interactive tools for manipulating and adding items toQgsLayoutViewwidgets."
      },
      {
        "node_name": "QgsLayoutViewToolAddItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutViewToolAddItem.html",
        "description": "Layout view tool for adding items to a layout."
      },
      {
        "node_name": "QgsLayoutViewToolAddNodeItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutViewToolAddNodeItem.html",
        "description": "Layout view tool for adding node based items to a layout."
      },
      {
        "node_name": "QgsLayoutViewToolEditNodes",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutViewToolEditNodes.html",
        "description": "Layout view tool for edit node based items in the layout."
      },
      {
        "node_name": "QgsLayoutViewToolMoveItemContent",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutViewToolMoveItemContent.html",
        "description": "Layout view tool for moving and zooming item content."
      },
      {
        "node_name": "QgsLayoutViewToolPan",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutViewToolPan.html",
        "description": "Layout view tool for panning the layout."
      },
      {
        "node_name": "QgsLayoutViewToolSelect",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutViewToolSelect.html",
        "description": "Layout view tool for selecting items in the layout."
      },
      {
        "node_name": "QgsLayoutViewToolTemporaryKeyPan",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutViewToolTemporaryKeyPan.html",
        "description": "Layout view tool for temporarily panning a layout while a key is depressed."
      },
      {
        "node_name": "QgsLayoutViewToolTemporaryKeyZoom",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutViewToolTemporaryKeyZoom.html",
        "description": "Layout view tool for temporarily zooming a layout while a key is depressed."
      },
      {
        "node_name": "QgsLayoutViewToolTemporaryMousePan",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutViewToolTemporaryMousePan.html",
        "description": "Layout view tool for temporarily panning a layout while a mouse button is depressed."
      },
      {
        "node_name": "QgsLayoutViewToolZoom",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutViewToolZoom.html",
        "description": "Layout view tool for zooming into and out of the layout."
      },
      {
        "node_name": "QgsLayoutViewTriangleRubberBand",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayoutViewTriangleRubberBand.html",
        "description": "is triangular rubber band for use withinQgsLayoutViewwidgets."
      },
      {
        "node_name": "QgsAbstractProcessingParameterWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAbstractProcessingParameterWidgetWrapper.html",
        "description": "A widget wrapper for Processing parameter value widgets."
      },
      {
        "node_name": "QgsAggregateMappingModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAggregateMappingModel.html",
        "description": "TheQgsAggregateMappingModelholds mapping information for defining sets of aggregates of fields from aQgsFieldsobject."
      },
      {
        "node_name": "QgsAggregateMappingWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAggregateMappingWidget.html",
        "description": "TheQgsAggregateMappingWidgetclass creates a mapping for defining sets of aggregates of fields from aQgsFieldsobject."
      },
      {
        "node_name": "QgsProcessingAbstractParameterDefinitionWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingAbstractParameterDefinitionWidget.html",
        "description": "Abstract base class for widgets which allow users to specify the properties of a Processing parameter."
      },
      {
        "node_name": "QgsProcessingAlgorithmConfigurationWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingAlgorithmConfigurationWidget.html",
        "description": "A configuration widget for processing algorithms allows providing additional configuration options directly on algorithm level, in addition to parameters."
      },
      {
        "node_name": "QgsProcessingAlgorithmConfigurationWidgetFactory",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingAlgorithmConfigurationWidgetFactory.html",
        "description": "Interface base class for factories for algorithm configuration widgets."
      },
      {
        "node_name": "QgsProcessingAlgorithmDialogBase",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingAlgorithmDialogBase.html",
        "description": "Base class for processing algorithm dialogs."
      },
      {
        "node_name": "QgsProcessingBatchAlgorithmDialogBase",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingBatchAlgorithmDialogBase.html",
        "description": "Base class for processing batch algorithm dialogs."
      },
      {
        "node_name": "QgsProcessingContextGenerator",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingContextGenerator.html",
        "description": "An interface for objects which can create Processing contexts."
      },
      {
        "node_name": "QgsProcessingFavoriteAlgorithmManager",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingFavoriteAlgorithmManager.html",
        "description": "A manager for tracking favorite Processing algorithms."
      },
      {
        "node_name": "QgsProcessingGui",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingGui.html",
        "description": "Contains general functions and values related to Processing GUI components."
      },
      {
        "node_name": "QgsProcessingGuiRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingGuiRegistry.html",
        "description": "TheQgsProcessingGuiRegistryis a home for widgets for processing configuration widgets."
      },
      {
        "node_name": "QgsProcessingGuiUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingGuiUtils.html",
        "description": "Contains utility functions relating to Processing GUI components."
      },
      {
        "node_name": "QgsProcessingHiddenWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingHiddenWidgetWrapper.html",
        "description": "An widget wrapper for hidden widgets."
      },
      {
        "node_name": "QgsProcessingHistoryDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingHistoryDialog.html",
        "description": "A dialog for showing Processing algorithm execution history."
      },
      {
        "node_name": "QgsProcessingHistoryProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingHistoryProvider.html",
        "description": "History provider for operations performed through the Processing framework."
      },
      {
        "node_name": "QgsProcessingHistoryWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingHistoryWidget.html",
        "description": "A widget for showing Processing algorithm execution history."
      },
      {
        "node_name": "QgsProcessingLayerOutputDestinationWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingLayerOutputDestinationWidget.html",
        "description": "A widget which allows users to select the destination path for an output style Processing parameter."
      },
      {
        "node_name": "QgsProcessingMapLayerComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingMapLayerComboBox.html",
        "description": "Processing map layer combo box."
      },
      {
        "node_name": "QgsProcessingModelerParameterWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingModelerParameterWidget.html",
        "description": "A widget for customising the value of Processing algorithm parameter inside a Processing model."
      },
      {
        "node_name": "QgsProcessingMultipleInputDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingMultipleInputDialog.html",
        "description": "A dialog for selection of multiple layer inputs."
      },
      {
        "node_name": "QgsProcessingMultipleInputPanelWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingMultipleInputPanelWidget.html",
        "description": "A panel widget for selection of multiple inputs from a fixed list of options."
      },
      {
        "node_name": "QgsProcessingMultipleSelectionDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingMultipleSelectionDialog.html",
        "description": "A dialog for selection of multiple options from a fixed list of options."
      },
      {
        "node_name": "QgsProcessingMultipleSelectionPanelWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingMultipleSelectionPanelWidget.html",
        "description": "A panel widget for selection of multiple options from a fixed list of options."
      },
      {
        "node_name": "QgsProcessingParameterDefinitionDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingParameterDefinitionDialog.html",
        "description": "A dialog which allow users to specify the properties of a Processing parameter."
      },
      {
        "node_name": "QgsProcessingParameterDefinitionWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingParameterDefinitionWidget.html",
        "description": "A widget which allow users to specify the properties of a Processing parameter."
      },
      {
        "node_name": "QgsProcessingParameterWidgetContext",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingParameterWidgetContext.html",
        "description": "Contains settings which reflect the context in which a Processing parameter widget is shown, e.g., the parent model algorithm, a linked map canvas, and other relevant information which allows the widget to fine-tune its behavior."
      },
      {
        "node_name": "QgsProcessingParameterWidgetFactoryInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingParameterWidgetFactoryInterface.html",
        "description": "An interface for Processing widget wrapper factories."
      },
      {
        "node_name": "QgsProcessingParametersGenerator",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingParametersGenerator.html",
        "description": "An interface for objects which can create sets of parameter values for processing algorithms."
      },
      {
        "node_name": "QgsProcessingParametersWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingParametersWidget.html",
        "description": "A widget which allows users to select the value for the parameters for an algorithm."
      },
      {
        "node_name": "QgsProcessingRecentAlgorithmLog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingRecentAlgorithmLog.html",
        "description": "A log for tracking recently used processing algorithms."
      },
      {
        "node_name": "QgsProcessingToolboxModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingToolboxModel.html",
        "description": "A model for providers and algorithms shown within the Processing toolbox."
      },
      {
        "node_name": "QgsProcessingToolboxModelAlgorithmNode",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingToolboxModelAlgorithmNode.html",
        "description": "Processing toolbox model node corresponding to an algorithm."
      },
      {
        "node_name": "QgsProcessingToolboxModelFavoriteNode",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingToolboxModelFavoriteNode.html",
        "description": "Processing toolbox model node corresponding to the favorite algorithms"
      },
      {
        "node_name": "QgsProcessingToolboxModelGroupNode",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingToolboxModelGroupNode.html",
        "description": "Processing toolbox model node corresponding to a group of algorithms."
      },
      {
        "node_name": "QgsProcessingToolboxModelNode",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingToolboxModelNode.html",
        "description": "Abstract base class for nodes contained within aQgsProcessingToolboxModel."
      },
      {
        "node_name": "QgsProcessingToolboxModelProviderNode",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingToolboxModelProviderNode.html",
        "description": "Processing toolbox model node corresponding to a Processing provider."
      },
      {
        "node_name": "QgsProcessingToolboxModelRecentNode",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingToolboxModelRecentNode.html",
        "description": "Processing toolbox model node corresponding to the recent algorithms"
      },
      {
        "node_name": "QgsProcessingToolboxProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingToolboxProxyModel.html",
        "description": "A sort/filter proxy model for providers and algorithms shown within the Processing toolbox, which automatically sorts the toolbox in a logical fashion and supports filtering the results."
      },
      {
        "node_name": "QgsProcessingToolboxTreeView",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsProcessingToolboxTreeView.html",
        "description": "Processing toolbox tree view, showing algorithms and providers in a tree structure."
      },
      {
        "node_name": "QgsModelArrowItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsModelArrowItem.html",
        "description": "A link arrow item for use in the model designer."
      },
      {
        "node_name": "QgsModelChildAlgorithmGraphicItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsModelChildAlgorithmGraphicItem.html",
        "description": "A graphic item representing a child algorithm in the model designer."
      },
      {
        "node_name": "QgsModelChildDependenciesWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsModelChildDependenciesWidget.html",
        "description": ""
      },
      {
        "node_name": "QgsModelCommentGraphicItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsModelCommentGraphicItem.html",
        "description": "A graphic item representing a model comment in the model designer."
      },
      {
        "node_name": "QgsModelComponentGraphicItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsModelComponentGraphicItem.html",
        "description": "Base class for graphic items representing model components in the model designer."
      },
      {
        "node_name": "QgsModelDesignerDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsModelDesignerDialog.html",
        "description": "Model designer dialog base class"
      },
      {
        "node_name": "QgsModelDesignerFlatButtonGraphicItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsModelDesignerFlatButtonGraphicItem.html",
        "description": "A flat button graphic item for use in the Processing model designer."
      },
      {
        "node_name": "QgsModelDesignerFoldButtonGraphicItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsModelDesignerFoldButtonGraphicItem.html",
        "description": "A button allowing folding or expanding component graphics in the Processing model designer."
      },
      {
        "node_name": "QgsModelGraphicsScene",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsModelGraphicsScene.html",
        "description": "QGraphicsScene subclass representing the model designer."
      },
      {
        "node_name": "QgsModelGraphicsView",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsModelGraphicsView.html",
        "description": "QGraphicsView subclass representing the model designer."
      },
      {
        "node_name": "QgsModelGroupBoxGraphicItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsModelGroupBoxGraphicItem.html",
        "description": "A graphic item representing a group box in the model designer."
      },
      {
        "node_name": "QgsModelOutputGraphicItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsModelOutputGraphicItem.html",
        "description": "A graphic item representing a model output in the model designer."
      },
      {
        "node_name": "QgsModelParameterGraphicItem",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsModelParameterGraphicItem.html",
        "description": "A graphic item representing a model parameter (input) in the model designer."
      },
      {
        "node_name": "QgsModelViewSnapMarker",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsModelViewSnapMarker.html",
        "description": "A simple graphics item rendered as an ‘x’."
      },
      {
        "node_name": "QgsColorRampShaderWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsColorRampShaderWidget.html",
        "description": "It has 2 ways how to use it. For raster layers, raster data provider and band is assigned and the Quantile classification mode can be used and the LoadFromBandButton is visible."
      },
      {
        "node_name": "QgsHillshadeRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsHillshadeRendererWidget.html",
        "description": "Renderer widget for the hill shade renderer."
      },
      {
        "node_name": "QgsMultiBandColorRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMultiBandColorRendererWidget.html",
        "description": "Constructor for QgsMultiBandColorRendererWidget."
      },
      {
        "node_name": "QgsPalettedRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPalettedRendererWidget.html",
        "description": "Constructor forQgsSingleBandPseudoColorRendererWidget."
      },
      {
        "node_name": "QgsRasterAttributeTableDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRasterAttributeTableDialog.html",
        "description": "TheQgsRasterAttributeTableDialogclass embeds an attribute table widget."
      },
      {
        "node_name": "QgsRasterAttributeTableModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRasterAttributeTableModel.html",
        "description": "TheQgsRasterAttributeTableModelclass manages aQgsRasterAttributeTable"
      },
      {
        "node_name": "QgsRasterAttributeTableWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRasterAttributeTableWidget.html",
        "description": "TheQgsRasterAttributeTableWidgetclass provides an attribute table for rasters and methods to edit the table."
      },
      {
        "node_name": "QgsRasterBandComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRasterBandComboBox.html",
        "description": "A combobox widget which displays the bands present in a raster layer."
      },
      {
        "node_name": "QgsRasterContourRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRasterContourRendererWidget.html",
        "description": "Configuration widget forQgsRasterContourRenderer"
      },
      {
        "node_name": "QgsRasterHistogramWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRasterHistogramWidget.html",
        "description": "Histogram widget"
      },
      {
        "node_name": "QgsRasterLayerProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRasterLayerProperties.html",
        "description": "Property sheet for a raster map layer"
      },
      {
        "node_name": "QgsRasterLayerTemporalPropertiesWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRasterLayerTemporalPropertiesWidget.html",
        "description": "A widget for configuring the temporal properties for a raster layer."
      },
      {
        "node_name": "QgsRasterMinMaxWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRasterMinMaxWidget.html",
        "description": "Constructor for QgsRasterMinMaxWidget"
      },
      {
        "node_name": "QgsRasterRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRasterRendererWidget.html",
        "description": "Abstract base class for widgets which configure aQgsRasterRenderer."
      },
      {
        "node_name": "QgsRasterTransparencyWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRasterTransparencyWidget.html",
        "description": "Widget to control a layers transparency and related options"
      },
      {
        "node_name": "QgsRendererRasterPropertiesWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRendererRasterPropertiesWidget.html",
        "description": "A widget to hold the renderer properties for a raster layer."
      },
      {
        "node_name": "QgsSingleBandGrayRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSingleBandGrayRendererWidget.html",
        "description": "Constructor for QgsSingleBandGrayRendererWidget."
      },
      {
        "node_name": "QgsSingleBandPseudoColorRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSingleBandPseudoColorRendererWidget.html",
        "description": "Single band pseudo color renderer widget consists of a color ramp shader widget, a raster min max widget and a band selector."
      },
      {
        "node_name": "QgsAbstractSensorWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAbstractSensorWidget.html",
        "description": "Base class for widgets which allow control over the properties of sensors."
      },
      {
        "node_name": "QgsSensorAbstractGuiMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSensorAbstractGuiMetadata.html",
        "description": "Stores GUI metadata about one sensor class."
      },
      {
        "node_name": "QgsSensorGuiRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSensorGuiRegistry.html",
        "description": "Registry of available sensor GUI behavior."
      },
      {
        "node_name": "PyQgsSettingsEnumEditorWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/PyQgsSettingsEnumEditorWidgetWrapper.html",
        "description": "A settings editor widget wrapper for enum settings as PyQgsSettingsEntryEnumFlag"
      },
      {
        "node_name": "QgsSettingsBoolCheckBoxWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSettingsBoolCheckBoxWrapper.html",
        "description": "This class is a factory of editor for boolean settings with a checkbox"
      },
      {
        "node_name": "QgsSettingsColorButtonWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSettingsColorButtonWrapper.html",
        "description": "This class is a factory of editor for color settings with a color button"
      },
      {
        "node_name": "QgsSettingsDoubleSpinBoxWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSettingsDoubleSpinBoxWrapper.html",
        "description": "This class is a factory of editor for double settings with a double spin"
      },
      {
        "node_name": "QgsSettingsEditorWidgetRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSettingsEditorWidgetRegistry.html",
        "description": "This class manages editor widgets for settings"
      },
      {
        "node_name": "QgsSettingsEditorWidgetWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSettingsEditorWidgetWrapper.html",
        "description": "Base class for settings editor wrappers"
      },
      {
        "node_name": "QgsSettingsEditorWidgetWrapperTemplateQgsSettingsEntryBoolQCheckBoxboolBase",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSettingsEditorWidgetWrapperTemplateQgsSettingsEntryBoolQCheckBoxboolBase.html",
        "description": "This class is a base factory of editor for settings"
      },
      {
        "node_name": "QgsSettingsEditorWidgetWrapperTemplateQgsSettingsEntryColorQgsColorButtonQColorBase",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSettingsEditorWidgetWrapperTemplateQgsSettingsEntryColorQgsColorButtonQColorBase.html",
        "description": "This class is a base factory of editor for settings"
      },
      {
        "node_name": "QgsSettingsEditorWidgetWrapperTemplateQgsSettingsEntryDoubleQDoubleSpinBoxdoubleBase",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSettingsEditorWidgetWrapperTemplateQgsSettingsEntryDoubleQDoubleSpinBoxdoubleBase.html",
        "description": "This class is a base factory of editor for settings"
      },
      {
        "node_name": "QgsSettingsEditorWidgetWrapperTemplateQgsSettingsEntryIntegerQSpinBoxintBase",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSettingsEditorWidgetWrapperTemplateQgsSettingsEntryIntegerQSpinBoxintBase.html",
        "description": "This class is a base factory of editor for settings"
      },
      {
        "node_name": "QgsSettingsEditorWidgetWrapperTemplateQgsSettingsEntryStringQComboBoxQStringBase",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSettingsEditorWidgetWrapperTemplateQgsSettingsEntryStringQComboBoxQStringBase.html",
        "description": "This class is a base factory of editor for settings"
      },
      {
        "node_name": "QgsSettingsEditorWidgetWrapperTemplateQgsSettingsEntryStringQLineEditQStringBase",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSettingsEditorWidgetWrapperTemplateQgsSettingsEntryStringQLineEditQStringBase.html",
        "description": "This class is a base factory of editor for settings"
      },
      {
        "node_name": "QgsSettingsIntegerSpinBoxWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSettingsIntegerSpinBoxWrapper.html",
        "description": "This class is a factory of editor for integer settings with a spin box"
      },
      {
        "node_name": "QgsSettingsRegistryGui",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSettingsRegistryGui.html",
        "description": "is used for settings introspection and collects allQgsSettingsEntryinstances of gui."
      },
      {
        "node_name": "QgsSettingsStringComboBoxWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSettingsStringComboBoxWrapper.html",
        "description": "This class is a factory of editor for string settings with a combo box"
      },
      {
        "node_name": "QgsSettingsStringLineEditWrapper",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSettingsStringLineEditWrapper.html",
        "description": "This class is a factory of editor for string settings with a line edit"
      },
      {
        "node_name": "QgsSettingsTreeModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSettingsTreeModel.html",
        "description": "is a tree model for the settings tree."
      },
      {
        "node_name": "QgsSettingsTreeProxyModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSettingsTreeProxyModel.html",
        "description": "allows filtering the settings tree"
      },
      {
        "node_name": "QgsSettingsTreeWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSettingsTreeWidget.html",
        "description": "is a widget with the settings tree to visualize, search and edit settings"
      },
      {
        "node_name": "CharacterWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/CharacterWidget.html",
        "description": "A widget for displaying characters available in a preset font, and allowing users to select an individual character."
      },
      {
        "node_name": "Qgs25DRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/Qgs25DRendererWidget.html",
        "description": "param layer:the layer where this renderer is applied :param style:  :param renderer: the mask renderer (will not take ownership)"
      },
      {
        "node_name": "QgsAnimatedMarkerSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAnimatedMarkerSymbolLayerWidget.html",
        "description": "Widget for configuringQgsAnimatedMarkerSymbolLayersymbol layers."
      },
      {
        "node_name": "QgsArrowSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsArrowSymbolLayerWidget.html",
        "description": "param layer:the layer where this symbol layer is applied :param parent: the parent widget"
      },
      {
        "node_name": "QgsBrushStyleComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsBrushStyleComboBox.html",
        "description": ""
      },
      {
        "node_name": "QgsCategorizedSymbolRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCategorizedSymbolRendererWidget.html",
        "description": ""
      },
      {
        "node_name": "QgsCentroidFillSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCentroidFillSymbolLayerWidget.html",
        "description": "Constructor for QgsCentroidFillSymbolLayerWidget."
      },
      {
        "node_name": "QgsCptCityColorRampDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsCptCityColorRampDialog.html",
        "description": "A dialog which allows users to modify the properties of aQgsCptCityColorRamp."
      },
      {
        "node_name": "QgsDashSpaceDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDashSpaceDialog.html",
        "description": "A dialog to enter a custom dash space pattern for lines"
      },
      {
        "node_name": "QgsDashSpaceWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDashSpaceWidget.html",
        "description": "A widget to enter a custom dash space pattern for lines"
      },
      {
        "node_name": "QgsDataDefinedRotationDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDataDefinedRotationDialog.html",
        "description": ""
      },
      {
        "node_name": "QgsDataDefinedSizeDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDataDefinedSizeDialog.html",
        "description": ""
      },
      {
        "node_name": "QgsDataDefinedSizeLegendWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDataDefinedSizeLegendWidget.html",
        "description": "Widget for configuration of appearance of legend for marker symbols with data-defined size."
      },
      {
        "node_name": "QgsDataDefinedValueDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDataDefinedValueDialog.html",
        "description": "Utility classes for “en masse” size definition."
      },
      {
        "node_name": "QgsDataDefinedWidthDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsDataDefinedWidthDialog.html",
        "description": ""
      },
      {
        "node_name": "QgsEllipseSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsEllipseSymbolLayerWidget.html",
        "description": "Constructor for QgsEllipseSymbolLayerWidget."
      },
      {
        "node_name": "QgsEmbeddedSymbolRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsEmbeddedSymbolRendererWidget.html",
        "description": "A widget used represent options of aQgsEmbeddedSymbolRenderer"
      },
      {
        "node_name": "QgsFilledLineSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFilledLineSymbolLayerWidget.html",
        "description": "A widget for configuringQgsFilledLineSymbolLayer."
      },
      {
        "node_name": "QgsFilledMarkerSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFilledMarkerSymbolLayerWidget.html",
        "description": "Widget for configuringQgsFilledMarkerSymbolLayersymbol layers."
      },
      {
        "node_name": "QgsFontMarkerSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFontMarkerSymbolLayerWidget.html",
        "description": "Constructor for QgsFontMarkerSymbolLayerWidget."
      },
      {
        "node_name": "QgsGeometryGeneratorSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsGeometryGeneratorSymbolLayerWidget.html",
        "description": "Constructor for QgsGeometryGeneratorSymbolLayerWidget."
      },
      {
        "node_name": "QgsGradientFillSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsGradientFillSymbolLayerWidget.html",
        "description": "Constructor for QgsGradientFillSymbolLayerWidget."
      },
      {
        "node_name": "QgsGraduatedHistogramWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsGraduatedHistogramWidget.html",
        "description": "Graphical histogram for displaying distribution of field values and editing range breaks for aQgsGraduatedSymbolRendererrenderer."
      },
      {
        "node_name": "QgsGraduatedSymbolRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsGraduatedSymbolRendererWidget.html",
        "description": ""
      },
      {
        "node_name": "QgsHashedLineSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsHashedLineSymbolLayerWidget.html",
        "description": "Widget for controlling the properties of aQgsHashedLineSymbolLayer."
      },
      {
        "node_name": "QgsHeatmapRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsHeatmapRendererWidget.html",
        "description": "param layer:the layer where this renderer is applied :param style:  :param renderer: the mask renderer (will not take ownership)"
      },
      {
        "node_name": "QgsInterpolatedLineSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsInterpolatedLineSymbolLayerWidget.html",
        "description": ""
      },
      {
        "node_name": "QgsInvertedPolygonRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsInvertedPolygonRendererWidget.html",
        "description": "A widget used represent options of aQgsInvertedPolygonRenderer"
      },
      {
        "node_name": "QgsLayerPropertiesWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLayerPropertiesWidget.html",
        "description": "A widget which allows configuration of the properties of a singleQgsSymbolLayer."
      },
      {
        "node_name": "QgsLinePatternFillSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLinePatternFillSymbolLayerWidget.html",
        "description": "Constructor for QgsLinePatternFillSymbolLayerWidget."
      },
      {
        "node_name": "QgsLinearReferencingSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLinearReferencingSymbolLayerWidget.html",
        "description": "Widget for controlling the properties of aQgsLinearReferencingSymbolLayer."
      },
      {
        "node_name": "QgsLineburstSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsLineburstSymbolLayerWidget.html",
        "description": "Widget for configuringQgsLineburstSymbolLayersymbol layers."
      },
      {
        "node_name": "QgsMarkerLineSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMarkerLineSymbolLayerWidget.html",
        "description": "Constructor for QgsMarkerLineSymbolLayerWidget."
      },
      {
        "node_name": "QgsMaskMarkerSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMaskMarkerSymbolLayerWidget.html",
        "description": "Symbol layer widget for the handling ofQgsMaskMarkerSymbolLayer."
      },
      {
        "node_name": "QgsMergedFeatureRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsMergedFeatureRendererWidget.html",
        "description": "A widget used represent options of aQgsMergedFeatureRenderer"
      },
      {
        "node_name": "QgsNullSymbolRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsNullSymbolRendererWidget.html",
        "description": "Blank widget for customizingQgsNullSymbolRenderer."
      },
      {
        "node_name": "QgsPenCapStyleComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPenCapStyleComboBox.html",
        "description": ""
      },
      {
        "node_name": "QgsPenJoinStyleComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPenJoinStyleComboBox.html",
        "description": ""
      },
      {
        "node_name": "QgsPenStyleComboBox",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPenStyleComboBox.html",
        "description": ""
      },
      {
        "node_name": "QgsPointClusterRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPointClusterRendererWidget.html",
        "description": "A widget which allows configuration of the properties for aQgsPointClusterRenderer."
      },
      {
        "node_name": "QgsPointDisplacementRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPointDisplacementRendererWidget.html",
        "description": ""
      },
      {
        "node_name": "QgsPointPatternFillSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsPointPatternFillSymbolLayerWidget.html",
        "description": "Constructor for QgsPointPatternFillSymbolLayerWidget."
      },
      {
        "node_name": "QgsRandomMarkerFillSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRandomMarkerFillSymbolLayerWidget.html",
        "description": "Widget for controlling the properties of aQgsRandomMarkerFillSymbolLayer."
      },
      {
        "node_name": "QgsRasterFillSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRasterFillSymbolLayerWidget.html",
        "description": "Constructor for QgsRasterFillSymbolLayerWidget."
      },
      {
        "node_name": "QgsRasterLineSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRasterLineSymbolLayerWidget.html",
        "description": "Widget for configuringQgsRasterLineSymbolLayersymbol layers."
      },
      {
        "node_name": "QgsRasterMarkerSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRasterMarkerSymbolLayerWidget.html",
        "description": "Widget for configuringQgsRasterMarkerSymbolLayersymbol layers."
      },
      {
        "node_name": "QgsRendererPropertiesDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRendererPropertiesDialog.html",
        "description": "Constructor for QgsRendererPropertiesDialog."
      },
      {
        "node_name": "QgsRendererRulePropsDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRendererRulePropsDialog.html",
        "description": "Constructor for QgsRendererRulePropsDialog"
      },
      {
        "node_name": "QgsRendererRulePropsWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRendererRulePropsWidget.html",
        "description": "Widget to edit the details of a rule based renderer rule."
      },
      {
        "node_name": "QgsRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRendererWidget.html",
        "description": "Base class for renderer settings widgets."
      },
      {
        "node_name": "QgsRuleBasedRendererModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRuleBasedRendererModel.html",
        "description": "Tree model for the rules:"
      },
      {
        "node_name": "QgsRuleBasedRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsRuleBasedRendererWidget.html",
        "description": ""
      },
      {
        "node_name": "QgsSVGFillSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSVGFillSymbolLayerWidget.html",
        "description": "Constructor for QgsSVGFillSymbolLayerWidget."
      },
      {
        "node_name": "QgsShapeburstFillSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsShapeburstFillSymbolLayerWidget.html",
        "description": "Constructor for QgsShapeburstFillSymbolLayerWidget."
      },
      {
        "node_name": "QgsSimpleFillSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSimpleFillSymbolLayerWidget.html",
        "description": "Constructor for QgsSimpleFillSymbolLayerWidget."
      },
      {
        "node_name": "QgsSimpleLineSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSimpleLineSymbolLayerWidget.html",
        "description": "Constructor for QgsSimpleLineSymbolLayerWidget."
      },
      {
        "node_name": "QgsSimpleMarkerSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSimpleMarkerSymbolLayerWidget.html",
        "description": "Constructor for QgsSimpleMarkerSymbolLayerWidget."
      },
      {
        "node_name": "QgsSingleSymbolRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSingleSymbolRendererWidget.html",
        "description": ""
      },
      {
        "node_name": "QgsSmartGroupCondition",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSmartGroupCondition.html",
        "description": ""
      },
      {
        "node_name": "QgsSmartGroupEditorDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSmartGroupEditorDialog.html",
        "description": ""
      },
      {
        "node_name": "QgsStyleExportImportDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsStyleExportImportDialog.html",
        "description": "Constructor for QgsStyleExportImportDialog, with the specifiedparentwidget."
      },
      {
        "node_name": "QgsStyleGroupSelectionDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsStyleGroupSelectionDialog.html",
        "description": ""
      },
      {
        "node_name": "QgsStyleManagerDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsStyleManagerDialog.html",
        "description": "A dialog allowing users to customize and populate aQgsStyle."
      },
      {
        "node_name": "QgsStyleSaveDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsStyleSaveDialog.html",
        "description": "a dialog for setting properties of a newly saved style."
      },
      {
        "node_name": "QgsSvgMarkerSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSvgMarkerSymbolLayerWidget.html",
        "description": "Constructor for QgsSvgMarkerSymbolLayerWidget."
      },
      {
        "node_name": "QgsSvgSelectorDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSvgSelectorDialog.html",
        "description": "Constructor for QgsSvgSelectorDialog."
      },
      {
        "node_name": "QgsSvgSelectorFilterModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSvgSelectorFilterModel.html",
        "description": "A model for displaying SVG files with a preview icon which can be filtered by file name. Population of the model is performed in a background thread to ensure that initial creation of the model is responsive and does not block the GUI."
      },
      {
        "node_name": "QgsSvgSelectorGroupsModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSvgSelectorGroupsModel.html",
        "description": "A model for displaying SVG search paths. Population of the model is performed in a background thread to ensure that initial creation of the model is responsive and does not block the GUI."
      },
      {
        "node_name": "QgsSvgSelectorListModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSvgSelectorListModel.html",
        "description": "A model for displaying SVG files with a preview icon. Population of the model is performed in a background thread to ensure that initial creation of the model is responsive and does not block the GUI."
      },
      {
        "node_name": "QgsSvgSelectorWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSvgSelectorWidget.html",
        "description": "A widget allowing selection of an SVG file, and configuration of SVG related parameters."
      },
      {
        "node_name": "QgsSymbolAnimationSettingsDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSymbolAnimationSettingsDialog.html",
        "description": "A dialog for customising animation settings for a symbol."
      },
      {
        "node_name": "QgsSymbolAnimationSettingsWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSymbolAnimationSettingsWidget.html",
        "description": "A widget for customising animation settings for a symbol."
      },
      {
        "node_name": "QgsSymbolBufferSettingsDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSymbolBufferSettingsDialog.html",
        "description": "A dialog for customising buffer settings for a symbol."
      },
      {
        "node_name": "QgsSymbolBufferSettingsWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSymbolBufferSettingsWidget.html",
        "description": "A widget for customising buffer settings for a symbol."
      },
      {
        "node_name": "QgsSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSymbolLayerWidget.html",
        "description": "Constructor for QgsSymbolLayerWidget."
      },
      {
        "node_name": "QgsSymbolLevelsDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSymbolLevelsDialog.html",
        "description": "A dialog which allows the user to modify the rendering order of symbol layers."
      },
      {
        "node_name": "QgsSymbolLevelsWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSymbolLevelsWidget.html",
        "description": "A widget which allows the user to modify the rendering order of symbol layers."
      },
      {
        "node_name": "QgsSymbolSelectorDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSymbolSelectorDialog.html",
        "description": "A dialog that can be used to select and build a symbol."
      },
      {
        "node_name": "QgsSymbolSelectorWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSymbolSelectorWidget.html",
        "description": "Symbol selector widget that can be used to select and build a symbol"
      },
      {
        "node_name": "QgsSymbolWidgetContext",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSymbolWidgetContext.html",
        "description": "Contains settings which reflect the context in which a symbol (or renderer) widget is shown, e.g., the map canvas and relevant expression contexts."
      },
      {
        "node_name": "QgsSymbolsListWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsSymbolsListWidget.html",
        "description": "Constructor for QgsSymbolsListWidget."
      },
      {
        "node_name": "QgsVectorFieldSymbolLayerWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsVectorFieldSymbolLayerWidget.html",
        "description": "Constructor for QgsVectorFieldSymbolLayerWidget."
      },
      {
        "node_name": "QgsTableEditorDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTableEditorDialog.html",
        "description": "A reusable window for editing simple spreadsheet-style tables."
      },
      {
        "node_name": "QgsTableEditorWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTableEditorWidget.html",
        "description": "A reusable widget for editing simple spreadsheet-style tables."
      },
      {
        "node_name": "QgsTiledSceneRendererPropertiesWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTiledSceneRendererPropertiesWidget.html",
        "description": "A generic widget for setting the 2D renderer for a tiled scene layer."
      },
      {
        "node_name": "QgsTiledSceneRendererWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsTiledSceneRendererWidget.html",
        "description": "Base class for tiled scene 2D renderer settings widgets."
      },
      {
        "node_name": "QgsAbstractHistoryProvider",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsAbstractHistoryProvider.html",
        "description": "Abstract base class for objects which track user history (i.e. operations performed through the GUI)."
      },
      {
        "node_name": "QgsHistoryEntry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsHistoryEntry.html",
        "description": "Encapsulates a history entry."
      },
      {
        "node_name": "QgsHistoryEntryGroup",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsHistoryEntryGroup.html",
        "description": "Base class for history entry “group” nodes, which contain children of their own."
      },
      {
        "node_name": "QgsHistoryEntryModel",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsHistoryEntryModel.html",
        "description": "An item model representing history entries in a hierarchical tree structure."
      },
      {
        "node_name": "QgsHistoryEntryNode",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsHistoryEntryNode.html",
        "description": "Base class for nodes representing aQgsHistoryEntry."
      },
      {
        "node_name": "QgsHistoryProviderRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsHistoryProviderRegistry.html",
        "description": "TheQgsHistoryProviderRegistryis a registry for objects which track user history (i.e. operations performed through the GUI)."
      },
      {
        "node_name": "QgsHistoryWidget",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsHistoryWidget.html",
        "description": "A widget showing entries from aQgsHistoryProviderRegistry."
      },
      {
        "node_name": "QgsHistoryWidgetContext",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsHistoryWidgetContext.html",
        "description": "Contains settings which reflect the context in which a history widget is shown, e.g., an associated message bar."
      },
      {
        "node_name": "QgsFieldCalculator",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsFieldCalculator.html",
        "description": "A dialog class that provides calculation of new fields using existing fields, values and a set of operators"
      },
      {
        "node_name": "QgsVectorLayerProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsVectorLayerProperties.html",
        "description": ""
      },
      {
        "node_name": "QgsVectorTileLayerProperties",
        "node_url": "https://qgis.org/pyqgis/3.40/gui/QgsVectorTileLayerProperties.html",
        "description": "Vectortile layer properties dialog"
      }
    ]
  },
  {
    "category_name": "analysis",
    "category_url": "https://qgis.org/pyqgis/3.40/analysis/index.html",
    "nodes": [
      {
        "node_name": "QgsAlignRasterData",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsAlignRasterData.html",
        "description": "TheQgsAlignRasterDataclass provides data structures and enums for align raster tool."
      },
      {
        "node_name": "QgsAnalysis",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsAnalysis.html",
        "description": "is a singleton class containing various registry and other global members related to analysis classes."
      },
      {
        "node_name": "QgsFeaturePool",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsFeaturePool.html",
        "description": "A feature pool is based on a vector layer and caches features."
      },
      {
        "node_name": "QgsGeometryCheck",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGeometryCheck.html",
        "description": "This class implements a geometry check."
      },
      {
        "node_name": "QgsGeometryCheckContext",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGeometryCheckContext.html",
        "description": "Base configuration for geometry checks."
      },
      {
        "node_name": "QgsGeometryCheckError",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGeometryCheckError.html",
        "description": "This represents an error reported by a geometry check."
      },
      {
        "node_name": "QgsGeometryCheckErrorSingle",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGeometryCheckErrorSingle.html",
        "description": "Wraps aQgsSingleGeometryErrorinto a standardQgsGeometryCheckError. The single error can be obtained via singleError."
      },
      {
        "node_name": "QgsGeometryCheckFactory",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGeometryCheckFactory.html",
        "description": "A factory for geometry checks."
      },
      {
        "node_name": "QgsGeometryCheckRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGeometryCheckRegistry.html",
        "description": "This class manages all known geometry check factories."
      },
      {
        "node_name": "QgsGeometryCheckResolutionMethod",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGeometryCheckResolutionMethod.html",
        "description": "This class implements a resolution for problems detected in geometry checks."
      },
      {
        "node_name": "QgsGeometryCheckerUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGeometryCheckerUtils.html",
        "description": "Contains utilities required for geometry checks."
      },
      {
        "node_name": "QgsSingleGeometryCheck",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsSingleGeometryCheck.html",
        "description": "Base class for geometry checks for a single geometry without any context of the layer or other layers in the project. Classic examples are validity checks like self-intersection."
      },
      {
        "node_name": "QgsSingleGeometryCheckError",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsSingleGeometryCheckError.html",
        "description": "An error from aQgsSingleGeometryCheck."
      },
      {
        "node_name": "QgsGcpGeometryTransformer",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGcpGeometryTransformer.html",
        "description": "A geometry transformer which uses an underlying Ground Control Points (GCP) based transformation to modify geometries."
      },
      {
        "node_name": "QgsGcpPoint",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGcpPoint.html",
        "description": "Contains properties of a ground control point (GCP)."
      },
      {
        "node_name": "QgsGcpTransformerInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGcpTransformerInterface.html",
        "description": "An interface for Ground Control Points (GCP) based transformations."
      },
      {
        "node_name": "QgsVectorWarper",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsVectorWarper.html",
        "description": "Vector layer warper which warps vector layers based on a list of source and destination GCPs."
      },
      {
        "node_name": "QgsVectorWarperTask",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsVectorWarperTask.html",
        "description": "A task for warping a vector layer in a background thread."
      },
      {
        "node_name": "QgsGridFileWriter",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGridFileWriter.html",
        "description": "A class that does interpolation to a grid and writes the results to an ascii grid."
      },
      {
        "node_name": "QgsIDWInterpolator",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsIDWInterpolator.html",
        "description": "Inverse distance weight interpolator."
      },
      {
        "node_name": "QgsInterpolator",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsInterpolator.html",
        "description": "Interface class for interpolations."
      },
      {
        "node_name": "QgsInterpolatorVertexData",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsInterpolatorVertexData.html",
        "description": "Interpolation data for an individual source vertex."
      },
      {
        "node_name": "QgsTinInterpolator",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsTinInterpolator.html",
        "description": "Interpolation in a triangular irregular network"
      },
      {
        "node_name": "QgsMeshContours",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsMeshContours.html",
        "description": "Exporter of contours lines or polygons from a mesh layer."
      },
      {
        "node_name": "QgsMeshEditingDelaunayTriangulation",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsMeshEditingDelaunayTriangulation.html",
        "description": "Class that can be used withQgsMeshEditor.advancedEdit()to add triangle faces to a mesh created by a Delaunay triangulation on provided existing vertex."
      },
      {
        "node_name": "QgsMeshTriangulation",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsMeshTriangulation.html",
        "description": "Class that handles mesh creation with Delaunay constrained triangulation"
      },
      {
        "node_name": "QgsMeshZValueDatasetGroup",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsMeshZValueDatasetGroup.html",
        "description": "Convenient class that can be used to obtain a datasetgroup on vertices that represents the Z value of the mesh vertices"
      },
      {
        "node_name": "QgsGraph",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGraph.html",
        "description": "Mathematical graph representation"
      },
      {
        "node_name": "QgsGraphAnalyzer",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGraphAnalyzer.html",
        "description": "This class performs graph analysis, e.g. calculates shortest path between two points using different strategies with Dijkstra algorithm"
      },
      {
        "node_name": "QgsGraphBuilder",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGraphBuilder.html",
        "description": "This class used for making theQgsGraphobject"
      },
      {
        "node_name": "QgsGraphBuilderInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGraphBuilderInterface.html",
        "description": "Determine interface for creating a graph. Contains the settings of the graph.QgsGraphBuilderandQgsGraphDirectorboth use a “builder” design pattern"
      },
      {
        "node_name": "QgsGraphDirector",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGraphDirector.html",
        "description": "Determine making the graph.QgsGraphBuilderandQgsGraphDirectorimplemented using “builder” design patter."
      },
      {
        "node_name": "QgsGraphEdge",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGraphEdge.html",
        "description": "This class implements a graph edge"
      },
      {
        "node_name": "QgsGraphVertex",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGraphVertex.html",
        "description": "This class implements a graph vertex"
      },
      {
        "node_name": "QgsNetworkDistanceStrategy",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsNetworkDistanceStrategy.html",
        "description": "Strategy for calculating edge cost based on its length. Should be used for finding shortest path between two points."
      },
      {
        "node_name": "QgsNetworkSpeedStrategy",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsNetworkSpeedStrategy.html",
        "description": "Strategy for calculating edge cost based on travel time. Should be used for finding fastest path between two points."
      },
      {
        "node_name": "QgsNetworkStrategy",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsNetworkStrategy.html",
        "description": "defines strategy used for calculation of the edge cost. For example it can take into account travel distance, amount of time or money. Currently there are two strategies implemented in the analysis library:QgsNetworkDistanceStrategyandQgsNetworkSpeedStrategy.QgsNetworkStrategyimplemented using “strategy” design pattern."
      },
      {
        "node_name": "QgsVectorLayerDirector",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsVectorLayerDirector.html",
        "description": "Determine making the graph from vector line layer"
      },
      {
        "node_name": "QgsBatchGeocodeAlgorithm",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsBatchGeocodeAlgorithm.html",
        "description": "A base class for batch geocoder algorithms, which takes aQgsGeocoderInterfaceobject and exposes it as a Processing algorithm for batch geocoding operations."
      },
      {
        "node_name": "QgsNativeAlgorithms",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsNativeAlgorithms.html",
        "description": "Native c++ processing algorithm provider."
      },
      {
        "node_name": "QgsAlignRaster",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsAlignRaster.html",
        "description": "takes one or more raster layers and warps (resamples) them so they have the same:"
      },
      {
        "node_name": "QgsAspectFilter",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsAspectFilter.html",
        "description": "Calculates aspect values in a window of 3x3 cells based on first order derivatives in x- and y- directions."
      },
      {
        "node_name": "QgsDerivativeFilter",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsDerivativeFilter.html",
        "description": "Adds the ability to calculate derivatives in x- and y-directions."
      },
      {
        "node_name": "QgsExifTools",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsExifTools.html",
        "description": "Contains utilities for working with EXIF tags in images."
      },
      {
        "node_name": "QgsHillshadeFilter",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsHillshadeFilter.html",
        "description": "A hillshade filter."
      },
      {
        "node_name": "QgsKernelDensityEstimation",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsKernelDensityEstimation.html",
        "description": "Performs Kernel Density Estimation (“heatmap”) calculations on a vector layer."
      },
      {
        "node_name": "QgsNineCellFilter",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsNineCellFilter.html",
        "description": "Base class for raster analysis methods that work with a 3x3 cell filter and calculate the value of each cell based on the cell value and the eight neighbour cells."
      },
      {
        "node_name": "QgsRasterCalcNode",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsRasterCalcNode.html",
        "description": "Represents a node in a raster calculator."
      },
      {
        "node_name": "QgsRasterCalculator",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsRasterCalculator.html",
        "description": "Performs raster layer calculations."
      },
      {
        "node_name": "QgsRasterCalculatorEntry",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsRasterCalculatorEntry.html",
        "description": "Represents an individual raster layer/band number entry within a raster calculation."
      },
      {
        "node_name": "QgsRasterMatrix",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsRasterMatrix.html",
        "description": "Represents a matrix in a raster calculator operation."
      },
      {
        "node_name": "QgsRelief",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsRelief.html",
        "description": "Produces colored relief rasters from DEM."
      },
      {
        "node_name": "QgsRuggednessFilter",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsRuggednessFilter.html",
        "description": "Calculates the ruggedness index based on a 3x3 moving window."
      },
      {
        "node_name": "QgsSlopeFilter",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsSlopeFilter.html",
        "description": "Calculates slope values in a window of 3x3 cells based on first order derivatives in x- and y- directions."
      },
      {
        "node_name": "QgsTotalCurvatureFilter",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsTotalCurvatureFilter.html",
        "description": "Calculates total curvature as described by Wilson, Gallant (2000): terrain analysis."
      },
      {
        "node_name": "QgsGeometrySnapper",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGeometrySnapper.html",
        "description": "allows a geometry to be snapped to the geometries within a different reference layer. Vertices in the geometries will be modified to match the reference layer features within a specified snap tolerance."
      },
      {
        "node_name": "QgsGeometrySnapperSingleSource",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsGeometrySnapperSingleSource.html",
        "description": "Makes sure that any two vertices of the vector layer are at least at distance given by the threshold value."
      },
      {
        "node_name": "QgsInternalGeometrySnapper",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsInternalGeometrySnapper.html",
        "description": "allows a set of geometries to be snapped to each other. It can be used to close gaps in layers."
      },
      {
        "node_name": "QgsZonalStatistics",
        "node_url": "https://qgis.org/pyqgis/3.40/analysis/QgsZonalStatistics.html",
        "description": "A class that calculates raster statistics (count, sum, mean) for a polygon or multipolygon layer and appends the results as attributes."
      }
    ]
  },
  {
    "category_name": "server",
    "category_url": "https://qgis.org/pyqgis/3.40/server/index.html",
    "nodes": [
      {
        "node_name": "QgsAccessControl",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsAccessControl.html",
        "description": "A helper class that centralizes restrictions given by all the access control filter plugins."
      },
      {
        "node_name": "QgsAccessControlFilter",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsAccessControlFilter.html",
        "description": "Class defining access control interface for QGIS Server plugins."
      },
      {
        "node_name": "QgsBufferServerRequest",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsBufferServerRequest.html",
        "description": "Class defining request with data"
      },
      {
        "node_name": "QgsBufferServerResponse",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsBufferServerResponse.html",
        "description": "Class defining buffered response"
      },
      {
        "node_name": "QgsCapabilitiesCache",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsCapabilitiesCache.html",
        "description": "A cache for capabilities xml documents (by configuration file path)"
      },
      {
        "node_name": "QgsConfigCache",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsConfigCache.html",
        "description": "Cache for server configuration."
      },
      {
        "node_name": "QgsFcgiServerRequest",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsFcgiServerRequest.html",
        "description": "Class defining fcgi request"
      },
      {
        "node_name": "QgsFeatureFilter",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsFeatureFilter.html",
        "description": "A feature filter provider allowing to set filter expressions on a per-layer basis."
      },
      {
        "node_name": "QgsFeatureFilterProviderGroup",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsFeatureFilterProviderGroup.html",
        "description": "A filter filter provider grouping several filter providers."
      },
      {
        "node_name": "QgsOgcServiceException",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsOgcServiceException.html",
        "description": "Exception base class for service exceptions."
      },
      {
        "node_name": "QgsRequestHandler",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsRequestHandler.html",
        "description": "This class is an interface hiding the details of reading input and writing output from/to a wms request mechanism."
      },
      {
        "node_name": "QgsServer",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServer.html",
        "description": "TheQgsServerclass provides OGC web services."
      },
      {
        "node_name": "QgsServerApi",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerApi.html",
        "description": "Server generic API endpoint abstract base class."
      },
      {
        "node_name": "QgsServerApiBadRequestException",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerApiBadRequestException.html",
        "description": ""
      },
      {
        "node_name": "QgsServerApiContext",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerApiContext.html",
        "description": "TheQgsServerApiContextclass encapsulates the resources for a particular client request: the request and response objects, the project (might be NULL) and the server interface, the API root path that matched the request is also added."
      },
      {
        "node_name": "QgsServerApiInternalServerError",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerApiInternalServerError.html",
        "description": ""
      },
      {
        "node_name": "QgsServerApiUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerApiUtils.html",
        "description": "TheQgsServerApiUtilsclass contains helper functions to handle common API operations."
      },
      {
        "node_name": "QgsServerCacheFilter",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerCacheFilter.html",
        "description": "Class defining cache interface for QGIS Server plugins."
      },
      {
        "node_name": "QgsServerCacheManager",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerCacheManager.html",
        "description": "A helper class that centralizes caches accesses given by all the server cache filter plugins."
      },
      {
        "node_name": "QgsServerException",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerException.html",
        "description": "Exception base class for server exceptions."
      },
      {
        "node_name": "QgsServerFeatureId",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerFeatureId.html",
        "description": ""
      },
      {
        "node_name": "QgsServerFilter",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerFilter.html",
        "description": "Class defining I/O filters for QGIS Server and implemented in plugins."
      },
      {
        "node_name": "QgsServerInterface",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerInterface.html",
        "description": "Class defining interfaces exposed by QGIS Server and made available to plugins."
      },
      {
        "node_name": "QgsServerLogger",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerLogger.html",
        "description": "Writes message log into server logfile"
      },
      {
        "node_name": "QgsServerOgcApi",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerOgcApi.html",
        "description": "QGIS Server OGC API endpoint.QgsServerOgcApiprovides the foundation for the new generation of REST-API based OGC services (e.g. WFS3)."
      },
      {
        "node_name": "QgsServerOgcApiHandler",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerOgcApiHandler.html",
        "description": "TheQgsServerOgcApiHandlerabstract class represents a OGC API handler to be registered inQgsServerOgcApiclass."
      },
      {
        "node_name": "QgsServerParameter",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerParameter.html",
        "description": "Parameter common to all services (WMS, WFS, …)"
      },
      {
        "node_name": "QgsServerParameterDefinition",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerParameterDefinition.html",
        "description": "Definition of a parameter with basic conversion methods"
      },
      {
        "node_name": "QgsServerParameters",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerParameters.html",
        "description": "provides an interface to retrieve and manipulate global parameters received from the client."
      },
      {
        "node_name": "QgsServerProjectUtils",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerProjectUtils.html",
        "description": ""
      },
      {
        "node_name": "QgsServerQueryStringParameter",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerQueryStringParameter.html",
        "description": "TheQgsServerQueryStringParameterclass holds the information regarding a query string input parameter and its validation."
      },
      {
        "node_name": "QgsServerRequest",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerRequest.html",
        "description": "Class defining request interface passed to servicesQgsService.executeRequest()method"
      },
      {
        "node_name": "QgsServerResponse",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerResponse.html",
        "description": ""
      },
      {
        "node_name": "QgsServerSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerSettings.html",
        "description": "Provides a way to retrieve settings by prioritizing according to environment variables, ini file and default values."
      },
      {
        "node_name": "QgsServerSettingsEnv",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerSettingsEnv.html",
        "description": "Provides some enum describing the environment currently supported for configuration."
      },
      {
        "node_name": "QgsServerStaticHandler",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServerStaticHandler.html",
        "description": "TheQgsServerStaticHandlerclass serves static files from the static path (resources/server/api/wfs3/static)"
      },
      {
        "node_name": "QgsService",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsService.html",
        "description": "Class defining interfaces for QGIS server"
      },
      {
        "node_name": "QgsServiceModule",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServiceModule.html",
        "description": "Class defining the service module interface for QGIS server services"
      },
      {
        "node_name": "QgsServiceRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsServiceRegistry.html",
        "description": "Class defining the registry manager for QGIS server services"
      },
      {
        "node_name": "QgsStoreBadLayerInfo",
        "node_url": "https://qgis.org/pyqgis/3.40/server/QgsStoreBadLayerInfo.html",
        "description": "Stores layer ids of bad layers"
      }
    ]
  },
  {
    "category_name": "processing",
    "category_url": "https://qgis.org/pyqgis/3.40/processing/index.html",
    "nodes": [
      {
        "node_name": "ProcessingAlgFactory",
        "node_url": "https://qgis.org/pyqgis/3.40/processing/ProcessingAlgFactory.html",
        "description": ""
      },
      {
        "node_name": "alg",
        "node_url": "https://qgis.org/pyqgis/3.40/processing/alg.html",
        "description": ""
      },
      {
        "node_name": "algorithmHelp",
        "node_url": "https://qgis.org/pyqgis/3.40/processing/algorithmHelp.html",
        "description": "Prints algorithm parameters with their types. Also     provides information about parameters and outputs,     and their acceptable values."
      },
      {
        "node_name": "createAlgorithmDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/processing/createAlgorithmDialog.html",
        "description": "Creates and returns an algorithm dialog for the specified algorithm, prepopulated     with a given set of parameters. It is the caller’s responsibility to execute     and delete this dialog."
      },
      {
        "node_name": "createContext",
        "node_url": "https://qgis.org/pyqgis/3.40/processing/createContext.html",
        "description": "Creates a default processing context"
      },
      {
        "node_name": "execAlgorithmDialog",
        "node_url": "https://qgis.org/pyqgis/3.40/processing/execAlgorithmDialog.html",
        "description": "Executes an algorithm dialog for the specified algorithm, prepopulated     with a given set of parameters."
      },
      {
        "node_name": "run",
        "node_url": "https://qgis.org/pyqgis/3.40/processing/run.html",
        "description": "Executes given algorithm and returns its outputs as dictionary object."
      },
      {
        "node_name": "runAndLoadResults",
        "node_url": "https://qgis.org/pyqgis/3.40/processing/runAndLoadResults.html",
        "description": "Executes given algorithm and load its results into the current QGIS project     when possible."
      }
    ]
  },
  {
    "category_name": "_3d",
    "category_url": "https://qgis.org/pyqgis/3.40/_3d/index.html",
    "nodes": [
      {
        "node_name": "Qgs3D",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/Qgs3D.html",
        "description": "is a singleton class containing various registries and other global members related to 3D classes."
      },
      {
        "node_name": "Qgs3DMapCanvas",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/Qgs3DMapCanvas.html",
        "description": "is a convenience wrapper to simplify the creation of a 3D window ready to be used with QGIS."
      },
      {
        "node_name": "Qgs3DMapExportSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/Qgs3DMapExportSettings.html",
        "description": "Manages the various settings the user can choose from when exporting a 3D scene"
      },
      {
        "node_name": "Qgs3DMapScene",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/Qgs3DMapScene.html",
        "description": "Entity that encapsulates our 3D scene - contains all other entities (such as terrain) as children."
      },
      {
        "node_name": "Qgs3DMapSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/Qgs3DMapSettings.html",
        "description": "Definition of the world."
      },
      {
        "node_name": "Qgs3DTypes",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/Qgs3DTypes.html",
        "description": "Defines enumerations and other auxiliary types for QGIS 3D"
      },
      {
        "node_name": "QgsCameraController",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsCameraController.html",
        "description": "Object that controls camera movement based on user input"
      },
      {
        "node_name": "QgsCameraPose",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsCameraPose.html",
        "description": "Class that encapsulates camera pose in a 3D scene."
      },
      {
        "node_name": "QgsMaterialSettingsRenderingTechnique",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsMaterialSettingsRenderingTechnique.html",
        "description": "Material rendering techniques"
      },
      {
        "node_name": "QgsVectorLayer3DTilingSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsVectorLayer3DTilingSettings.html",
        "description": "This class defines configuration of how a vector layer gets tiled for 3D rendering."
      },
      {
        "node_name": "QgsAbstractVectorLayer3DRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsAbstractVectorLayer3DRenderer.html",
        "description": "Base class for 3D renderers that are based on vector layers."
      },
      {
        "node_name": "QgsPointCloudLayer3DRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsPointCloudLayer3DRenderer.html",
        "description": "3D renderer that renders all points from a point cloud layer"
      },
      {
        "node_name": "QgsRuleBased3DRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsRuleBased3DRenderer.html",
        "description": "Rule-based 3D renderer."
      },
      {
        "node_name": "QgsRuleBased3DRendererMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsRuleBased3DRendererMetadata.html",
        "description": "Metadata for rule-based 3D renderer to allow creation of its instances from XML"
      },
      {
        "node_name": "QgsTiledSceneLayer3DRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsTiledSceneLayer3DRenderer.html",
        "description": "3D renderer that renders content of a tiled scene layer"
      },
      {
        "node_name": "QgsTiledSceneLayer3DRendererMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsTiledSceneLayer3DRendererMetadata.html",
        "description": "Metadata for tiled scene layer 3D renderer to allow creation of its instances from XML"
      },
      {
        "node_name": "QgsVectorLayer3DRenderer",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsVectorLayer3DRenderer.html",
        "description": "3D renderer that renders all features of a vector layer with the same 3D symbol. The appearance is completely defined by the symbol."
      },
      {
        "node_name": "QgsVectorLayer3DRendererMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsVectorLayer3DRendererMetadata.html",
        "description": "Metadata for vector layer 3D renderer to allow creation of its instances from XML."
      },
      {
        "node_name": "QgsClassificationPointCloud3DSymbol",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsClassificationPointCloud3DSymbol.html",
        "description": "3D symbol that draws point cloud geometries as 3D objects using classification of the dataset"
      },
      {
        "node_name": "QgsColorRampPointCloud3DSymbol",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsColorRampPointCloud3DSymbol.html",
        "description": "3D symbol that draws point cloud geometries as 3D objects.using color ramp shader"
      },
      {
        "node_name": "QgsLine3DSymbol",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsLine3DSymbol.html",
        "description": "3D symbol that draws linestring geometries as planar polygons (created from lines using a buffer with given thickness)."
      },
      {
        "node_name": "QgsPoint3DSymbol",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsPoint3DSymbol.html",
        "description": "3D symbol that draws point geometries as 3D objects using one of the predefined shapes."
      },
      {
        "node_name": "QgsPointCloud3DSymbol",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsPointCloud3DSymbol.html",
        "description": "3D symbol that draws point cloud geometries as 3D objects."
      },
      {
        "node_name": "QgsPolygon3DSymbol",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsPolygon3DSymbol.html",
        "description": "3D symbol that draws polygon geometries as planar polygons, optionally extruded (with added walls)."
      },
      {
        "node_name": "QgsRgbPointCloud3DSymbol",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsRgbPointCloud3DSymbol.html",
        "description": "3D symbol that draws point cloud geometries as 3D objects using RGB colors in the dataset"
      },
      {
        "node_name": "QgsSingleColorPointCloud3DSymbol",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsSingleColorPointCloud3DSymbol.html",
        "description": "3D symbol that draws point cloud geometries as 3D objects.using one"
      },
      {
        "node_name": "QgsDirectionalLightSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsDirectionalLightSettings.html",
        "description": "Definition of a directional light in a 3D map scene"
      },
      {
        "node_name": "QgsLightSource",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsLightSource.html",
        "description": "Base class for light sources in 3d scenes."
      },
      {
        "node_name": "QgsPointLightSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsPointLightSettings.html",
        "description": "Definition of a point light in a 3D map scene"
      },
      {
        "node_name": "QgsLayoutItem3DMap",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsLayoutItem3DMap.html",
        "description": "Implements support of 3D map views in print layouts"
      },
      {
        "node_name": "Qgs3DAlgorithms",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/Qgs3DAlgorithms.html",
        "description": "QGIS 3D processing algorithm provider."
      },
      {
        "node_name": "QgsAbstractMaterialSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsAbstractMaterialSettings.html",
        "description": "Abstract base class for material settings."
      },
      {
        "node_name": "QgsGoochMaterialSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsGoochMaterialSettings.html",
        "description": "Basic shading material used for rendering based on the Phong shading model with three color components: ambient, diffuse and specular."
      },
      {
        "node_name": "QgsMaterialContext",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsMaterialContext.html",
        "description": "Context settings for a material."
      },
      {
        "node_name": "QgsMaterialRegistry",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsMaterialRegistry.html",
        "description": "Registry of available 3d material settings classes."
      },
      {
        "node_name": "QgsMaterialSettingsAbstractMetadata",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsMaterialSettingsAbstractMetadata.html",
        "description": "Stores metadata about one 3D material settings class."
      },
      {
        "node_name": "QgsMetalRoughMaterialSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsMetalRoughMaterialSettings.html",
        "description": "A PBR metal rough shading material used for rendering."
      },
      {
        "node_name": "QgsNullMaterialSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsNullMaterialSettings.html",
        "description": "Null shading material used for rendering models and scenes with native textures."
      },
      {
        "node_name": "QgsPhongMaterialSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsPhongMaterialSettings.html",
        "description": "Basic shading material used for rendering based on the Phong shading model with three color components: ambient, diffuse and specular."
      },
      {
        "node_name": "QgsPhongTexturedMaterialSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsPhongTexturedMaterialSettings.html",
        "description": "A phong shading model with diffuse texture map."
      },
      {
        "node_name": "QgsSimpleLineMaterialSettings",
        "node_url": "https://qgis.org/pyqgis/3.40/_3d/QgsSimpleLineMaterialSettings.html",
        "description": "Basic shading material used for rendering simple lines as solid line components."
      }
    ]
  }
]